### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.ILoggerExtensions
  commentId: T:Songhay.Extensions.ILoggerExtensions
  id: ILoggerExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger,System.String)
  - Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData``1(Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.ILoggerExtensions.LogInformationNewLine(Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
  - Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue``1(Microsoft.Extensions.Logging.ILogger,``0)
  - Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger,System.String)
  - Songhay.Extensions.ILoggerExtensions.LogTraceNewLine(Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: ILoggerExtensions
  nameWithType: ILoggerExtensions
  fullName: Songhay.Extensions.ILoggerExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ILoggerExtensions
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 15
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Extensions of <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>

    to assist with “structured logging.”
  remarks: "For a video overview, see https://www.youtube.com/watch?v=NlBjVJPkT6M \U0001F3A5"
  example: []
  syntax:
    content: public static class ILoggerExtensions
    content.vb: Public Module ILoggerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger,System.String)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger,System.String)
  id: LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogErrorForMissingData(ILogger?, string)
  nameWithType: ILoggerExtensions.LogErrorForMissingData(ILogger?, string)
  fullName: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogErrorForMissingData
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 22
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Calls <xref href="Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger%2cSystem.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> for missing data.
  example: []
  syntax:
    content: public static void LogErrorForMissingData(this ILogger? logger, string caption)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: caption
      type: System.String
      description: The caption.
    content.vb: Public Shared Sub LogErrorForMissingData(logger As ILogger, caption As String)
  overload: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData*
  nameWithType.vb: ILoggerExtensions.LogErrorForMissingData(ILogger, String)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger, String)
  name.vb: LogErrorForMissingData(ILogger, String)
- uid: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData``1(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData``1(Microsoft.Extensions.Logging.ILogger)
  id: LogErrorForMissingData``1(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogErrorForMissingData<TData>(ILogger?)
  nameWithType: ILoggerExtensions.LogErrorForMissingData<TData>(ILogger?)
  fullName: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData<TData>(Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogErrorForMissingData
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 32
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Calls <xref href="Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger%2cSystem.String%2cSystem.Object%5b%5d)" data-throw-if-not-resolved="false"></xref> for missing data.
  example: []
  syntax:
    content: public static void LogErrorForMissingData<TData>(this ILogger? logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    typeParameters:
    - id: TData
      description: The type of the data.
    content.vb: Public Shared Sub LogErrorForMissingData(Of TData)(logger As ILogger)
  overload: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData*
  nameWithType.vb: ILoggerExtensions.LogErrorForMissingData(Of TData)(ILogger)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Of TData)(Microsoft.Extensions.Logging.ILogger)
  name.vb: LogErrorForMissingData(Of TData)(ILogger)
- uid: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
  id: LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogNewLine(ILogger?, LogLevel)
  nameWithType: ILoggerExtensions.LogNewLine(ILogger?, LogLevel)
  fullName: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger?, Microsoft.Extensions.Logging.LogLevel)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogNewLine
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 44
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Logs <xref href="System.Environment.NewLine" data-throw-if-not-resolved="false"></xref> for human readability.
  example: []
  syntax:
    content: public static void LogNewLine(this ILogger? logger, LogLevel level)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: level
      type: Microsoft.Extensions.Logging.LogLevel
      description: The level.
    content.vb: Public Shared Sub LogNewLine(logger As ILogger, level As LogLevel)
  overload: Songhay.Extensions.ILoggerExtensions.LogNewLine*
  nameWithType.vb: ILoggerExtensions.LogNewLine(ILogger, LogLevel)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel)
  name.vb: LogNewLine(ILogger, LogLevel)
- uid: Songhay.Extensions.ILoggerExtensions.LogInformationNewLine(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogInformationNewLine(Microsoft.Extensions.Logging.ILogger)
  id: LogInformationNewLine(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogInformationNewLine(ILogger?)
  nameWithType: ILoggerExtensions.LogInformationNewLine(ILogger?)
  fullName: Songhay.Extensions.ILoggerExtensions.LogInformationNewLine(Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogInformationNewLine
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 77
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger%2cMicrosoft.Extensions.Logging.LogLevel)" data-throw-if-not-resolved="false"></xref>

    for <xref href="Microsoft.Extensions.Logging.LogLevel.Information" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void LogInformationNewLine(this ILogger? logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    content.vb: Public Shared Sub LogInformationNewLine(logger As ILogger)
  overload: Songhay.Extensions.ILoggerExtensions.LogInformationNewLine*
  nameWithType.vb: ILoggerExtensions.LogInformationNewLine(ILogger)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogInformationNewLine(Microsoft.Extensions.Logging.ILogger)
  name.vb: LogInformationNewLine(ILogger)
- uid: Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue``1(Microsoft.Extensions.Logging.ILogger,``0)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue``1(Microsoft.Extensions.Logging.ILogger,``0)
  id: LogTraceDataTypeAndValue``1(Microsoft.Extensions.Logging.ILogger,``0)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTraceDataTypeAndValue<TData>(ILogger?, TData?)
  nameWithType: ILoggerExtensions.LogTraceDataTypeAndValue<TData>(ILogger?, TData?)
  fullName: Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue<TData>(Microsoft.Extensions.Logging.ILogger?, TData?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogTraceDataTypeAndValue
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 88
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Traces data type and value.
  remarks: For the best results, ensure that the <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref> method is properly overridden.
  example: []
  syntax:
    content: public static void LogTraceDataTypeAndValue<TData>(this ILogger? logger, TData? data)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: data
      type: '{TData}'
      description: The data.
    typeParameters:
    - id: TData
      description: The type of the data.
    content.vb: Public Shared Sub LogTraceDataTypeAndValue(Of TData)(logger As ILogger, data As TData)
  overload: Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue*
  nameWithType.vb: ILoggerExtensions.LogTraceDataTypeAndValue(Of TData)(ILogger, TData)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue(Of TData)(Microsoft.Extensions.Logging.ILogger, TData)
  name.vb: LogTraceDataTypeAndValue(Of TData)(ILogger, TData)
- uid: Songhay.Extensions.ILoggerExtensions.LogTraceNewLine(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogTraceNewLine(Microsoft.Extensions.Logging.ILogger)
  id: LogTraceNewLine(Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTraceNewLine(ILogger?)
  nameWithType: ILoggerExtensions.LogTraceNewLine(ILogger?)
  fullName: Songhay.Extensions.ILoggerExtensions.LogTraceNewLine(Microsoft.Extensions.Logging.ILogger?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogTraceNewLine
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 99
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger%2cMicrosoft.Extensions.Logging.LogLevel)" data-throw-if-not-resolved="false"></xref>

    for <xref href="Microsoft.Extensions.Logging.LogLevel.Trace" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void LogTraceNewLine(this ILogger? logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    content.vb: Public Shared Sub LogTraceNewLine(logger As ILogger)
  overload: Songhay.Extensions.ILoggerExtensions.LogTraceNewLine*
  nameWithType.vb: ILoggerExtensions.LogTraceNewLine(ILogger)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogTraceNewLine(Microsoft.Extensions.Logging.ILogger)
  name.vb: LogTraceNewLine(ILogger)
- uid: Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger,System.String)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger,System.String)
  id: LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ILoggerExtensions
  langs:
  - csharp
  - vb
  name: LogTraceMethodCall(ILogger?, string?)
  nameWithType: ILoggerExtensions.LogTraceMethodCall(ILogger?, string?)
  fullName: Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ILoggerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LogTraceMethodCall
    path: ../SonghayCore/Extensions/ILoggerExtensions.cs
    startLine: 106
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Conventional trace of the specified method call.
  example: []
  syntax:
    content: public static void LogTraceMethodCall(this ILogger? logger, string? methodName)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: methodName
      type: System.String
      description: Name of the method.
    content.vb: Public Shared Sub LogTraceMethodCall(logger As ILogger, methodName As String)
  overload: Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall*
  nameWithType.vb: ILoggerExtensions.LogTraceMethodCall(ILogger, String)
  fullName.vb: Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger, String)
  name.vb: LogTraceMethodCall(ILogger, String)
references:
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  commentId: M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loggerextensions.logerror#microsoft-extensions-logging-loggerextensions-logerror(microsoft-extensions-logging-ilogger-system-string-system-object())
  name: LogError(ILogger, string, params object[])
  nameWithType: LoggerExtensions.LogError(ILogger, string, params object[])
  fullName: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, string, params object[])
  nameWithType.vb: LoggerExtensions.LogError(ILogger, String, ParamArray Object())
  fullName.vb: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger, String, ParamArray Object())
  name.vb: LogError(ILogger, String, ParamArray Object())
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
    name: LogError
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loggerextensions.logerror#microsoft-extensions-logging-loggerextensions-logerror(microsoft-extensions-logging-ilogger-system-string-system-object())
  - name: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])
    name: LogError
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loggerextensions.logerror#microsoft-extensions-logging-loggerextensions-logerror(microsoft-extensions-logging-ilogger-system-string-system-object())
  - name: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData*
  commentId: Overload:Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogErrorForMissingData_Microsoft_Extensions_Logging_ILogger_System_String_
  name: LogErrorForMissingData
  nameWithType: ILoggerExtensions.LogErrorForMissingData
  fullName: Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Environment.NewLine
  commentId: P:System.Environment.NewLine
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.environment.newline
  name: NewLine
  nameWithType: Environment.NewLine
  fullName: System.Environment.NewLine
- uid: Songhay.Extensions.ILoggerExtensions.LogNewLine*
  commentId: Overload:Songhay.Extensions.ILoggerExtensions.LogNewLine
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogNewLine_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_LogLevel_
  name: LogNewLine
  nameWithType: ILoggerExtensions.LogNewLine
  fullName: Songhay.Extensions.ILoggerExtensions.LogNewLine
- uid: Microsoft.Extensions.Logging.LogLevel
  commentId: T:Microsoft.Extensions.Logging.LogLevel
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  name: LogLevel
  nameWithType: LogLevel
  fullName: Microsoft.Extensions.Logging.LogLevel
- uid: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
  commentId: M:Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
  isExternal: true
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogNewLine_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_LogLevel_
  name: LogNewLine(ILogger, LogLevel)
  nameWithType: ILoggerExtensions.LogNewLine(ILogger, LogLevel)
  fullName: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger, Microsoft.Extensions.Logging.LogLevel)
  spec.csharp:
  - uid: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
    name: LogNewLine
    href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogNewLine_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_LogLevel_
  - name: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)
    name: LogNewLine
    href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogNewLine_Microsoft_Extensions_Logging_ILogger_Microsoft_Extensions_Logging_LogLevel_
  - name: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Logging.LogLevel
    name: LogLevel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel
  - name: )
- uid: Microsoft.Extensions.Logging.LogLevel.Information
  commentId: F:Microsoft.Extensions.Logging.LogLevel.Information
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel#microsoft-extensions-logging-loglevel-information
  name: Information
  nameWithType: LogLevel.Information
  fullName: Microsoft.Extensions.Logging.LogLevel.Information
- uid: Songhay.Extensions.ILoggerExtensions.LogInformationNewLine*
  commentId: Overload:Songhay.Extensions.ILoggerExtensions.LogInformationNewLine
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogInformationNewLine_Microsoft_Extensions_Logging_ILogger_
  name: LogInformationNewLine
  nameWithType: ILoggerExtensions.LogInformationNewLine
  fullName: Songhay.Extensions.ILoggerExtensions.LogInformationNewLine
- uid: Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue*
  commentId: Overload:Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogTraceDataTypeAndValue__1_Microsoft_Extensions_Logging_ILogger___0_
  name: LogTraceDataTypeAndValue
  nameWithType: ILoggerExtensions.LogTraceDataTypeAndValue
  fullName: Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue
- uid: '{TData}'
  commentId: '!:TData'
  definition: TData
  name: TData
  nameWithType: TData
  fullName: TData
- uid: TData
  commentId: '!:TData'
  name: TData
  nameWithType: TData
  fullName: TData
- uid: Microsoft.Extensions.Logging.LogLevel.Trace
  commentId: F:Microsoft.Extensions.Logging.LogLevel.Trace
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel#microsoft-extensions-logging-loglevel-trace
  name: Trace
  nameWithType: LogLevel.Trace
  fullName: Microsoft.Extensions.Logging.LogLevel.Trace
- uid: Songhay.Extensions.ILoggerExtensions.LogTraceNewLine*
  commentId: Overload:Songhay.Extensions.ILoggerExtensions.LogTraceNewLine
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogTraceNewLine_Microsoft_Extensions_Logging_ILogger_
  name: LogTraceNewLine
  nameWithType: ILoggerExtensions.LogTraceNewLine
  fullName: Songhay.Extensions.ILoggerExtensions.LogTraceNewLine
- uid: Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall*
  commentId: Overload:Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall
  href: Songhay.Extensions.ILoggerExtensions.html#Songhay_Extensions_ILoggerExtensions_LogTraceMethodCall_Microsoft_Extensions_Logging_ILogger_System_String_
  name: LogTraceMethodCall
  nameWithType: ILoggerExtensions.LogTraceMethodCall
  fullName: Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall
