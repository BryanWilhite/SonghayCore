{
  "LICENSE.html": {
    "href": "LICENSE.html",
    "title": "| SonghayCore API",
    "keywords": "MIT License Copyright (c) 2025 Bryan Wilhite Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "README.html": {
    "href": "README.html",
    "title": "SonghayCore | SonghayCore API",
    "keywords": "SonghayCore The Core code to install as a NuGet package for all of my studio Solutions. Anyone who may be reading this \uD83D\uDC40 is free to do the same. This package is based on a project file that supports multi-targeting, declaring support for net8.0. NuGet package \uD83D\uDCE6: SonghayCore documentation \uD83D\uDCDA: SonghayCore API coverlet test coverage \uD83D\uDD2C☔: [report] core reusable, opinionated concerns Songhay.Hosting One of the most important additions to .NET came in .NET 6.0 (circa 2021): the .NET Generic Host [\uD83D\uDCD6 docs]. This host concept from Microsoft allows developers to not have to reinvent: Dependency injection (DI) Logging Configuration App shutdown IHostedService implementations (for long-running background tasks [\uD83D\uDCD6 docs ]) All ASP.NET developers expect to get these things “for free” and, finally, Microsoft is basically letting all .NET developers get these things for free. This Core recognizes the .NET Generic Host, stating with the DefaultHostedService class (see Songhay.Extensions below for more details). Songhay.Diagnostics This Core is concerned with tracing as well as logging. Logging concerns should be logically above this Core. TraceSources and TraceSourceExtensions define how tracing should be implemented with a bias toward using all source levels. When tracing is not configured for this Core then it will be ignored without throwing exceptions. For a review of the organizational difference between tracing and logging, see “Tracing vs Logging vs Monitoring: What’s the Difference?” by Chrissy Kidd. Documentation \uD83D\uDCDA: Songhay.Diagnostics Songhay.Extensions The Songhay System uses imperative C# code with a view to make it more functional in an effort to control complexity and enhance maintainability. The preference for extension methods encourages stateless, reusable routines (many of them are “pure” functions). Notable extensions: IConfigurationExtensions — defines shared routines based on conventions around the .NET Generic Host [\uD83D\uDCD6 docs]. IConfigurationBuilderExtensions — defines shared routines for application configuration building under .NET Standard. ILoggerExtensions — defines shared routines based on conventions around the .NET Generic Host [\uD83D\uDCD6 docs]. HttpRequestMessageExtensions — defines shared routines for HTTP access under .NET Standard with a lazy-loaded HttpClient. Routines for Azure Blob Storage are included here. HttpWebRequestExtensions — defines shared routines for HTTP access for the legacy .NET Framework. There is support for URI templates (to be used with RestApiMetadata) in the form of extension methods, running on top of Tavis.UriTemplates. Documentation \uD83D\uDCDA: Songhay.Extensions Songhay.Models The Core models of the Songhay System define types for MIME, XHTML, OPML, REST, the Repository, the Display Item (for WPF and other MVVM solutions), etc. The Core models are “anemic” by design (there are very few abstract classes)—any logic would be found first in an Extension Method. Notable models: DisplayItemModel — defines the conventional way to display data. MenuDisplayItemModel — defines the conventional way to display nested/grouped data. RestApiMetadata — defines conventional REST API metadata. Documentation \uD83D\uDCDA: Songhay.Models Songhay.Xml The “core” of the Core is concern for XML. The Songhay System started out as utilities around XPathDocument and grew into LINQ for XML—over XDocument. Documentation \uD83D\uDCDA: Songhay.Xml satellite packages SonghayCore.xUnit Defines reusable class definitions for xUnit. Featured is the ProjectFileDataAttribute, allowing test data files to be loaded from a relative path. NuGet package \uD83D\uDCE6: SonghayCore.xUnit Documentation \uD83D\uDCDA: Songhay.Tests SonghayCore.Newtonsoft Core reusable, opinionated Newtonsoft concerns for my C# projects. GitHub repo: https://github.com/BryanWilhite/SonghayCore.Newtonsoft NuGet package \uD83D\uDCE6: SonghayCore.Newtonsoft Studio packages dependent on SonghayCore graph BT netstandard2[.NET Standard 2.0] net6[.NET 6.0] 1[`SonghayCore`] 2[`SonghayCore.Newtonsoft`] net6-->1 netstandard2-->2 2-..->|optional addition|1 1-->3[`SonghayCore.xUnit`] 1-->4[`Songhay.DataAccess`] 1-->5[`Songhay.Feeds`] 1-->6[`Songhay.Publications`] 1-->7[`Songhay.Social`] @BryanWilhite"
  },
  "latest/Songhay.Abstractions.IActivity-1.html": {
    "href": "latest/Songhay.Abstractions.IActivity-1.html",
    "title": "Interface IActivity<TInput> | SonghayCore API",
    "keywords": "Interface IActivity<TInput> Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions. public interface IActivity<in TInput> Type Parameters TInput The type of the input. Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For more detail, see “Songhay System Activities example” [https://github.com/BryanWilhite/Songhay.HelloWorlds.Activities] Methods Start(TInput?) Starts with the specified input. void Start(TInput? input) Parameters input TInput The input."
  },
  "latest/Songhay.Abstractions.IActivity-2.html": {
    "href": "latest/Songhay.Abstractions.IActivity-2.html",
    "title": "Interface IActivity<TInput, TOutput> | SonghayCore API",
    "keywords": "Interface IActivity<TInput, TOutput> Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity with output, optionally for IHost conventions. public interface IActivity<in TInput, out TOutput> Type Parameters TInput The type of the input. TOutput The type of the output. Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Methods Start(TInput?) Starts with the specified input and synchronously returns TOutput. TOutput? Start(TInput? input) Parameters input TInput The input. Returns TOutput See Also IActivity<TInput>"
  },
  "latest/Songhay.Abstractions.IActivity.html": {
    "href": "latest/Songhay.Abstractions.IActivity.html",
    "title": "Interface IActivity | SonghayCore API",
    "keywords": "Interface IActivity Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions. public interface IActivity Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For more detail, see “Songhay System Activities example” [https://github.com/BryanWilhite/Songhay.HelloWorlds.Activities] Methods Start() Starts with the specified input. void Start()"
  },
  "latest/Songhay.Abstractions.IActivityHelpDisplay.html": {
    "href": "latest/Songhay.Abstractions.IActivityHelpDisplay.html",
    "title": "Interface IActivityHelpDisplay | SonghayCore API",
    "keywords": "Interface IActivityHelpDisplay Namespace Songhay.Abstractions Assembly SonghayCore.dll Adds optional help-display text support to IActivity* types. public interface IActivityHelpDisplay Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties CachedHelpText The cached help text. string? CachedHelpText { get; set; } Property Value string Remarks Instead of calling ToHelpDisplayText(IConfiguration?, int) more than once, return this member. Methods DisplayHelp() Display the help text. string DisplayHelp() Returns string"
  },
  "latest/Songhay.Abstractions.IActivityOutputOnly-1.html": {
    "href": "latest/Songhay.Abstractions.IActivityOutputOnly-1.html",
    "title": "Interface IActivityOutputOnly<TOutput> | SonghayCore API",
    "keywords": "Interface IActivityOutputOnly<TOutput> Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions, with Task support. public interface IActivityOutputOnly<out TOutput> Type Parameters TOutput The type of the output. Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For detail around why this definition exists, see https://github.com/BryanWilhite/SonghayCore/issues/83 Methods Start() Starts the IActivity asynchronously. TOutput? Start() Returns TOutput See Also IActivity"
  },
  "latest/Songhay.Abstractions.IActivityOutputOnlyTask-1.html": {
    "href": "latest/Songhay.Abstractions.IActivityOutputOnlyTask-1.html",
    "title": "Interface IActivityOutputOnlyTask<TOutput> | SonghayCore API",
    "keywords": "Interface IActivityOutputOnlyTask<TOutput> Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions, with Task support. public interface IActivityOutputOnlyTask<TOutput> Type Parameters TOutput The type of the output. Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For detail around why this definition exists, see https://github.com/BryanWilhite/SonghayCore/issues/83 Methods StartAsync() Starts the IActivity asynchronously. Task<TOutput?> StartAsync() Returns Task<TOutput> See Also IActivity"
  },
  "latest/Songhay.Abstractions.IActivityTask-1.html": {
    "href": "latest/Songhay.Abstractions.IActivityTask-1.html",
    "title": "Interface IActivityTask<TInput> | SonghayCore API",
    "keywords": "Interface IActivityTask<TInput> Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions, with Task support. public interface IActivityTask<in TInput> Type Parameters TInput The type of the input. Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For detail around why this definition exists, see https://github.com/BryanWilhite/SonghayCore/issues/83 Methods StartAsync(TInput?) Starts the IActivity asynchronously. Task StartAsync(TInput? input) Parameters input TInput The input. Returns Task See Also IActivity"
  },
  "latest/Songhay.Abstractions.IActivityTask-2.html": {
    "href": "latest/Songhay.Abstractions.IActivityTask-2.html",
    "title": "Interface IActivityTask<TInput, TOutput> | SonghayCore API",
    "keywords": "Interface IActivityTask<TInput, TOutput> Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions, with Task support. public interface IActivityTask<in TInput, TOutput> Type Parameters TInput The type of the input. TOutput The type of the output. Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For detail aound why this definition exists, see https://github.com/BryanWilhite/SonghayCore/issues/83 Methods StartAsync(TInput?) Starts the IActivity asynchronously. Task<TOutput?> StartAsync(TInput? input) Parameters input TInput Returns Task<TOutput> See Also IActivity"
  },
  "latest/Songhay.Abstractions.IActivityTask.html": {
    "href": "latest/Songhay.Abstractions.IActivityTask.html",
    "title": "Interface IActivityTask | SonghayCore API",
    "keywords": "Interface IActivityTask Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines an Activity, optionally for IHost conventions, with Task support. public interface IActivityTask Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For detail around why this definition exists, see https://github.com/BryanWilhite/SonghayCore/issues/83 Methods StartAsync() Starts the IActivity asynchronously. Task StartAsync() Returns Task See Also IActivity"
  },
  "latest/Songhay.Abstractions.IColorable.html": {
    "href": "latest/Songhay.Abstractions.IColorable.html",
    "title": "Interface IColorable | SonghayCore API",
    "keywords": "Interface IColorable Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines a colorable visual. public interface IColorable Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties BackgroundHex Gets or sets the background hexadecimal value. string? BackgroundHex { get; set; } Property Value string ForegroundHex Gets or sets the foreground hexadecimal value. string? ForegroundHex { get; set; } Property Value string"
  },
  "latest/Songhay.Abstractions.IGroupable.html": {
    "href": "latest/Songhay.Abstractions.IGroupable.html",
    "title": "Interface IGroupable | SonghayCore API",
    "keywords": "Interface IGroupable Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines a group-able visual public interface IGroupable Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties GroupDisplayText Display text of the Group string? GroupDisplayText { get; set; } Property Value string GroupId Identifier of the Group string? GroupId { get; set; } Property Value string IsCollapsed Returns true when group is visually collapsed bool IsCollapsed { get; set; } Property Value bool"
  },
  "latest/Songhay.Abstractions.IProgramAssemblyInfo.html": {
    "href": "latest/Songhay.Abstractions.IProgramAssemblyInfo.html",
    "title": "Interface IProgramAssemblyInfo | SonghayCore API",
    "keywords": "Interface IProgramAssemblyInfo Namespace Songhay.Abstractions Assembly SonghayCore.dll Contract for ProgramAssemblyInfo public interface IProgramAssemblyInfo Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties AssemblyCompany Gets the assembly company. string? AssemblyCompany { get; } Property Value string AssemblyCopyright Gets the assembly copyright. string? AssemblyCopyright { get; } Property Value string AssemblyDescription Gets the assembly description. string? AssemblyDescription { get; } Property Value string AssemblyProduct Gets the assembly product. string? AssemblyProduct { get; } Property Value string AssemblyTitle Gets the assembly title. string? AssemblyTitle { get; } Property Value string AssemblyVersion Gets the assembly version. string? AssemblyVersion { get; } Property Value string AssemblyVersionDetail Gets the assembly version detail. string? AssemblyVersionDetail { get; } Property Value string"
  },
  "latest/Songhay.Abstractions.IRepository.html": {
    "href": "latest/Songhay.Abstractions.IRepository.html",
    "title": "Interface IRepository | SonghayCore API",
    "keywords": "Interface IRepository Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines the repository pattern for an Entity. public interface IRepository Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks Based on the NBlog repository by Chris Fulstow [https://github.com/ChrisFulstow/NBlog/blob/master/NBlog.Web/Application/Storage/IRepository.cs] Methods DeleteEntity<TEntity>(object?) Deletes the entity. void DeleteEntity<TEntity>(object? key) where TEntity : class, new() Parameters key object The key. Type Parameters TEntity The type of the entity. HasEntity<TEntity>(object?) Determines whether the specified key has entity. bool HasEntity<TEntity>(object? key) where TEntity : class, new() Parameters key object The key. Returns bool Type Parameters TEntity The type of the entity. LoadAll<TEntity>() Loads all. IEnumerable<TEntity?> LoadAll<TEntity>() where TEntity : class, new() Returns IEnumerable<TEntity> Type Parameters TEntity The type of the entity. LoadSingle<TEntity>(object?) Loads the single. TEntity? LoadSingle<TEntity>(object? key) where TEntity : class, new() Parameters key object The key. Returns TEntity Type Parameters TEntity The type of the entity. SaveEntity<TEntity>(TEntity?) Saves the entity. void SaveEntity<TEntity>(TEntity? item) where TEntity : class, new() Parameters item TEntity The item. Type Parameters TEntity The type of the entity."
  },
  "latest/Songhay.Abstractions.ISelectable.html": {
    "href": "latest/Songhay.Abstractions.ISelectable.html",
    "title": "Interface ISelectable | SonghayCore API",
    "keywords": "Interface ISelectable Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines a selectable visual. public interface ISelectable Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties IsDefaultSelection Gets or sets whether this is default selection. bool? IsDefaultSelection { get; set; } Property Value bool? IsEnabled Gets or sets whether this is enabled. bool? IsEnabled { get; set; } Property Value bool? IsSelected Gets or sets whether this is selected. bool? IsSelected { get; set; } Property Value bool?"
  },
  "latest/Songhay.Abstractions.ISortable.html": {
    "href": "latest/Songhay.Abstractions.ISortable.html",
    "title": "Interface ISortable | SonghayCore API",
    "keywords": "Interface ISortable Namespace Songhay.Abstractions Assembly SonghayCore.dll Defines a sortable visual. public interface ISortable Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties SortOrdinal Gets or sets the sort ordinal. byte SortOrdinal { get; set; } Property Value byte"
  },
  "latest/Songhay.Abstractions.ISyndicatable.html": {
    "href": "latest/Songhay.Abstractions.ISyndicatable.html",
    "title": "Interface ISyndicatable | SonghayCore API",
    "keywords": "Interface ISyndicatable Namespace Songhay.Abstractions Assembly SonghayCore.dll Specifies that a Model supports syndication. public interface ISyndicatable Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Methods GetSyndicationFeed() Gets the syndication feed. SyndicationFeed? GetSyndicationFeed() Returns SyndicationFeed GetSyndicationItem() Gets the syndication item. SyndicationItem? GetSyndicationItem() Returns SyndicationItem"
  },
  "latest/Songhay.Abstractions.ITemporal.html": {
    "href": "latest/Songhay.Abstractions.ITemporal.html",
    "title": "Interface ITemporal | SonghayCore API",
    "keywords": "Interface ITemporal Namespace Songhay.Abstractions Assembly SonghayCore.dll Adds temporal properties to an item public interface ITemporal Extension Methods ITemporalExtensions.SetDefaults(ITemporal) ITemporalExtensions.SetDefaults(ITemporal?, DateTime?) NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties EndDate End/expiration DateTime of the item. DateTime? EndDate { get; set; } Property Value DateTime? InceptDate Origin DateTime of the item. DateTime? InceptDate { get; set; } Property Value DateTime? ModificationDate Modification/editorial DateTime of the item. DateTime? ModificationDate { get; set; } Property Value DateTime?"
  },
  "latest/Songhay.Abstractions.html": {
    "href": "latest/Songhay.Abstractions.html",
    "title": "Namespace Songhay.Abstractions | SonghayCore API",
    "keywords": "Namespace Songhay.Abstractions Interfaces IActivity Defines an Activity, optionally for IHost conventions. IActivityHelpDisplay Adds optional help-display text support to IActivity* types. IActivityOutputOnlyTask<TOutput> Defines an Activity, optionally for IHost conventions, with Task support. IActivityOutputOnly<TOutput> Defines an Activity, optionally for IHost conventions, with Task support. IActivityTask Defines an Activity, optionally for IHost conventions, with Task support. IActivityTask<TInput> Defines an Activity, optionally for IHost conventions, with Task support. IActivityTask<TInput, TOutput> Defines an Activity, optionally for IHost conventions, with Task support. IActivity<TInput> Defines an Activity, optionally for IHost conventions. IActivity<TInput, TOutput> Defines an Activity with output, optionally for IHost conventions. IColorable Defines a colorable visual. IGroupable Defines a group-able visual IProgramAssemblyInfo Contract for ProgramAssemblyInfo IRepository Defines the repository pattern for an Entity. ISelectable Defines a selectable visual. ISortable Defines a sortable visual. ISyndicatable Specifies that a Model supports syndication. ITemporal Adds temporal properties to an item"
  },
  "latest/Songhay.AzureActiveDirectoryUtility.html": {
    "href": "latest/Songhay.AzureActiveDirectoryUtility.html",
    "title": "Class AzureActiveDirectoryUtility | SonghayCore API",
    "keywords": "Class AzureActiveDirectoryUtility Namespace Songhay Assembly SonghayCore.dll Shared routines for Azure Active Directory conventions. public class AzureActiveDirectoryUtility Inheritance object AzureActiveDirectoryUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks These utilities are expecting a JSON string of the form: { \"ActiveDirectoryAccess\": { \"ApiBase\": \"https://login.microsoftonline.com/\", \"ClaimsSet\": { \"grant_type\": \"client_credentials\", \"scope\": \"https://vault.azure.net/.default\", \"client_id\": \"active-directory-registration-app-id\", \"client_secret\": \"active-directory-registration-app-secret\", \"tenantOrDirectoryId\": \"active-directory-registration-app-directory-id\" }, \"UriTemplates\": { \"UriPathTemplateForToken\": \"{tenantOrDirectoryId}/oauth2/v2.0/token\" } }, \"AzureKeyVault\": { \"ApiBase\": \"https://your-secrets.vault.azure.net/\", \"ClaimsSet\": { \"queryPairForApiVersion\": \"api-version=2016-10-01\", \"secretNameForMySecret\": \"my-secret\" }, \"UriTemplates\": { \"UriPathTemplateForSecret\": \"secrets/{secretName}\" } } } For security reasons, a very small precaution, this class will not hold any fields. Methods GetActiveDirectoryAccessMetadata(string?) Returns the RestApiMetadata corresponding to the conventional property name \"ActiveDirectoryAccess\". public static RestApiMetadata GetActiveDirectoryAccessMetadata(string? json) Parameters json string JSON of the format shown in the remarks of this class definition. Returns RestApiMetadata GetAzureKeyVaultMetadata(string?) Returns the RestApiMetadata corresponding to the conventional property name \"ActiveDirectoryAccess\". public static RestApiMetadata GetAzureKeyVaultMetadata(string? json) Parameters json string JSON of the format shown in the remarks of this class definition. Returns RestApiMetadata"
  },
  "latest/Songhay.AzureBlobStorageRestApiUtility.html": {
    "href": "latest/Songhay.AzureBlobStorageRestApiUtility.html",
    "title": "Class AzureBlobStorageRestApiUtility | SonghayCore API",
    "keywords": "Class AzureBlobStorageRestApiUtility Namespace Songhay Assembly SonghayCore.dll Shared REST routines for Azure BLOB Storage. public static class AzureBlobStorageRestApiUtility Inheritance object AzureBlobStorageRestApiUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeleteBlobAsync(string, string, string) DELETEs the BLOB of the specified ‘file’ name. public static Task DeleteBlobAsync(string connectionString, string containerName, string fileName) Parameters connectionString string Azure BLOB Storage connection string containerName string Azure BLOB Storage container name fileName string BLOB ‘file’ name Returns Task Exceptions HttpRequestException DownloadBlobToStringAsync(string, string, string) GETs the BLOB of the specified ‘file’ name. public static Task<string> DownloadBlobToStringAsync(string connectionString, string containerName, string fileName) Parameters connectionString string Azure BLOB Storage connection string containerName string Azure BLOB Storage container name fileName string BLOB ‘file’ name Returns Task<string> Returns the string contents of the file. Exceptions HttpRequestException GetCloudStorageMetadata(string) Gets the conventional Azure BLOB Storage metadata from the specified connection string. public static (string accountName, string accountKey, string apiVersion) GetCloudStorageMetadata(string connectionString) Parameters connectionString string Azure BLOB Storage connection string Returns (string accountName, string accountKey, string apiVersion) Returns conventional named tuple. Exceptions NullReferenceException DataException GetStorageUriBuilder(string, string) Builds the URI for Azure BLOB Storage. public static UriBuilder GetStorageUriBuilder(string accountName, string containerName) Parameters accountName string Azure BLOB Storage account name containerName string Azure BLOB Storage container name Returns UriBuilder Returns the UriBuilder ListContainerAsync(string, string) Lists the contents of the specified BLOB container. public static Task<string> ListContainerAsync(string connectionString, string containerName) Parameters connectionString string Azure BLOB Storage connection string containerName string Azure BLOB Storage container name Returns Task<string> Returns the contents of the container as an XMLstring. Exceptions HttpRequestException UploadBlobAsync(string, string, string, string) PUTs the BLOB of the specified ‘file’ name. public static Task UploadBlobAsync(string connectionString, string containerName, string fileName, string content) Parameters connectionString string Azure BLOB Storage connection string containerName string Azure BLOB Storage container name fileName string BLOB ‘file’ name content string The string contents of the ‘file.’ Returns Task Exceptions HttpRequestException"
  },
  "latest/Songhay.AzureKeyVaultRestApiUtility.html": {
    "href": "latest/Songhay.AzureKeyVaultRestApiUtility.html",
    "title": "Class AzureKeyVaultRestApiUtility | SonghayCore API",
    "keywords": "Class AzureKeyVaultRestApiUtility Namespace Songhay Assembly SonghayCore.dll Shared REST routines for Azure BLOB Storage. public static class AzureKeyVaultRestApiUtility Inheritance object AzureKeyVaultRestApiUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See “How To Access Azure Key Vault Secrets Through Rest API Using Postman” by Anupam Maiti [ https://www.c-sharpcorner.com/article/how-to-access-azure-key-vault-secrets-through-rest-api-using-postman/ ] Methods GetAccessTokenAsync(Uri?, Dictionary<string, string>?) Calls the specified REST endpoint, using OAuth to authenticate the specified access data. public static Task<string> GetAccessTokenAsync(Uri? accessUri, Dictionary<string, string>? accessData) Parameters accessUri Uri the location of the Azure Active Directory endpoint accessData Dictionary<string, string> the data required to POST to the specified endpoint Returns Task<string> Remarks The conventional way to generate the accessUri is via RestApiMetadata, its ToAzureActiveDirectoryAccessTokenUri(RestApiMetadata?) method. The conventional way to generate the accessData is via RestApiMetadata, its ToAzureActiveDirectoryAccessTokenData(RestApiMetadata?) method. GetSecretAsync(string, Uri) Calls REST endpoint under {vaultName}.vault.azure.net to get a secret from the specified vault. public static Task<string> GetSecretAsync(string accessToken, Uri secretUri) Parameters accessToken string the JSON obtained from GetAccessTokenAsync(Uri?, Dictionary<string, string>?) secretUri Uri the location of the Azure Key Vault endpoint Returns Task<string> Remarks The conventional way to generate the secretUri is via RestApiMetadata, its ToAzureKeyVaultSecretUri(RestApiMetadata?, string) method."
  },
  "latest/Songhay.Diagnostics.TraceSources.html": {
    "href": "latest/Songhay.Diagnostics.TraceSources.html",
    "title": "Class TraceSources | SonghayCore API",
    "keywords": "Class TraceSources Namespace Songhay.Diagnostics Assembly SonghayCore.dll Singleton wrapper for TraceSource public class TraceSources Inheritance object TraceSources Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) TraceSourcesExtensions.GetConfiguredTraceSource(TraceSources?) TraceSourcesExtensions.GetConfiguredTraceSource(TraceSources?, IConfiguration?) TraceSourcesExtensions.GetConfiguredTraceSource(TraceSources?, IConfiguration?, string?) Remarks Based on Fonlow.Diagnostics by Zijian Huang [https://github.com/zijianhuang/Fonlow.Diagnostics] Also see “Use TraceSource Efficiently” [http://www.codeproject.com/Tips/1071853/Use-TraceSource-Efficiently] Fields DefaultTraceSourceName The conventional TraceSource name. public const string DefaultTraceSourceName = \"rx-trace\" Field Value string Properties ConfiguredTraceSourceName The configured trace source name public static string? ConfiguredTraceSourceName { get; set; } Property Value string Instance Gets the instance. public static TraceSources Instance { get; } Property Value TraceSources IsConfiguredTraceSourceNameLoaded The is configured trace source name loaded? public static bool IsConfiguredTraceSourceNameLoaded { get; } Property Value bool this[string?] Gets the TraceSource with the specified name. public TraceSource? this[string? name] { get; } Parameters name string The name. Property Value TraceSource Methods GetTraceSource(string?) Gets the trace source. public TraceSource? GetTraceSource(string? name) Parameters name string The name. Returns TraceSource GetTraceSourceFromConfiguredName() Gets the name of the trace source from configuration. public TraceSource? GetTraceSourceFromConfiguredName() Returns TraceSource Remarks When the trace source name is not configured then DefaultTraceSourceName is used."
  },
  "latest/Songhay.Diagnostics.html": {
    "href": "latest/Songhay.Diagnostics.html",
    "title": "Namespace Songhay.Diagnostics | SonghayCore API",
    "keywords": "Namespace Songhay.Diagnostics Classes TraceSources Singleton wrapper for TraceSource"
  },
  "latest/Songhay.Exceptions.CsvParseException.html": {
    "href": "latest/Songhay.Exceptions.CsvParseException.html",
    "title": "Class CsvParseException | SonghayCore API",
    "keywords": "Class CsvParseException Namespace Songhay.Exceptions Assembly SonghayCore.dll Exception for CSV parsing in CsvSplit(string?). public class CsvParseException : Exception, ISerializable Inheritance object Exception CsvParseException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Constructors CsvParseException(string) Initializes a new instance of the CsvParseException class. public CsvParseException(string message) Parameters message string The message. CsvParseException(string, Exception) Initializes a new instance of the CsvParseException class. public CsvParseException(string message, Exception innerException) Parameters message string The message. innerException Exception The inner exception."
  },
  "latest/Songhay.Exceptions.html": {
    "href": "latest/Songhay.Exceptions.html",
    "title": "Namespace Songhay.Exceptions | SonghayCore API",
    "keywords": "Namespace Songhay.Exceptions Classes CsvParseException Exception for CSV parsing in CsvSplit(string?)."
  },
  "latest/Songhay.Extensions.ArrayExtensions.html": {
    "href": "latest/Songhay.Extensions.ArrayExtensions.html",
    "title": "Class ArrayExtensions | SonghayCore API",
    "keywords": "Class ArrayExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Array. public static class ArrayExtensions Inheritance object ArrayExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Next<T>(Array?, T?) Gets the next item in the specified Array. public static T? Next<T>(this Array? array, T? item) Parameters array Array The array. item T The item. Returns T Type Parameters T The array Type. Previous<T>(Array?, T?) Gets the previous item in the specified Array. public static T? Previous<T>(this Array? array, T? item) Parameters array Array The array. item T The item. Returns T Type Parameters T The array Type."
  },
  "latest/Songhay.Extensions.AssemblyExtensions.html": {
    "href": "latest/Songhay.Extensions.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | SonghayCore API",
    "keywords": "Class AssemblyExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Assembly. public static class AssemblyExtensions Inheritance object AssemblyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetPathFromAssembly(Assembly) Gets the path from assembly. public static string? GetPathFromAssembly(this Assembly assembly) Parameters assembly Assembly The assembly. Returns string GetPathFromAssembly(Assembly, string) Gets the path from assembly. public static string GetPathFromAssembly(this Assembly assembly, string fileSegment) Parameters assembly Assembly The assembly. fileSegment string The file segment. Returns string"
  },
  "latest/Songhay.Extensions.ByteExtensions.html": {
    "href": "latest/Songhay.Extensions.ByteExtensions.html",
    "title": "Class ByteExtensions | SonghayCore API",
    "keywords": "Class ByteExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of byte. public static class ByteExtensions Inheritance object ByteExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToStreamReader(byte[]) Converts the specified byte array to a StreamReader with UTF8. public static StreamReader ToStreamReader(this byte[] bytes) Parameters bytes byte[] the bytes Returns StreamReader ToStreamReader(byte[], Encoding) Converts the specified byte array to a StreamReader. public static StreamReader ToStreamReader(this byte[] bytes, Encoding encoding) Parameters bytes byte[] the bytes encoding Encoding the encoding Returns StreamReader Remarks This member is useful in the world of ASP.NET when there is a need to read a string from the bytes of a MultipartSection\"."
  },
  "latest/Songhay.Extensions.CharExtensions.html": {
    "href": "latest/Songhay.Extensions.CharExtensions.html",
    "title": "Class CharExtensions | SonghayCore API",
    "keywords": "Class CharExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extension of char. public static class CharExtensions Inheritance object CharExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FromCharsToString(IEnumerable<char>?) Converts an enumeration of char to string. public static string? FromCharsToString(this IEnumerable<char>? chars) Parameters chars IEnumerable<char> The IEnumerable<T> of char. Returns string"
  },
  "latest/Songhay.Extensions.ConfigurationManagerExtensions.html": {
    "href": "latest/Songhay.Extensions.ConfigurationManagerExtensions.html",
    "title": "Class ConfigurationManagerExtensions | SonghayCore API",
    "keywords": "Class ConfigurationManagerExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of ConfigurationManager public static class ConfigurationManagerExtensions Inheritance object ConfigurationManagerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Several members in this class depend on DeploymentEnvironment constants. Methods GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?) Gets the connection name from environment. public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName) Parameters collection ConnectionStringSettingsCollection The collection. unqualifiedKey string The unqualified key. environmentName string Name of the environment. Returns string GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, bool) Gets the connection name from environment. public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName, bool throwConfigurationErrorsException) Parameters collection ConnectionStringSettingsCollection The collection. unqualifiedKey string The unqualified key. environmentName string Name of the environment. throwConfigurationErrorsException bool if set to true throw configuration errors exception. Returns string GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, string?) Gets the connection name from environment. public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName, string? delimiter) Parameters collection ConnectionStringSettingsCollection The collection. unqualifiedKey string The unqualified key. environmentName string Name of the environment. delimiter string The delimiter. Returns string GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, string?, bool) Gets the connection name from environment. public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName, string? delimiter, bool throwConfigurationErrorsException) Parameters collection ConnectionStringSettingsCollection The collection. unqualifiedKey string The unqualified key. environmentName string Name of the environment. delimiter string The delimiter. throwConfigurationErrorsException bool if set to true throw configuration errors exception. Returns string GetConnectionStringSettings(ConnectionStringSettingsCollection?, string?) Gets the connection string settings. public static ConnectionStringSettings? GetConnectionStringSettings(this ConnectionStringSettingsCollection? collection, string? connectionName) Parameters collection ConnectionStringSettingsCollection The collection. connectionName string Name of the connection. Returns ConnectionStringSettings GetConnectionStringSettings(ConnectionStringSettingsCollection?, string?, bool) Gets the connection string settings. public static ConnectionStringSettings? GetConnectionStringSettings(this ConnectionStringSettingsCollection? collection, string? connectionName, bool throwConfigurationErrorsException) Parameters collection ConnectionStringSettingsCollection The collection. connectionName string Name of the connection. throwConfigurationErrorsException bool if set to true throw configuration errors exception. Returns ConnectionStringSettings GetEnvironmentName(KeyValueConfigurationCollection?) Gets the name of the conventional deployment environment. public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings) Parameters settings KeyValueConfigurationCollection The settings. Returns string GetEnvironmentName(KeyValueConfigurationCollection?, string?) Gets the name of the conventional deployment environment. public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings, string? environmentKey) Parameters settings KeyValueConfigurationCollection The settings. environmentKey string The environment key. Returns string GetEnvironmentName(KeyValueConfigurationCollection?, string?, string) Gets the name of the conventional deployment environment. public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings, string? environmentKey, string defaultEnvironmentName) Parameters settings KeyValueConfigurationCollection The settings. environmentKey string The environment key. defaultEnvironmentName string Default name of the environment. Returns string GetEnvironmentName(KeyValueConfigurationCollection?, string?, string, bool) Gets the name of the conventional deployment environment. public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings, string? environmentKey, string defaultEnvironmentName, bool throwConfigurationErrorsException) Parameters settings KeyValueConfigurationCollection The settings. environmentKey string The environment key. defaultEnvironmentName string Default name of the environment. throwConfigurationErrorsException bool if set to true throw configuration errors exception. Returns string GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?) Gets the name of the key with environment. public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName) Parameters settings KeyValueConfigurationCollection The settings. unqualifiedKey string The unqualified key. environmentName string Name of the environment. Returns string GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, bool) Gets the name of the key with environment. public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName, bool throwConfigurationErrorsException) Parameters settings KeyValueConfigurationCollection The settings. unqualifiedKey string The unqualified key. environmentName string Name of the environment. throwConfigurationErrorsException bool if set to true [throw configuration errors exception]. Returns string GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, string?) Gets the key with environment name. public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName, string? delimiter) Parameters settings KeyValueConfigurationCollection The settings. unqualifiedKey string The unqualified key. environmentName string Name of the environment. delimiter string The delimiter. Returns string GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, string?, bool) Gets the key with environment name. public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName, string? delimiter, bool throwConfigurationErrorsException) Parameters settings KeyValueConfigurationCollection The settings. unqualifiedKey string The unqualified key. environmentName string Name of the environment. delimiter string The delimiter. throwConfigurationErrorsException bool if set to true throw configuration errors exception. Returns string GetSetting(KeyValueConfigurationCollection?, string?) Gets the setting from the current KeyValueConfigurationCollection. public static string? GetSetting(this KeyValueConfigurationCollection? settings, string? key) Parameters settings KeyValueConfigurationCollection The settings. key string The key. Returns string GetSetting(KeyValueConfigurationCollection?, string?, bool) Gets the setting from the current KeyValueConfigurationCollection. public static string? GetSetting(this KeyValueConfigurationCollection? settings, string? key, bool throwConfigurationErrorsException) Parameters settings KeyValueConfigurationCollection The settings. key string The key. throwConfigurationErrorsException bool if set to true throw configuration errors exception. Returns string GetSetting(KeyValueConfigurationCollection?, string?, bool, Func<string?, string>?) Gets the setting from the current KeyValueConfigurationCollection. public static string? GetSetting(this KeyValueConfigurationCollection? settings, string? key, bool throwConfigurationErrorsException, Func<string?, string>? settingModifier) Parameters settings KeyValueConfigurationCollection The settings. key string The key. throwConfigurationErrorsException bool if set to true throw configuration errors exception. settingModifier Func<string, string> The setting modifier. Returns string ToAppSettings(XDocument?) Converts the external configuration file to the application settings KeyValueConfigurationCollection. public static KeyValueConfigurationCollection? ToAppSettings(this XDocument? externalConfigurationDoc) Parameters externalConfigurationDoc XDocument The external configuration document. Returns KeyValueConfigurationCollection ToConnectionStringSettingsCollection(XDocument?) Converts the external configuration file to the application settings ConnectionStringSettingsCollection. public static ConnectionStringSettingsCollection? ToConnectionStringSettingsCollection(this XDocument? externalConfigurationDoc) Parameters externalConfigurationDoc XDocument The external configuration document. Returns ConnectionStringSettingsCollection WithAppSettings(KeyValueConfigurationCollection?, XDocument?) Returns KeyValueConfigurationCollection with the application settings of the specified external configuration XDocument. public static KeyValueConfigurationCollection? WithAppSettings(this KeyValueConfigurationCollection? settings, XDocument? externalConfigurationDoc) Parameters settings KeyValueConfigurationCollection The settings. externalConfigurationDoc XDocument The external configuration document. Returns KeyValueConfigurationCollection WithConnectionStringSettingsCollection(ConnectionStringSettingsCollection?, XDocument?) Returns ConnectionStringSettingsCollection with the application settings of the specified external configuration XDocument. public static ConnectionStringSettingsCollection? WithConnectionStringSettingsCollection(this ConnectionStringSettingsCollection? collection, XDocument? externalConfigurationDoc) Parameters collection ConnectionStringSettingsCollection The collection. externalConfigurationDoc XDocument The external configuration document. Returns ConnectionStringSettingsCollection"
  },
  "latest/Songhay.Extensions.DataSetExtensions.html": {
    "href": "latest/Songhay.Extensions.DataSetExtensions.html",
    "title": "Class DataSetExtensions | SonghayCore API",
    "keywords": "Class DataSetExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of DataSet. public static class DataSetExtensions Inheritance object DataSetExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToFirstTableDataRows(DataSet?) Converts the DataSet into a first table data rows. public static IEnumerable<DataRow> ToFirstTableDataRows(this DataSet? dataSet) Parameters dataSet DataSet The data set. Returns IEnumerable<DataRow> ToFirstTableFirstColumn(DataSet?) Converts the DataSet into a first table first column. public static IEnumerable<string> ToFirstTableFirstColumn(this DataSet? dataSet) Parameters dataSet DataSet The data set. Returns IEnumerable<string> ToFirstTableFirstColumn<TColumn>(DataSet?) Converts the DataSet into a first table first column. public static IEnumerable<TColumn> ToFirstTableFirstColumn<TColumn>(this DataSet? dataSet) Parameters dataSet DataSet The data set. Returns IEnumerable<TColumn> Type Parameters TColumn The type of the column. ToFirstTableRows(DataSet?) Converts the DataSet into a first table rows. public static IEnumerable<KeyValuePair<string, string>> ToFirstTableRows(this DataSet? dataSet) Parameters dataSet DataSet The data set. Returns IEnumerable<KeyValuePair<string, string>> ToFirstTableRows<TKey, TValue>(DataSet?) Converts the DataSet into a first table rows. public static IEnumerable<KeyValuePair<TKey, TValue>> ToFirstTableRows<TKey, TValue>(this DataSet? dataSet) Parameters dataSet DataSet The data set. Returns IEnumerable<KeyValuePair<TKey, TValue>> Type Parameters TKey The type of the key. TValue The type of the value."
  },
  "latest/Songhay.Extensions.DateTimeExtensions.html": {
    "href": "latest/Songhay.Extensions.DateTimeExtensions.html",
    "title": "Class DateTimeExtensions | SonghayCore API",
    "keywords": "Class DateTimeExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of DateTime. public static class DateTimeExtensions Inheritance object DateTimeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks From Jon Skeet’s Miscellaneous Utility Library Copyright (c) 2004-2008 Jon Skeet and Marc Gravell. All rights reserved. [http://www.pobox.com/~skeet/csharp/miscutil] Methods April(int, int) Returns a DateTime representing the specified day in April in the specified year. public static DateTime April(this int day, int year) Parameters day int year int Returns DateTime August(int, int) Returns a DateTime representing the specified day in August in the specified year. public static DateTime August(this int day, int year) Parameters day int year int Returns DateTime December(int, int) Returns a DateTime representing the specified day in December in the specified year. public static DateTime December(this int day, int year) Parameters day int year int Returns DateTime February(int, int) Returns a DateTime representing the specified day in February in the specified year. public static DateTime February(this int day, int year) Parameters day int year int Returns DateTime GetNextWeekday(DateTime, DayOfWeek) Gets the next weekday. public static DateTime GetNextWeekday(this DateTime start, DayOfWeek day) Parameters start DateTime The start. day DayOfWeek The day. Returns DateTime Remarks by Jon Skeet For more detail, see: http://stackoverflow.com/questions/6346119/asp-net-get-the-next-tuesday January(int, int) Returns a DateTime representing the specified day in January in the specified year. public static DateTime January(this int day, int year) Parameters day int year int Returns DateTime July(int, int) Returns a DateTime representing the specified day in July in the specified year. public static DateTime July(this int day, int year) Parameters day int year int Returns DateTime June(int, int) Returns a DateTime representing the specified day in June in the specified year. public static DateTime June(this int day, int year) Parameters day int year int Returns DateTime March(int, int) Returns a DateTime representing the specified day in March in the specified year. public static DateTime March(this int day, int year) Parameters day int year int Returns DateTime May(int, int) Returns a DateTime representing the specified day in May in the specified year. public static DateTime May(this int day, int year) Parameters day int year int Returns DateTime November(int, int) Returns a DateTime representing the specified day in November in the specified year. public static DateTime November(this int day, int year) Parameters day int year int Returns DateTime October(int, int) Returns a DateTime representing the specified day in October in the specified year. public static DateTime October(this int day, int year) Parameters day int year int Returns DateTime September(int, int) Returns a DateTime representing the specified day in September in the specified year. public static DateTime September(this int day, int year) Parameters day int year int Returns DateTime ToIso8601String(DateTime) Converts the specified DateTime to the JSON-friendly ISO_8601 text format. public static string ToIso8601String(this DateTime dateTime) Parameters dateTime DateTime the DateTime Returns string Remarks \uD83D\uDCD6 https://en.wikipedia.org/wiki/ISO_8601"
  },
  "latest/Songhay.Extensions.DbDataReaderExtensions.html": {
    "href": "latest/Songhay.Extensions.DbDataReaderExtensions.html",
    "title": "Class DbDataReaderExtensions | SonghayCore API",
    "keywords": "Class DbDataReaderExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of DbDataReader public static class DbDataReaderExtensions Inheritance object DbDataReaderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetFieldValueOrDefault<TRow>(DbDataReader, string) Gets the field value or default. public static TRow? GetFieldValueOrDefault<TRow>(this DbDataReader reader, string fieldName) Parameters reader DbDataReader The reader. fieldName string Name of the field. Returns TRow Type Parameters TRow Remarks This member is a primitive alternative to using something like Dapper’s QueryAsync{TRow}, suitable for a handful of columns."
  },
  "latest/Songhay.Extensions.DirectoryInfoExtensions.html": {
    "href": "latest/Songhay.Extensions.DirectoryInfoExtensions.html",
    "title": "Class DirectoryInfoExtensions | SonghayCore API",
    "keywords": "Class DirectoryInfoExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of DirectoryInfo. public static class DirectoryInfoExtensions Inheritance object DirectoryInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindDirectory(DirectoryInfo?, string?) Finds the specified target DirectoryInfo under the specified root DirectoryInfo. public static DirectoryInfo? FindDirectory(this DirectoryInfo? directoryInfo, string? expectedDirectoryName) Parameters directoryInfo DirectoryInfo The specified root DirectoryInfo. expectedDirectoryName string The specified target Name. Returns DirectoryInfo FindFile(DirectoryInfo?, string?) Finds the specified FileInfo under the specified DirectoryInfo. public static FileInfo? FindFile(this DirectoryInfo? directoryInfo, string? expectedFileName) Parameters directoryInfo DirectoryInfo The specified DirectoryInfo. expectedFileName string The specified Name. Returns FileInfo GetParentDirectory(DirectoryInfo?, int) Gets the parent directory. public static string? GetParentDirectory(this DirectoryInfo? directoryInfo, int levels) Parameters directoryInfo DirectoryInfo The specified DirectoryInfo. levels int The levels. Returns string Returns a string representing the directory. GetParentDirectoryInfo(DirectoryInfo?, int) Gets the parent DirectoryInfo. public static DirectoryInfo? GetParentDirectoryInfo(this DirectoryInfo? directoryInfo, int levels) Parameters directoryInfo DirectoryInfo The specified DirectoryInfo. levels int The levels. Returns DirectoryInfo ToCombinedPath(DirectoryInfo?, string?) Combines path and root based on the current value of DirectorySeparatorChar of the current OS or passes through a drive-letter rooted path. public static string ToCombinedPath(this DirectoryInfo? directoryInfo, string? path) Parameters directoryInfo DirectoryInfo The specified DirectoryInfo. path string The path. Returns string Remarks For detail, see https://github.com/BryanWilhite/SonghayCore/issues/14 and GetCombinedPath(string?, string?). VerifyDirectory(DirectoryInfo?, string?) Verifies the specified DirectoryInfo with conventional error handling. public static void VerifyDirectory(this DirectoryInfo? directoryInfo, string? expectedDirectoryName) Parameters directoryInfo DirectoryInfo The specified DirectoryInfo. expectedDirectoryName string The expected directory name."
  },
  "latest/Songhay.Extensions.DisplayItemModelExtensions.html": {
    "href": "latest/Songhay.Extensions.DisplayItemModelExtensions.html",
    "title": "Class DisplayItemModelExtensions | SonghayCore API",
    "keywords": "Class DisplayItemModelExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of DisplayItemModel. public static class DisplayItemModelExtensions Inheritance object DisplayItemModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HasTag(DisplayItemModel?, Func<object?, bool>?) Returns true when the item has the Tag based on the specified evaluator. public static bool HasTag(this DisplayItemModel? data, Func<object?, bool>? evaluator) Parameters data DisplayItemModel The DisplayItemModel. evaluator Func<object, bool> The predicate for evaluating Tag. Returns bool ToMenuDisplayItemModel(DisplayItemModel?) Converts the DisplayItemModel into a menu display item model. public static MenuDisplayItemModel? ToMenuDisplayItemModel(this DisplayItemModel? data) Parameters data DisplayItemModel The DisplayItemModel. Returns MenuDisplayItemModel WithTag(DisplayItemModel?, object) Fluently sets Tag. public static DisplayItemModel? WithTag(this DisplayItemModel? data, object tag) Parameters data DisplayItemModel The DisplayItemModel. tag object The value of Tag. Returns DisplayItemModel"
  },
  "latest/Songhay.Extensions.EnumExtensions.html": {
    "href": "latest/Songhay.Extensions.EnumExtensions.html",
    "title": "Class EnumExtensions | SonghayCore API",
    "keywords": "Class EnumExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Enum. public static class EnumExtensions Inheritance object EnumExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetEnumDescription(Enum) Gets any conventional Description applied to an Enum. public static string? GetEnumDescription(this Enum value) Parameters value Enum The Enum. Returns string GetEnumValues(Enum) Gets the result of GetValues(Type) based on the specified Enum. public static IEnumerable<Enum> GetEnumValues(this Enum value) Parameters value Enum The Enum. Returns IEnumerable<Enum>"
  },
  "latest/Songhay.Extensions.EnvironmentExtensions.html": {
    "href": "latest/Songhay.Extensions.EnvironmentExtensions.html",
    "title": "Class EnvironmentExtensions | SonghayCore API",
    "keywords": "Class EnvironmentExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Environment. public static class EnvironmentExtensions Inheritance object EnvironmentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields EnvironmentVariables The conventional ICollection<T> of SystemVariable. public static readonly Lazy<ICollection<SystemVariable>> EnvironmentVariables Field Value Lazy<ICollection<SystemVariable>> Methods GetConventionalValue(string?) Gets the value from the conventional ICollection<T> of SystemVariable based on the specified variable name. public static string? GetConventionalValue(string? conventionalName) Parameters conventionalName string The VariableName. Returns string Returns VariableValue."
  },
  "latest/Songhay.Extensions.FileInfoExtensions.html": {
    "href": "latest/Songhay.Extensions.FileInfoExtensions.html",
    "title": "Class FileInfoExtensions | SonghayCore API",
    "keywords": "Class FileInfoExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extension of FileInfo public static class FileInfoExtensions Inheritance object FileInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ReadZipArchiveEntries(FileInfo, Action<string>) Read zip archive entries. public static void ReadZipArchiveEntries(this FileInfo archiveInfo, Action<string> fileAction) Parameters archiveInfo FileInfo The FileInfo. fileAction Action<string> The file action. Remarks Use entriesProjector for any filtering or sorting. ReadZipArchiveEntries(FileInfo, Action<string>, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>) Read zip archive entries. public static void ReadZipArchiveEntries(this FileInfo archiveInfo, Action<string> fileAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> entriesProjector) Parameters archiveInfo FileInfo The FileInfo. fileAction Action<string> The file action. entriesProjector Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> The entries projector. Remarks Use entriesProjector for any filtering or sorting. ReadZipArchiveEntriesByLine(FileInfo, Action<int, string>) Read zip archive entries as strings, line by line. public static void ReadZipArchiveEntriesByLine(this FileInfo archiveInfo, Action<int, string> lineAction) Parameters archiveInfo FileInfo The file and/or directory info. lineAction Action<int, string> The line action. Remarks This member is designed for compressed text documents that are too large to load into memory. The fileAction includes the line number and the current line. ReadZipArchiveEntriesByLine(FileInfo, Action<int, string>, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>) Read zip archive entries as strings, line by line. public static void ReadZipArchiveEntriesByLine(this FileInfo archiveInfo, Action<int, string> lineAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> entriesProjector) Parameters archiveInfo FileInfo The file and/or directory info. lineAction Action<int, string> The line action. entriesProjector Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> The filter zip archive entries. Remarks This member is designed for compressed text documents that are too large to load into memory. The fileAction includes the line number and the current line. UseZipArchive(FileInfo, Action<ZipArchive?>) Centralizes the use of ZipArchive public static void UseZipArchive(this FileInfo archiveInfo, Action<ZipArchive?> archiveAction) Parameters archiveInfo FileInfo archiveAction Action<ZipArchive> UseZipArchiveEntries(FileInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>) Centralizes the use of ReadOnlyCollection<T>. public static void UseZipArchiveEntries(this FileInfo archiveInfo, Action<ReadOnlyCollection<ZipArchiveEntry>> entriesAction) Parameters archiveInfo FileInfo entriesAction Action<ReadOnlyCollection<ZipArchiveEntry>> UseZipArchiveEntries(FileInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>, Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>>) Centralizes the use of ReadOnlyCollection<T>. public static void UseZipArchiveEntries(this FileInfo archiveInfo, Action<ReadOnlyCollection<ZipArchiveEntry>> entriesAction, Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>> entriesProjector) Parameters archiveInfo FileInfo entriesAction Action<ReadOnlyCollection<ZipArchiveEntry>> entriesProjector Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>> WriteZipArchiveEntry(FileInfo, FileInfo) Write zip archive entry with Optimal. public static void WriteZipArchiveEntry(this FileInfo archiveInfo, FileInfo fileInfo) Parameters archiveInfo FileInfo The file and/or directory info. fileInfo FileInfo The file information. WriteZipArchiveEntry(FileInfo, FileInfo, CompressionLevel) Write zip archive entry. public static void WriteZipArchiveEntry(this FileInfo archiveInfo, FileInfo fileInfo, CompressionLevel compressionLevel) Parameters archiveInfo FileInfo The file and/or directory info. fileInfo FileInfo The file information. compressionLevel CompressionLevel The CompressionLevel"
  },
  "latest/Songhay.Extensions.HttpClientExtensions.html": {
    "href": "latest/Songhay.Extensions.HttpClientExtensions.html",
    "title": "Class HttpClientExtensions | SonghayCore API",
    "keywords": "Class HttpClientExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of HttpClient public static class HttpClientExtensions Inheritance object HttpClientExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DeleteAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?) Sends a DeleteHttpRequestMessage. public static Task<HttpResponseMessage?> DeleteAsync(this HttpClient? client, Uri? uri, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> DownloadToFileAsync(HttpClient?, Uri?, string) Downloads resource at URI to the specified path. public static Task DownloadToFileAsync(this HttpClient? client, Uri? uri, string path) Parameters client HttpClient The request. uri Uri The URI. path string The path. Returns Task DownloadToFileAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?) Downloads resource at URI to the specified path. public static Task DownloadToFileAsync(this HttpClient? client, Uri? uri, string path, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The request. uri Uri The URI. path string The path. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task DownloadToStringAsync(HttpClient?, Uri?) Downloads resource at URI to string. public static Task<string?> DownloadToStringAsync(this HttpClient? client, Uri? uri) Parameters client HttpClient The request. uri Uri The URI. Returns Task<string> DownloadToStringAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?) Downloads resource at URI to string. public static Task<string?> DownloadToStringAsync(this HttpClient? client, Uri? uri, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The request. uri Uri The URI. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<string> GetAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?) Sends a GetHttpRequestMessage. public static Task<HttpResponseMessage?> GetAsync(this HttpClient? client, Uri? uri, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> PostFormAsync(HttpClient?, Uri?, Hashtable) Calls SendAsync(HttpRequestMessage) with the specified ApplicationFormUrlEncoded request body using Post and UTF8. public static Task<HttpResponseMessage?> PostFormAsync(this HttpClient? client, Uri? uri, Hashtable formData) Parameters client HttpClient The client. uri Uri The URI. formData Hashtable The form data. Returns Task<HttpResponseMessage> PostFormAsync(HttpClient?, Uri?, Hashtable, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) with the specified ApplicationFormUrlEncoded request body using Post and UTF8. public static Task<HttpResponseMessage?> PostFormAsync(this HttpClient? client, Uri? uri, Hashtable formData, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. formData Hashtable The form data. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> PostJsonAsync(HttpClient?, Uri?, string) Calls SendAsync(HttpRequestMessage) with the specified ApplicationJson request body using Post and UTF8. public static Task<HttpResponseMessage?> PostJsonAsync(this HttpClient? client, Uri? uri, string requestBody) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. Returns Task<HttpResponseMessage> PostJsonAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) with the specified ApplicationJson request body using Post and UTF8. public static Task<HttpResponseMessage?> PostJsonAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> PostXmlAsync(HttpClient?, Uri?, string) Calls SendAsync(HttpRequestMessage) with the specified ApplicationXml request body using Post and UTF8. public static Task<HttpResponseMessage?> PostXmlAsync(this HttpClient? client, Uri? uri, string requestBody) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. Returns Task<HttpResponseMessage> PostXmlAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) with the specified ApplicationXml request body using Post and UTF8. public static Task<HttpResponseMessage?> PostXmlAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> PutJsonAsync(HttpClient?, Uri?, string) Calls SendAsync(HttpRequestMessage) with the specified ApplicationJson request body using Put and UTF8. public static Task<HttpResponseMessage?> PutJsonAsync(this HttpClient? client, Uri? uri, string requestBody) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. Returns Task<HttpResponseMessage> PutJsonAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) with the specified ApplicationJson request body using Put and UTF8. public static Task<HttpResponseMessage?> PutJsonAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> PutXmlAsync(HttpClient?, Uri?, string) Calls SendAsync(HttpRequestMessage) with the specified ApplicationXml request body using Put and UTF8. public static Task<HttpResponseMessage?> PutXmlAsync(this HttpClient? client, Uri? uri, string requestBody) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. Returns Task<HttpResponseMessage> PutXmlAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) with the specified ApplicationXml request body using Put and UTF8. public static Task<HttpResponseMessage?> PutXmlAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. requestBody string The request body. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> SendAsync(HttpClient?, Uri?, HttpMethod, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) public static Task<HttpResponseMessage?> SendAsync(this HttpClient? client, Uri? uri, HttpMethod method, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. method HttpMethod The method. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> SendBodyAsync(HttpClient?, Uri?, HttpMethod, string?, Encoding, string?, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) with the specified request body. public static Task<HttpResponseMessage?> SendBodyAsync(this HttpClient? client, Uri? uri, HttpMethod method, string? requestBody, Encoding encoding, string? mediaType, Action<HttpRequestMessage>? requestMessageAction) Parameters client HttpClient The client. uri Uri The URI. method HttpMethod The method. requestBody string The request body. encoding Encoding The encoding. mediaType string Type of the media. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage>"
  },
  "latest/Songhay.Extensions.HttpRequestMessageExtensions.html": {
    "href": "latest/Songhay.Extensions.HttpRequestMessageExtensions.html",
    "title": "Class HttpRequestMessageExtensions | SonghayCore API",
    "keywords": "Class HttpRequestMessageExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of HttpRequestMessage public static class HttpRequestMessageExtensions Inheritance object HttpRequestMessageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetContentAsync(HttpRequestMessage?) Gets a string from the derived HttpResponseMessage. public static Task<string> GetContentAsync(this HttpRequestMessage? request) Parameters request HttpRequestMessage The request. Returns Task<string> GetContentAsync(HttpRequestMessage?, Action<HttpResponseMessage>?) Gets a string from the derived HttpResponseMessage. public static Task<string> GetContentAsync(this HttpRequestMessage? request, Action<HttpResponseMessage>? responseMessageAction) Parameters request HttpRequestMessage The request. responseMessageAction Action<HttpResponseMessage> The response message action. Returns Task<string> GetContentAsync(HttpRequestMessage?, Action<HttpResponseMessage>?, Func<HttpClient>?) Gets a string from the derived HttpResponseMessage. public static Task<string> GetContentAsync(this HttpRequestMessage? request, Action<HttpResponseMessage>? responseMessageAction, Func<HttpClient>? optionalClientGetter) Parameters request HttpRequestMessage The request. responseMessageAction Action<HttpResponseMessage> The response message action. optionalClientGetter Func<HttpClient> The optional client getter. Returns Task<string> SendAsync(HttpRequestMessage?) Calls SendAsync(HttpRequestMessage) public static Task<HttpResponseMessage> SendAsync(this HttpRequestMessage? request) Parameters request HttpRequestMessage Returns Task<HttpResponseMessage> SendAsync(HttpRequestMessage?, Action<HttpRequestMessage>?) Calls SendAsync(HttpRequestMessage) public static Task<HttpResponseMessage> SendAsync(this HttpRequestMessage? request, Action<HttpRequestMessage>? requestMessageAction) Parameters request HttpRequestMessage The request. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> SendAsync(HttpRequestMessage?, Action<HttpRequestMessage>?, Func<HttpClient>?, HttpCompletionOption) Calls SendAsync(HttpRequestMessage) public static Task<HttpResponseMessage> SendAsync(this HttpRequestMessage? request, Action<HttpRequestMessage>? requestMessageAction, Func<HttpClient>? optionalClientGetter, HttpCompletionOption completionOption) Parameters request HttpRequestMessage The request. requestMessageAction Action<HttpRequestMessage> The request message action. optionalClientGetter Func<HttpClient> The optional client getter. completionOption HttpCompletionOption the HttpCompletionOption. Returns Task<HttpResponseMessage> SendBodyAsync(HttpRequestMessage?, string?) Calls SendAsync(HttpRequestMessage) with the specified request body, UTF8 and ApplicationJson. public static Task<HttpResponseMessage> SendBodyAsync(this HttpRequestMessage? request, string? requestBody) Parameters request HttpRequestMessage The request. requestBody string The request body. Returns Task<HttpResponseMessage> SendBodyAsync(HttpRequestMessage?, string?, Encoding, string) Calls SendAsync(HttpRequestMessage) with the specified request body. public static Task<HttpResponseMessage> SendBodyAsync(this HttpRequestMessage? request, string? requestBody, Encoding encoding, string mediaType) Parameters request HttpRequestMessage The request. requestBody string The request body. encoding Encoding The encoding. mediaType string Type of the media. Returns Task<HttpResponseMessage> SendBodyAsync(HttpRequestMessage?, string?, Encoding, string, Action<HttpRequestMessage>) Calls SendAsync(HttpRequestMessage) with the specified request body. public static Task<HttpResponseMessage> SendBodyAsync(this HttpRequestMessage? request, string? requestBody, Encoding encoding, string mediaType, Action<HttpRequestMessage> requestMessageAction) Parameters request HttpRequestMessage The request. requestBody string The request body. encoding Encoding The encoding. mediaType string Type of the media. requestMessageAction Action<HttpRequestMessage> The request message action. Returns Task<HttpResponseMessage> SendBodyAsync(HttpRequestMessage?, string?, Encoding?, string?, Action<HttpRequestMessage>?, Func<HttpClient>?) Calls SendAsync(HttpRequestMessage) with the specified request body. public static Task<HttpResponseMessage> SendBodyAsync(this HttpRequestMessage? request, string? requestBody, Encoding? encoding, string? mediaType, Action<HttpRequestMessage>? requestMessageAction, Func<HttpClient>? optionalClientGetter) Parameters request HttpRequestMessage The request. requestBody string The request body. encoding Encoding The encoding. mediaType string Type of the media. requestMessageAction Action<HttpRequestMessage> The request message action. optionalClientGetter Func<HttpClient> The optional client getter. Returns Task<HttpResponseMessage> ToAzureStorageAuthorizationHeader(HttpRequestMessage?, string?, string?, string?, string?) Derives the AuthenticationHeaderValue from the HttpRequestMessage. public static AuthenticationHeaderValue ToAzureStorageAuthorizationHeader(this HttpRequestMessage? request, string? storageAccountName, string? storageAccountKey, string? eTag, string? md5) Parameters request HttpRequestMessage the HttpRequestMessage storageAccountName string the Azure Storage account name storageAccountKey string the Azure Storage account shared key eTag string entity tag for Web cache validation md5 string The MD5 (message-digest algorithm) hash Returns AuthenticationHeaderValue Remarks There are two Authorization Header schemes supported: SharedKey and SharedKeyLite. This member supports only one of them: SharedKey. For more detail, see “Specifying the Authorization header” [ https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key#specifying-the-authorization-header ] See also: “Authorize requests to Azure Storage” [ https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage ] See also: https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master Provide the md5 and it will check and make sure it matches the requested blob's md5. If it doesn't match, it won't return a value. Provide an eTag, and it will only make changes to a blob if the current eTag matches, to ensure you don't overwrite someone else's changes. ToAzureStorageCanonicalizedHeaders(HttpRequestMessage?) Returns headers, starting with x-ms-, in a canonical format. public static string ToAzureStorageCanonicalizedHeaders(this HttpRequestMessage? request) Parameters request HttpRequestMessage the HttpRequestMessage Returns string Remarks See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key See http://en.wikipedia.org/wiki/Canonicalization ToAzureStorageSignature(HttpRequestMessage?, string?, string?, string?) Derives the raw representation of the message signature from the HttpRequestMessage.` public static byte[] ToAzureStorageSignature(this HttpRequestMessage? request, string? storageAccountName, string? eTag, string? md5) Parameters request HttpRequestMessage the HttpRequestMessage storageAccountName string The name of the storage account to use. eTag string entity tag for Web cache validation md5 string The MD5 (message-digest algorithm) hash Returns byte[] Remarks See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key WithAzureStorageBlockBlobContent(HttpRequestMessage?, string?, string?) Returns HttpRequestMessage with conventional headers for ByteArrayContent for Azure Storage. public static HttpRequestMessage WithAzureStorageBlockBlobContent(this HttpRequestMessage? request, string? blobName, string? content) Parameters request HttpRequestMessage the HttpRequestMessage blobName string the Azure Storage Blob name content string the Azure Storage Blob content Returns HttpRequestMessage WithAzureStorageHeaders(HttpRequestMessage?, DateTime, string?, string?, string?) Returns HttpRequestMessage with conventional headers for Azure Storage. public static HttpRequestMessage WithAzureStorageHeaders(this HttpRequestMessage? request, DateTime requestMoment, string? serviceVersion, string? storageAccountName, string? storageAccountKey) Parameters request HttpRequestMessage the HttpRequestMessage requestMoment DateTime the moment of the request serviceVersion string the version of the storage services to use for a request storageAccountName string the Azure Storage account name storageAccountKey string the Azure Storage account shared key Returns HttpRequestMessage WithAzureStorageHeaders(HttpRequestMessage?, DateTime, string?, string?, string?, string?, string?) Returns HttpRequestMessage with the minimum headers required for Azure Storage. public static HttpRequestMessage WithAzureStorageHeaders(this HttpRequestMessage? request, DateTime requestMoment, string? serviceVersion, string? storageAccountName, string? storageAccountKey, string? eTag, string? md5) Parameters request HttpRequestMessage the HttpRequestMessage requestMoment DateTime the moment of the request serviceVersion string the version of the storage services to use for a request storageAccountName string the Azure Storage account name storageAccountKey string the Azure Storage account shared key eTag string entity tag for Web cache validation md5 string The MD5 (message-digest algorithm) hash Returns HttpRequestMessage Remarks See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key Provide the md5 and it will check and make sure it matches the requested blob's md5. If it doesn't match, it won't return a value. Provide an eTag, and it will only make changes to a blob if the current eTag matches, to ensure you don't overwrite someone else's changes."
  },
  "latest/Songhay.Extensions.HttpResponseMessageExtensions.html": {
    "href": "latest/Songhay.Extensions.HttpResponseMessageExtensions.html",
    "title": "Class HttpResponseMessageExtensions | SonghayCore API",
    "keywords": "Class HttpResponseMessageExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of HttpResponseMessage. public static class HttpResponseMessageExtensions Inheritance object HttpResponseMessageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DownloadByteArrayToFileAsync(HttpResponseMessage?, FileSystemInfo?) Downloads Content from byte array to file. public static Task DownloadByteArrayToFileAsync(this HttpResponseMessage? response, FileSystemInfo? fileInfo) Parameters response HttpResponseMessage The response. fileInfo FileSystemInfo The file information. Returns Task DownloadByteArrayToFileAsync(HttpResponseMessage?, string) Downloads Content from byte array to file. public static Task DownloadByteArrayToFileAsync(this HttpResponseMessage? response, string target) Parameters response HttpResponseMessage The response. target string The target. Returns Task DownloadStringToFileAsync(HttpResponseMessage?, FileSystemInfo?) Downloads Content from byte array to file. public static Task DownloadStringToFileAsync(this HttpResponseMessage? response, FileSystemInfo? fileInfo) Parameters response HttpResponseMessage The response. fileInfo FileSystemInfo The file information. Returns Task DownloadStringToFileAsync(HttpResponseMessage?, string?) Downloads Content from byte array to file. public static Task DownloadStringToFileAsync(this HttpResponseMessage? response, string? target) Parameters response HttpResponseMessage The response. target string The target. Returns Task IsMovedOrRedirected(HttpResponseMessage?) Returns true when HttpResponseMessage is Moved, MovedPermanently or Redirect. public static bool IsMovedOrRedirected(this HttpResponseMessage? response) Parameters response HttpResponseMessage The response. Returns bool StreamToInstanceAsync<TInstance>(HttpResponseMessage?) Serializes the HttpResponseMessage to the specified TInstance public static Task<TInstance?> StreamToInstanceAsync<TInstance>(this HttpResponseMessage? response) Parameters response HttpResponseMessage The response. Returns Task<TInstance> Type Parameters TInstance The type of the instance. Remarks This method uses the Microsoft API to deserialize. StreamToInstanceAsync<TInstance>(HttpResponseMessage?, JsonSerializerOptions?) Serializes the HttpResponseMessage to the specified TInstance public static Task<TInstance?> StreamToInstanceAsync<TInstance>(this HttpResponseMessage? response, JsonSerializerOptions? options) Parameters response HttpResponseMessage The response. options JsonSerializerOptions The JsonSerializerOptions Returns Task<TInstance> Type Parameters TInstance The type of the instance. Remarks This method uses the Microsoft API to deserialize."
  },
  "latest/Songhay.Extensions.HttpWebRequestExtensions.html": {
    "href": "latest/Songhay.Extensions.HttpWebRequestExtensions.html",
    "title": "Class HttpWebRequestExtensions | SonghayCore API",
    "keywords": "Class HttpWebRequestExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of HttpWebRequest public static class HttpWebRequestExtensions Inheritance object HttpWebRequestExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DownloadToFile(HttpWebRequest?, string?) Downloads to file. public static void DownloadToFile(this HttpWebRequest? request, string? path) Parameters request HttpWebRequest The request. path string The path. DownloadToFile(HttpWebRequest?, string?, Uri?, bool) Downloads to file. public static void DownloadToFile(this HttpWebRequest? request, string? path, Uri? proxyLocation, bool bypassProxy) Parameters request HttpWebRequest The request. path string The path. proxyLocation Uri The proxy location. bypassProxy bool if set to true [bypass proxy]. DownloadToString(HttpWebRequest?) Downloads to string. public static string? DownloadToString(this HttpWebRequest? request) Parameters request HttpWebRequest The request. Returns string DownloadToString(HttpWebRequest?, Uri?, bool) Downloads to string. public static string? DownloadToString(this HttpWebRequest? request, Uri? proxyLocation, bool bypassProxy) Parameters request HttpWebRequest The request. proxyLocation Uri The proxy location bypassProxy bool when true, bypass proxy Returns string PostForm(HttpWebRequest?, Hashtable?) Posts the form. public static string? PostForm(this HttpWebRequest? request, Hashtable? postData) Parameters request HttpWebRequest The request. postData Hashtable The post data. Returns string PostForm(HttpWebRequest?, Hashtable?, Uri?, bool) Posts the form. public static string? PostForm(this HttpWebRequest? request, Hashtable? postData, Uri? proxyLocation, bool bypassProxy) Parameters request HttpWebRequest The request. postData Hashtable The post data. proxyLocation Uri The proxy location. bypassProxy bool if set to true [bypass proxy]. Returns string PostXml(HttpWebRequest?, string?) Posts the XML. public static string? PostXml(this HttpWebRequest? request, string? xmlFragment) Parameters request HttpWebRequest The request. xmlFragment string The XML fragment. Returns string PostXml(HttpWebRequest?, string?, Uri?, bool) Posts the XML. public static string? PostXml(this HttpWebRequest? request, string? xmlFragment, Uri? proxyLocation, bool bypassProxy) Parameters request HttpWebRequest The request. xmlFragment string The XML fragment. proxyLocation Uri The proxy location. bypassProxy bool if set to true [bypass proxy]. Returns string ToHttpStatusCode(HttpWebRequest?) Converts the HttpWebRequest into a HTTP status code. public static HttpStatusCode ToHttpStatusCode(this HttpWebRequest? request) Parameters request HttpWebRequest The request. Returns HttpStatusCode ToHttpWebResponse(HttpWebRequest?) Converts the HttpWebRequest into a HTTP web response. public static HttpWebResponse? ToHttpWebResponse(this HttpWebRequest? request) Parameters request HttpWebRequest The request. Returns HttpWebResponse WithProxy(HttpWebRequest?, Uri?, bool) Returns the HttpWebRequest with a WebProxy. public static HttpWebRequest? WithProxy(this HttpWebRequest? request, Uri? proxyLocation, bool bypassProxy) Parameters request HttpWebRequest The request. proxyLocation Uri The proxy location. bypassProxy bool if set to true [bypass proxy]. Returns HttpWebRequest WithRequestBody(HttpWebRequest?, string?, string?) Returns HttpWebRequest with the request body. public static HttpWebRequest? WithRequestBody(this HttpWebRequest? request, string? requestBody, string? requestMethod) Parameters request HttpWebRequest The request. requestBody string The request body. requestMethod string The request method. Returns HttpWebRequest WithRequestBody(HttpWebRequest?, string?, string?, string?) Returns HttpWebRequest with the request body. public static HttpWebRequest? WithRequestBody(this HttpWebRequest? request, string? requestBody, string? requestMethod, string? contentType) Parameters request HttpWebRequest The request. requestBody string The request body. requestMethod string The request method. contentType string The request content type. Returns HttpWebRequest"
  },
  "latest/Songhay.Extensions.IConfigurationExtensions.html": {
    "href": "latest/Songhay.Extensions.IConfigurationExtensions.html",
    "title": "Class IConfigurationExtensions | SonghayCore API",
    "keywords": "Class IConfigurationExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of IConfiguration. public static class IConfigurationExtensions Inheritance object IConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddHelpDisplayText(IConfiguration?, string, string) public static void AddHelpDisplayText(this IConfiguration? configuration, string key, string helpText) Parameters configuration IConfiguration the IConfiguration key string the key to add helpText string the help text to add GetBasePathValue(IConfiguration?) Returns the value of the conventional BaseDirectoryarg or throws DirectoryNotFoundException when the conventional BaseDirectoryRequiredarg is present. public static string? GetBasePathValue(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns string GetCommandLineArgValue(IConfiguration?, string) Returns a value from the specified IConfiguration by calling ToConfigurationKey(string?) on the specified arg. public static string? GetCommandLineArgValue(this IConfiguration? configuration, string arg) Parameters configuration IConfiguration the IConfiguration arg string the command-line argument to be converted into a IConfiguration key Returns string Remarks This member will call ToConfigurationKey(string?) to convert a console argument to IConfiguration-key format. GetOutputPath(IConfiguration?) Returns the value of the conventional OutputFilearg and will prefix it with the value of the BaseDirectoryarg when the conventional OutputUnderBasePatharg is present. public static string? GetOutputPath(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns string GetSettingsFilePath(IConfiguration?) Returns the value of the conventional SettingsFilearg which should be a path to a text file. public static string GetSettingsFilePath(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns string HasKey(IConfiguration?, string?) Returns true when the specified IConfiguration contains the specified key. public static bool HasKey(this IConfiguration? configuration, string? key) Parameters configuration IConfiguration the IConfiguration key string the IConfiguration key Returns bool Remarks This member will call ToConfigurationKey(string?) to convert a console argument to IConfiguration-key format. HasKey(IConfiguration?, string?, bool) Returns true when the specified IConfiguration contains the specified key. public static bool HasKey(this IConfiguration? configuration, string? key, bool isCommandLineSwitch) Parameters configuration IConfiguration the IConfiguration key string the IConfiguration key isCommandLineSwitch bool when true, expect a command-line “switch” like --dry-run=true Returns bool Remarks This member will call ToConfigurationKey(string?) to convert a console argument to IConfiguration-key format. When isCommandLineSwitch is true, a command-line “switch” like --dry-run=false will make this member return false and --dry-run=true will make this member return true. For more detail, [ see https://github.com/BryanWilhite/SonghayCore/issues/177 ] IsDryRun(IConfiguration?) Determines whether args contain the conventional DryRun flag. public static bool IsDryRun(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns bool IsHelpRequest(IConfiguration?) Determines whether args contain the conventional Help flag. public static bool IsHelpRequest(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns bool ReadSettings(IConfiguration?) Reads the settings data in the file specified by SettingsFile which could be a relative or absolute path. public static string ReadSettings(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns string ReadStringInput(IConfiguration?) Reads the input data in the inline string specified by InputString or the file specified by InputFile which could be a relative or absolute path. public static string? ReadStringInput(this IConfiguration? configuration) Parameters configuration IConfiguration Returns string Exceptions FileNotFoundException ToHelpDisplayText(IConfiguration?) Converts the specified IConfiguration to any keys ending with HelpTextSuffix. public static string? ToHelpDisplayText(this IConfiguration? configuration) Parameters configuration IConfiguration Returns string ToHelpDisplayText(IConfiguration?, int) Converts the specified IConfiguration to any keys ending with HelpTextSuffix. public static string? ToHelpDisplayText(this IConfiguration? configuration, int padding) Parameters configuration IConfiguration padding int the padding between keys and values Returns string ToKeys(IConfiguration?) Converts the specified IConfiguration to a collection of its underlying keys. public static IReadOnlyCollection<string> ToKeys(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns IReadOnlyCollection<string> WithDefaultHelpText(IConfiguration?) Returns IConfiguration with the conventional, console, args help text for ConsoleArgsScalars. public static IConfiguration? WithDefaultHelpText(this IConfiguration? configuration) Parameters configuration IConfiguration the IConfiguration Returns IConfiguration WriteOutputToFile(IConfiguration?, byte[]) Writes the byte array output to the file specified by OutputFile. public static void WriteOutputToFile(this IConfiguration? configuration, byte[] output) Parameters configuration IConfiguration the IConfiguration output byte[] the output to write WriteOutputToFile(IConfiguration?, Stream) Writes the Stream output to the file specified by OutputFile. public static void WriteOutputToFile(this IConfiguration? configuration, Stream output) Parameters configuration IConfiguration the IConfiguration output Stream the output to write Remarks [ see https://stackoverflow.com/a/5515894/22944 ] WriteOutputToFile(IConfiguration?, string) Writes the string output to the file specified by OutputFile. public static void WriteOutputToFile(this IConfiguration? configuration, string output) Parameters configuration IConfiguration the IConfiguration output string the output to write WriteOutputToFileAsync(IConfiguration?, byte[]) Writes the byte array output to the file specified by OutputFile. public static Task WriteOutputToFileAsync(this IConfiguration? configuration, byte[] output) Parameters configuration IConfiguration the IConfiguration output byte[] the output to write Returns Task WriteOutputToFileAsync(IConfiguration?, Stream) Writes the Stream output to the file specified by OutputFile. public static Task WriteOutputToFileAsync(this IConfiguration? configuration, Stream output) Parameters configuration IConfiguration the IConfiguration output Stream the output to write Returns Task Remarks [ see https://stackoverflow.com/a/5515894/22944 ] WriteOutputToFileAsync(IConfiguration?, string) Writes the string output to the file specified by OutputFile. public static Task WriteOutputToFileAsync(this IConfiguration? configuration, string output) Parameters configuration IConfiguration the IConfiguration output string the output to write Returns Task"
  },
  "latest/Songhay.Extensions.IDictionaryExtensions.html": {
    "href": "latest/Songhay.Extensions.IDictionaryExtensions.html",
    "title": "Class IDictionaryExtensions | SonghayCore API",
    "keywords": "Class IDictionaryExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of IDictionary<TKey, TValue>. public static class IDictionaryExtensions Inheritance object IDictionaryExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToNameValueCollection<TKey, TValue>(IDictionary<TKey, TValue>) Converts the IDictionary<TKey, TValue> to the NameValueCollection. public static NameValueCollection ToNameValueCollection<TKey, TValue>(this IDictionary<TKey, TValue> dictionary) Parameters dictionary IDictionary<TKey, TValue> The set. Returns NameValueCollection Type Parameters TKey The type of the key. TValue The type of the value. Remarks For detail, see https://stackoverflow.com/a/7230446/22944 ToShallowClone<TKey, TValue>(IDictionary<TKey, TValue>?) Converts the IDictionary<TKey, TValue> to a shallow clone. public static IDictionary<TKey, TValue> ToShallowClone<TKey, TValue>(this IDictionary<TKey, TValue>? dictionary) where TKey : notnull Parameters dictionary IDictionary<TKey, TValue> the IDictionary<TKey, TValue> Returns IDictionary<TKey, TValue> Type Parameters TKey The type of the key. TValue The type of the value. Remarks For more detail see “Clone a Dictionary in C#” [https://www.techiedelight.com/clone-a-dictionary-in-csharp/] TryGetValueWithKey<TKey, TValue>(IDictionary<TKey, TValue>?, TKey) Tries to get value with the specified key. public static TValue? TryGetValueWithKey<TKey, TValue>(this IDictionary<TKey, TValue>? dictionary, TKey key) Parameters dictionary IDictionary<TKey, TValue> The dictionary. key TKey The key. Returns TValue Type Parameters TKey The type of the key. TValue The type of the value. TryGetValueWithKey<TKey, TValue>(IDictionary<TKey, TValue>?, TKey?, bool) Tries to get value with the specified key. public static TValue? TryGetValueWithKey<TKey, TValue>(this IDictionary<TKey, TValue>? dictionary, TKey? key, bool throwException) Parameters dictionary IDictionary<TKey, TValue> The dictionary. key TKey The key. throwException bool When true, throw an exception when retrieval fails. Returns TValue Type Parameters TKey The type of the key. TValue The type of the value. WithPair<TKey, TValue>(IDictionary<TKey, TValue?>?, KeyValuePair<TKey, TValue?>?) Returns the IDictionary<TKey, TValue> with the specified pair. public static IDictionary<TKey, TValue?> WithPair<TKey, TValue>(this IDictionary<TKey, TValue?>? dictionary, KeyValuePair<TKey, TValue?>? pair) where TKey : notnull Parameters dictionary IDictionary<TKey, TValue> the IDictionary<TKey, TValue> pair KeyValuePair<TKey, TValue>? the KeyValuePair<TKey, TValue> Returns IDictionary<TKey, TValue> Type Parameters TKey The type of the key. TValue The type of the value. WithPair<TKey, TValue>(IDictionary<TKey, TValue?>?, TKey?, TValue?) Returns the IDictionary<TKey, TValue> with the specified pair. public static IDictionary<TKey, TValue?> WithPair<TKey, TValue>(this IDictionary<TKey, TValue?>? dictionary, TKey? key, TValue? value) where TKey : notnull Parameters dictionary IDictionary<TKey, TValue> the IDictionary<TKey, TValue> key TKey the key value TValue the value Returns IDictionary<TKey, TValue> Type Parameters TKey The type of the key. TValue The type of the value. WithPairs<TKey, TValue>(IDictionary<TKey, TValue?>?, IEnumerable<KeyValuePair<TKey, TValue?>>?) Returns the IDictionary<TKey, TValue> with the specified pairs. public static IDictionary<TKey, TValue?> WithPairs<TKey, TValue>(this IDictionary<TKey, TValue?>? dictionary, IEnumerable<KeyValuePair<TKey, TValue?>>? pairs) where TKey : notnull Parameters dictionary IDictionary<TKey, TValue> the IDictionary<TKey, TValue> pairs IEnumerable<KeyValuePair<TKey, TValue>> The pairs to add. Returns IDictionary<TKey, TValue> Type Parameters TKey The type of the key. TValue The type of the value."
  },
  "latest/Songhay.Extensions.IEnumerableOfTExtensions.html": {
    "href": "latest/Songhay.Extensions.IEnumerableOfTExtensions.html",
    "title": "Class IEnumerableOfTExtensions | SonghayCore API",
    "keywords": "Class IEnumerableOfTExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of IEnumerable<T>. public static class IEnumerableOfTExtensions Inheritance object IEnumerableOfTExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks When this ‘greatest hits collection’ is found to be limited, upgrade to MoreLinq [ see https://github.com/morelinq/MoreLINQ ] Methods Flatten<TSource>(IEnumerable<TSource>?, Func<TSource, IEnumerable<TSource>>?) Flattens the specified source. public static IEnumerable<TSource> Flatten<TSource>(this IEnumerable<TSource>? source, Func<TSource, IEnumerable<TSource>>? childGetter) Parameters source IEnumerable<TSource> The source. childGetter Func<TSource, IEnumerable<TSource>> The child getter. Returns IEnumerable<TSource> Type Parameters TSource The type of the source. Remarks When source is not already an array, this member will mercilessly allocate a snapshot of TSource[]. To avoid this memory pressure, upgrade to the Flatten method of MoreLinq [ see https://github.com/morelinq/MoreLINQ/blob/master/MoreLinq/Flatten.cs#L91 ] Flatten<TSource>(IEnumerable<TSource>, Func<TSource, IEnumerable<TSource>>, TSource) Flattens the specified source. public static IEnumerable<TSource> Flatten<TSource>(this IEnumerable<TSource> source, Func<TSource, IEnumerable<TSource>> childGetter, TSource flattenedHead) Parameters source IEnumerable<TSource> The source. childGetter Func<TSource, IEnumerable<TSource>> The child getter. flattenedHead TSource The flattened head. Returns IEnumerable<TSource> Type Parameters TSource The type of the source. ForEachInEnumerable<TEnumerable>(IEnumerable<TEnumerable>?, Action<TEnumerable, int>?) Performs the Action on each item in the enumerable object. public static void ForEachInEnumerable<TEnumerable>(this IEnumerable<TEnumerable>? enumerable, Action<TEnumerable, int>? action) Parameters enumerable IEnumerable<TEnumerable> The enumerable. action Action<TEnumerable, int> The action. Type Parameters TEnumerable The type of the enumerable. Remarks This member is ruthlessly derived from MoreLinq.ForEach{T} [ see https://github.com/morelinq/MoreLINQ/blob/master/MoreLinq/ForEach.cs#L50 ]. ForEachInEnumerable<TEnumerable>(IEnumerable<TEnumerable>?, Action<TEnumerable>?) Performs the Action on each item in the enumerable object. public static void ForEachInEnumerable<TEnumerable>(this IEnumerable<TEnumerable>? enumerable, Action<TEnumerable>? action) Parameters enumerable IEnumerable<TEnumerable> The enumerable. action Action<TEnumerable> The action. Type Parameters TEnumerable The type of the enumerable. Remarks “I am philosophically opposed to providing such a method, for two reasons. …The first reason is that doing so violates the functional programming principles that all the other sequence operators are based upon. Clearly the sole purpose of a call to this method is to cause side effects.” —Eric Lippert, “foreach” vs “ForEach” [http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx] Partition<T>(IEnumerable<T>, int) Partitions the specified source. public static IEnumerable<IEnumerable<T>> Partition<T>(this IEnumerable<T> source, int size) Parameters source IEnumerable<T> The source. size int The size. Returns IEnumerable<IEnumerable<T>> Type Parameters T Remarks This member is by Jon Skeet. [http://stackoverflow.com/questions/438188/split-a-collection-into-n-parts-with-linq] SelectWithPrevious<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TSource, TResult>) Projects the previous item with the current item. public static IEnumerable<TResult> SelectWithPrevious<TSource, TResult>(this IEnumerable<TSource> source, Func<TSource, TSource, TResult> projection) Parameters source IEnumerable<TSource> The source. projection Func<TSource, TSource, TResult> The projection. Returns IEnumerable<TResult> Type Parameters TSource The type of the source. TResult The type of the result. Remarks “This enables you to perform your projection using only a single pass of the source sequence, which is always a bonus (imagine running it over a large log file). Note that it will project a sequence of length n into a sequence of length n-1— you may want to prepend a ‘dummy’ first element, for example. (Or change the method to include one.) Here’s an example of how you'd use it: var query = list.SelectWithPrevious((prev, cur) => new { ID = cur.ID, Date = cur.Date, DateDiff = (cur.Date - prev.Date).Days); Note that this will include the final result of one ID with the first result of the next ID… you may wish to group your sequence by ID first.” —Jon Skeet, “Calculate difference from previous item with LINQ” [http://stackoverflow.com/questions/3683105/calculate-difference-from-previous-item-with-linq/3683217#3683217] ToCollection<TEnumerable>(IEnumerable<TEnumerable>?) Converts the IEnumerable<T> into ICollection<T>. public static ICollection<TEnumerable> ToCollection<TEnumerable>(this IEnumerable<TEnumerable>? enumerable) Parameters enumerable IEnumerable<TEnumerable> Returns ICollection<TEnumerable> Type Parameters TEnumerable Remarks For details, see “When To Use IEnumerable, ICollection, IList And List” [http://www.claudiobernasconi.ch/2013/07/22/when-to-use-ienumerable-icollection-ilist-and-list/] ToDisplayString<TSource>(IEnumerable<TSource>) Converts the IEnumerable<T> into a display string. public static string ToDisplayString<TSource>(this IEnumerable<TSource> data) where TSource : class Parameters data IEnumerable<TSource> The source. Returns string Type Parameters TSource The type of the source. ToDisplayString<TSource>(IEnumerable<TSource>, byte) Converts the IEnumerable<T> into a display string. public static string ToDisplayString<TSource>(this IEnumerable<TSource> source, byte indent) where TSource : class Parameters source IEnumerable<TSource> The source. indent byte The indent. Returns string Type Parameters TSource The type of the source."
  },
  "latest/Songhay.Extensions.ILoggerExtensions.html": {
    "href": "latest/Songhay.Extensions.ILoggerExtensions.html",
    "title": "Class ILoggerExtensions | SonghayCore API",
    "keywords": "Class ILoggerExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of ILogger to assist with “structured logging.” public static class ILoggerExtensions Inheritance object ILoggerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks For a video overview, see https://www.youtube.com/watch?v=NlBjVJPkT6M \uD83C\uDFA5 Methods LogErrorForMissingData(ILogger?, string) Calls LogError(ILogger, string, params object[]) for missing data. public static void LogErrorForMissingData(this ILogger? logger, string caption) Parameters logger ILogger The logger. caption string The caption. LogErrorForMissingData<TData>(ILogger?) Calls LogError(ILogger, string, params object[]) for missing data. public static void LogErrorForMissingData<TData>(this ILogger? logger) Parameters logger ILogger The logger. Type Parameters TData The type of the data. LogInformationNewLine(ILogger?) Calls LogNewLine(ILogger?, LogLevel) for Information. public static void LogInformationNewLine(this ILogger? logger) Parameters logger ILogger The logger. LogNewLine(ILogger?, LogLevel) Logs NewLine for human readability. public static void LogNewLine(this ILogger? logger, LogLevel level) Parameters logger ILogger The logger. level LogLevel The level. LogTraceDataTypeAndValue<TData>(ILogger?, TData?) Traces data type and value. public static void LogTraceDataTypeAndValue<TData>(this ILogger? logger, TData? data) Parameters logger ILogger The logger. data TData The data. Type Parameters TData The type of the data. Remarks For the best results, ensure that the ToString() method is properly overridden. LogTraceMethodCall(ILogger?, string?) Conventional trace of the specified method call. public static void LogTraceMethodCall(this ILogger? logger, string? methodName) Parameters logger ILogger The logger. methodName string Name of the method. LogTraceNewLine(ILogger?) Calls LogNewLine(ILogger?, LogLevel) for Trace. public static void LogTraceNewLine(this ILogger? logger) Parameters logger ILogger The logger."
  },
  "latest/Songhay.Extensions.IPrincipalExtensions.html": {
    "href": "latest/Songhay.Extensions.IPrincipalExtensions.html",
    "title": "Class IPrincipalExtensions | SonghayCore API",
    "keywords": "Class IPrincipalExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of IPrincipal public static class IPrincipalExtensions Inheritance object IPrincipalExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToUserName(IPrincipal?, string) Converts IPrincipal to a string representation of the user’s name. public static string ToUserName(this IPrincipal? principal, string defaultUserName) Parameters principal IPrincipal The principal. defaultUserName string Default name of the user. Returns string"
  },
  "latest/Songhay.Extensions.ITemporalExtensions.html": {
    "href": "latest/Songhay.Extensions.ITemporalExtensions.html",
    "title": "Class ITemporalExtensions | SonghayCore API",
    "keywords": "Class ITemporalExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of ITemporal public static class ITemporalExtensions Inheritance object ITemporalExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetDefaults(ITemporal) Sets conventional default values for ITemporal data. public static void SetDefaults(this ITemporal data) Parameters data ITemporal The ITemporal data. SetDefaults(ITemporal?, DateTime?) Sets conventional default values for ITemporal data. public static void SetDefaults(this ITemporal? data, DateTime? endDate) Parameters data ITemporal The ITemporal data. endDate DateTime? Sets EndDate."
  },
  "latest/Songhay.Extensions.JsonNodeExtensions.html": {
    "href": "latest/Songhay.Extensions.JsonNodeExtensions.html",
    "title": "Class JsonNodeExtensions | SonghayCore API",
    "keywords": "Class JsonNodeExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of JsonNode. public static class JsonNodeExtensions Inheritance object JsonNodeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetJsonValueKind(JsonNode?) Gets the JsonValueKind of the specified JsonNode. public static JsonValueKind GetJsonValueKind(this JsonNode? node) Parameters node JsonNode The node. Returns JsonValueKind Remarks This member is needed for .NET 6.0 and earlier. GetPropertyValue<T>(JsonNode?, string) Gets the property value of the specified JsonNode. public static (T? value, bool success) GetPropertyValue<T>(this JsonNode? node, string propertyName) Parameters node JsonNode The node. propertyName string Name of the property. Returns (T value, bool success) Type Parameters T IsExpectedObject(JsonNode?, ILogger?, params string[]) Determines whether the specified JsonNode is the expected JsonObject. public static bool IsExpectedObject(this JsonNode? node, ILogger? logger, params string[] properties) Parameters node JsonNode The node. logger ILogger The logger. properties string[] The properties. Returns bool ToJsonArray(JsonNode?, ILogger?) Converts to the specified JsonNode to JsonArray or logs failure and returns null. public static JsonArray? ToJsonArray(this JsonNode? node, ILogger? logger) Parameters node JsonNode The node. logger ILogger The logger. Returns JsonArray ToJsonObject(JsonNode?, ILogger?) Converts to the specified JsonNode to JsonObject or logs failure and returns null. public static JsonObject? ToJsonObject(this JsonNode? node, ILogger? logger) Parameters node JsonNode The node. logger ILogger The logger. Returns JsonObject"
  },
  "latest/Songhay.Extensions.MenuDisplayItemModelExtensions.html": {
    "href": "latest/Songhay.Extensions.MenuDisplayItemModelExtensions.html",
    "title": "Class MenuDisplayItemModelExtensions | SonghayCore API",
    "keywords": "Class MenuDisplayItemModelExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of MenuDisplayItemModel public static class MenuDisplayItemModelExtensions Inheritance object MenuDisplayItemModelExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DefaultOrFirst(IEnumerable<MenuDisplayItemModel>?) Returns the Default Selection IsDefaultSelection == true or the First MenuDisplayItemModel. public static MenuDisplayItemModel? DefaultOrFirst(this IEnumerable<MenuDisplayItemModel>? data) Parameters data IEnumerable<MenuDisplayItemModel> The data. Returns MenuDisplayItemModel GetAllBy(MenuDisplayItemModel?, Func<MenuDisplayItemModel, bool>) Gets all MenuDisplayItemModel by the specified predicate. public static IEnumerable<MenuDisplayItemModel> GetAllBy(this MenuDisplayItemModel? data, Func<MenuDisplayItemModel, bool> predicate) Parameters data MenuDisplayItemModel the MenuDisplayItemModel predicate Func<MenuDisplayItemModel, bool> the predicate Returns IEnumerable<MenuDisplayItemModel> HasGroupId(MenuDisplayItemModel?, string) Returns true when the grouping has the specified identifier. public static bool HasGroupId(this MenuDisplayItemModel? data, string groupId) Parameters data MenuDisplayItemModel the MenuDisplayItemModel groupId string the GroupId Returns bool WithChildItem(MenuDisplayItemModel?, MenuDisplayItemModel?) Fluently returns MenuDisplayItemModel with child item. public static MenuDisplayItemModel? WithChildItem(this MenuDisplayItemModel? data, MenuDisplayItemModel? child) Parameters data MenuDisplayItemModel The data. child MenuDisplayItemModel The child. Returns MenuDisplayItemModel WithChildItems(MenuDisplayItemModel?, IEnumerable<MenuDisplayItemModel>?) Fluently returns MenuDisplayItemModel with child items. public static MenuDisplayItemModel? WithChildItems(this MenuDisplayItemModel? data, IEnumerable<MenuDisplayItemModel>? items) Parameters data MenuDisplayItemModel The data. items IEnumerable<MenuDisplayItemModel> The items. Returns MenuDisplayItemModel"
  },
  "latest/Songhay.Extensions.NullableExtensions.html": {
    "href": "latest/Songhay.Extensions.NullableExtensions.html",
    "title": "Class NullableExtensions | SonghayCore API",
    "keywords": "Class NullableExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Nullable types. public static class NullableExtensions Inheritance object NullableExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsAssignableToISerializable<T>(T?) Determines whether the specified type can be assigned to ISerializable. public static bool IsAssignableToISerializable<T>(this T? nullable) Parameters nullable T the nullable Returns bool true if the specified throw exception is serializable; otherwise, false. Type Parameters T the specified type Remarks For detail, see https://stackoverflow.com/a/945528/22944. For background, see https://manski.net/2014/10/net-serializers-comparison-chart/ and https://github.com/BryanWilhite/SonghayCore/issues/76 Round(decimal?, int) Rounds the specified decimal. public static decimal Round(this decimal? nullable, int decimals) Parameters nullable decimal? The decimal nullable. decimals int The decimals. Returns decimal Remarks For more detail see http://anderly.com/2009/08/08/silverlight-midpoint-rounding-solution/ ThrowWhenNullOrEmpty<T>(IEnumerable<T>?, string?) Throws an ArgumentNullException when the specified enumerable is null or empty. public static void ThrowWhenNullOrEmpty<T>(this IEnumerable<T>? enumerable, string? paramName = null) Parameters enumerable IEnumerable<T> the IEnumerable<T> paramName string the name of the variable holding the IEnumerable<T> Type Parameters T the type of the IEnumerable<T> ThrowWhenNullOrWhiteSpace(string?, string?) Throws an ArgumentNullException when IsNullOrWhiteSpace(string) is true. public static void ThrowWhenNullOrWhiteSpace(this string? nullable, string? paramName = null) Parameters nullable string the nullable string paramName string the name of the variable holding the string Remarks This member borrows heavily from ThrowIfNull(object, string). The NotNullAttribute is applied to this member based on the following statement from Microsoft: “Callers can pass a variable with the null nullable, but the argument is guaranteed to never be null if the method returns without throwing an exception.” [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ] ToObjectOrDbNull<T>(T?) Boxes the nullable in object or returns DBNull. public static object ToObjectOrDbNull<T>(this T? nullable) Parameters nullable T the nullable Returns object Type Parameters T ToReferenceTypeValueOrThrow<T>(T?, string?) Returns the non-null value of the specified, nullable reference type or throws an ArgumentNullException when the value is null. public static T ToReferenceTypeValueOrThrow<T>(this T? nullable, string? paramName = null) where T : class? Parameters nullable T the nullable paramName string the name of the variable holding the nullable Returns T Type Parameters T the type Remarks This member borrows heavily from ThrowIfNull(object, string). The NotNullAttribute is applied to this member based on the following statement from Microsoft: “Callers can pass a variable with the null nullable, but the argument is guaranteed to never be null if the method returns without throwing an exception.” [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ] ToValueOrThrow<T>(T?, string?) Returns the non-null value of the specified value type or throws an ArgumentNullException when the value is null. public static T ToValueOrThrow<T>(this T? nullable, string? paramName = null) where T : struct Parameters nullable T? the nullable paramName string the name of the variable holding the nullable Returns T Type Parameters T the type Remarks This member borrows heavily from ThrowIfNull(object, string). The NotNullAttribute is applied to this member based on the following statement from Microsoft: “Callers can pass a variable with the null nullable, but the argument is guaranteed to never be null if the method returns without throwing an exception.” [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]"
  },
  "latest/Songhay.Extensions.ObservableCollectionExtensions.html": {
    "href": "latest/Songhay.Extensions.ObservableCollectionExtensions.html",
    "title": "Class ObservableCollectionExtensions | SonghayCore API",
    "keywords": "Class ObservableCollectionExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of ObservableCollection<T>. public static class ObservableCollectionExtensions Inheritance object ObservableCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetCollectionWithDigits(ObservableCollection<byte?>, double) Sets the collection with digits for mantissaDigits = 2. public static void SetCollectionWithDigits(this ObservableCollection<byte?> collectionOfByte, double digits) Parameters collectionOfByte ObservableCollection<byte?> The collection of byte. digits double The digits. SetCollectionWithDigits(ObservableCollection<byte?>?, double, int) Sets the collection with digits. public static void SetCollectionWithDigits(this ObservableCollection<byte?>? collectionOfByte, double digits, int mantissaDigits) Parameters collectionOfByte ObservableCollection<byte?> The collection of byte. digits double The digits. mantissaDigits int The mantissa digits."
  },
  "latest/Songhay.Extensions.ProgramMetadataExtensions.html": {
    "href": "latest/Songhay.Extensions.ProgramMetadataExtensions.html",
    "title": "Class ProgramMetadataExtensions | SonghayCore API",
    "keywords": "Class ProgramMetadataExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of ProgramMetadata. public static class ProgramMetadataExtensions Inheritance object ProgramMetadataExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToConventionalHeaders(ProgramMetadata?, string) Converts ProgramMetadata to the conventional HttpRequestHeaders. public static Dictionary<string, string> ToConventionalHeaders(this ProgramMetadata? meta, string restApiMetadataSetKey) Parameters meta ProgramMetadata The ProgramMetadata. restApiMetadataSetKey string The key for RestApiMetadataSet. Returns Dictionary<string, string>"
  },
  "latest/Songhay.Extensions.RestApiMetadataExtensions.html": {
    "href": "latest/Songhay.Extensions.RestApiMetadataExtensions.html",
    "title": "Class RestApiMetadataExtensions | SonghayCore API",
    "keywords": "Class RestApiMetadataExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of RestApiMetadata. public static class RestApiMetadataExtensions Inheritance object RestApiMetadataExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToAzureActiveDirectoryAccessTokenData(RestApiMetadata?) Converts the specified RestApiMetadata to the data required by GetAccessTokenAsync(Uri?, Dictionary<string, string>?). public static Dictionary<string, string> ToAzureActiveDirectoryAccessTokenData(this RestApiMetadata? meta) Parameters meta RestApiMetadata the RestApiMetadata Returns Dictionary<string, string> Remarks As of this writing, this member should return data of the form: \"grant_type\": \"client_credentials\", \"scope\": \"https://vault.azure.net/.default\", \"client_id\": \"active-directory-registration-app-id\", \"client_secret\": \"active-directory-registration-app-secret\" where client_id is the value of the appId property in the output of az ad app list; client_secret is the secret exposed under the App registration in the Azure Portal. \uD83D\uDD2C☔ test coverage of this member further documents how the RestApiMetadata should be formatted ToAzureActiveDirectoryAccessTokenUri(RestApiMetadata?) Converts the specified RestApiMetadata to the Uri required by GetAccessTokenAsync(Uri?, Dictionary<string, string>?). public static Uri ToAzureActiveDirectoryAccessTokenUri(this RestApiMetadata? meta) Parameters meta RestApiMetadata the RestApiMetadata Returns Uri Remarks This member should return a Uri of the form: https://login.microsoftonline.com/{tenantOrDirectoryId}/oauth2/v2.0/token where tenantOrDirectoryId is the value of “Directory (tenant) ID” under the App registration in the Azure Portal. \uD83D\uDD2C☔ test coverage of this member further documents how the RestApiMetadata should be formatted ToAzureKeyVaultSecretUri(RestApiMetadata?, string) Converts the specified RestApiMetadata to the Uri required by GetSecretAsync(string, Uri). public static Uri ToAzureKeyVaultSecretUri(this RestApiMetadata? meta, string secretNameKey) Parameters meta RestApiMetadata the RestApiMetadata secretNameKey string the name of the Claim key that returns the Vault secret Returns Uri Remarks This member should return a Uri of the form: https://{vaultName}.vault.azure.net/secrets/{secretName}?api-version=2016-10-01 where vaultName is the name of the Azure Key Vault; secretName is the name of the secret in the vault. \uD83D\uDD2C☔ test coverage of this member further documents how the RestApiMetadata should be formatted ToUri(RestApiMetadata?, string?, params string?[]) Converts the specified RestApiMetadata to a Uri based on the specified URI Template. public static Uri? ToUri(this RestApiMetadata? meta, string? uriTemplateKey, params string?[] bindByPositionValues) Parameters meta RestApiMetadata the RestApiMetadata uriTemplateKey string The URI template key. bindByPositionValues string[] The bind by position values. Returns Uri"
  },
  "latest/Songhay.Extensions.StreamReaderExtensions.html": {
    "href": "latest/Songhay.Extensions.StreamReaderExtensions.html",
    "title": "Class StreamReaderExtensions | SonghayCore API",
    "keywords": "Class StreamReaderExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of StreamReader. public static class StreamReaderExtensions Inheritance object StreamReaderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks “StreamReader is designed for character input in a particular encoding, whereas the Stream class is designed for byte input and output.” — https://learn.microsoft.com/en-us/dotnet/api/system.io.streamreader?view=net-5.0#remarks Methods ReadLinesAsync(StreamReader?, Func<string?, bool>) Reads the lines from the specified StreamReader. public static Task ReadLinesAsync(this StreamReader? reader, Func<string?, bool> lineAction) Parameters reader StreamReader the StreamReader lineAction Func<string, bool> the line action; return false to stop reading lines Returns Task"
  },
  "latest/Songhay.Extensions.StringBuilderExtensions.html": {
    "href": "latest/Songhay.Extensions.StringBuilderExtensions.html",
    "title": "Class StringBuilderExtensions | SonghayCore API",
    "keywords": "Class StringBuilderExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of StringBuilder public static class StringBuilderExtensions Inheritance object StringBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AppendLabelWithValue(StringBuilder?, string, object?) Appends the label with value. public static void AppendLabelWithValue(this StringBuilder? builder, string name, object? value) Parameters builder StringBuilder The builder. name string The name. value object The value. AppendLabelWithValue(StringBuilder?, string, object?, string?) Appends the label with value. public static void AppendLabelWithValue(this StringBuilder? builder, string name, object? value, string? defaultValue) Parameters builder StringBuilder The builder. name string The name. value object The value. defaultValue string The default value. AppendLabelWithValue(StringBuilder?, string, object?, string?, bool) Appends the label with value. public static void AppendLabelWithValue(this StringBuilder? builder, string name, object? value, string? defaultValue, bool hasLineBreak) Parameters builder StringBuilder The builder. name string The name. value object The value. defaultValue string The default value. hasLineBreak bool When true add NewLine between label and value. Remarks This method will append name: value to the appending StringBuilder. This is useful when overriding ToString()."
  },
  "latest/Songhay.Extensions.StringExtensions.html": {
    "href": "latest/Songhay.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | SonghayCore API",
    "keywords": "Class StringExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of string. public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CsvSplit(string?) Splits CSV text format into an array of string. public static string[]? CsvSplit(this string? source) Parameters source string The source. Returns string[] Remarks This code is based on “LINQ to TEXT and LINQ to CSV” by Eric Lippert [http://blogs.msdn.com/b/ericwhite/archive/2008/09/30/linq-to-text-and-linq-to-csv.aspx] EqualsInvariant(string?, string?) Returns true when the strings are equal without regard to cultural locales or casing. public static bool EqualsInvariant(this string? input, string? otherString) Parameters input string The input. otherString string The other string. Returns bool EqualsInvariant(string?, string?, bool) Returns true when the strings are equal without regard to cultural locales. public static bool EqualsInvariant(this string? input, string? otherString, bool ignoreCase) Parameters input string The input. otherString string The other string. ignoreCase bool Returns bool EscapeInterpolation(string?) Escapes the interpolation tokens of Format(string, params object[]). public static string? EscapeInterpolation(this string? input) Parameters input string The input. Returns string FromCamelCaseToEnumerable(string?) Converts camel-case string to IEnumerable<T>. public static IEnumerable<string> FromCamelCaseToEnumerable(this string? input) Parameters input string The input. Returns IEnumerable<string> FromSnakeToCaps(string?) Replaces “snake” underscores with caps of first char after the underscore. public static string? FromSnakeToCaps(this string? input) Parameters input string Returns string In(string?, string?) Determines whether the specified input is in the comma-delimited values. public static bool In(this string? input, string? delimitedValues) Parameters input string The input. delimitedValues string The delimited values. Returns bool In(string?, string?, char) Determines whether the specified input is in the delimited values. public static bool In(this string? input, string? delimitedValues, char separator) Parameters input string The input. delimitedValues string The delimited values. separator char The separator. Returns bool InDoubleQuotes(string?) Returns string in double quotes. public static string? InDoubleQuotes(this string? input) Parameters input string The input. Returns string InDoubleQuotesOrDefault(string?, string) Returns string in double quotes or default. public static string? InDoubleQuotesOrDefault(this string? input, string defaultValue) Parameters input string The input. defaultValue string The default value. Returns string InsertSpacesBeforeCaps(string?) Inserts the spaces before caps. public static IEnumerable<char> InsertSpacesBeforeCaps(this string? input) Parameters input string The input. Returns IEnumerable<char> IsByte(string?) Determines whether the specified input is byte. public static bool IsByte(this string? input) Parameters input string The input. Returns bool true if the specified input is byte; otherwise, false. IsByte(string?, Predicate<byte>?) Determines whether the specified input is byte. public static bool IsByte(this string? input, Predicate<byte>? secondaryTest) Parameters input string The input. secondaryTest Predicate<byte> The secondary test. Returns bool true if the specified input is byte; otherwise, false. IsDecimal(string?) Determines whether the specified input is decimal. public static bool IsDecimal(this string? input) Parameters input string The input. Returns bool true if the specified input is decimal; otherwise, false. IsDecimal(string?, Predicate<decimal>?) Determines whether the specified input is decimal. public static bool IsDecimal(this string? input, Predicate<decimal>? secondaryTest) Parameters input string The input. secondaryTest Predicate<decimal> The secondary test. Returns bool true if the specified input is decimal; otherwise, false. IsInteger(string?) Determines whether the specified input is integer. public static bool IsInteger(this string? input) Parameters input string The input. Returns bool true if the specified input is integer; otherwise, false. IsInteger(string?, Predicate<int>?) Determines whether the specified input is integer. public static bool IsInteger(this string? input, Predicate<int>? secondaryTest) Parameters input string The input. secondaryTest Predicate<int> The secondary test. Returns bool true if the specified input is integer; otherwise, false. IsLong(string?) Determines whether the specified input is long. public static bool IsLong(this string? input) Parameters input string The input. Returns bool true if the specified input is long; otherwise, false. IsLong(string?, Predicate<long>?) Determines whether the specified input is long. public static bool IsLong(this string? input, Predicate<long>? secondaryTest) Parameters input string The input. secondaryTest Predicate<long> The secondary test. Returns bool true if the specified input is long; otherwise, false. IsTelephoneNumber(string?) Determines whether the specified input is a telephone number. public static bool IsTelephoneNumber(this string? input) Parameters input string The input. Returns bool true if is telephone number; otherwise, false. IsUnc(string?) Determines whether the specified input is a UNC. public static bool IsUnc(this string? input) Parameters input string The input. Returns bool true if is a UNC; otherwise, false. Remarks \uD83D\uDCDA https://stackoverflow.com/a/47531093/22944 \uD83D\uDCDA https://en.wikipedia.org/wiki/Path_(computing)#Uniform_Naming_Convention LooksLikeEmailAddress(string?) Determines whether the specified input looks like an email address. public static bool LooksLikeEmailAddress(this string? input) Parameters input string The input. Returns bool true if seems to be an email address; otherwise, false. Remarks “In short, don’t expect a single, usable regex to do a proper job. And the best regex will validate the syntax, not the validity of an e-mail (jhohn@example.com is correct but it will probably bounce…).” [http://stackoverflow.com/questions/201323/how-to-use-a-regular-expression-to-validate-an-email-addresses] RemoveDiacritics(string) Remove accent from strings public static string RemoveDiacritics(this string input) Parameters input string The input. Returns string string without accents Examples input: \"Příliš žluťoučký kůň úpěl ďábelské ódy.\" result: \"Prilis zlutoucky kun upel dabelske ody.\" Remarks From Tomas Kubes, http://www.codeproject.com/Articles/31050/String-Extension-Collection-for-C Also, see http://stackoverflow.com/questions/249087/how-do-i-remove-diacritics-accents-from-a-string-in-net Reverse(string?) Reverse the string from http://en.wikipedia.org/wiki/Extension_method public static string? Reverse(this string? input) Parameters input string Returns string Remarks Based on work by Tomas Kubes, http://www.codeproject.com/Articles/31050/String-Extension-Collection-for-C ToAsciiLettersWithSpacer(string?) Converts the string into a ASCII letters with spacer \\0. public static string? ToAsciiLettersWithSpacer(this string? input) Parameters input string The input. Returns string ToAsciiLettersWithSpacer(string?, char) Converts the string into ASCII letters with spacer. public static string? ToAsciiLettersWithSpacer(this string? input, char spacer) Parameters input string The input. spacer char The spacer. Returns string Remarks \uD83D\uDCD6 https://en.wikipedia.org/wiki/ASCII \uD83D\uDCD6 https://stackoverflow.com/a/7826216/22944 ToBlogSlug(string?) Converts the string into a blog slug. public static string ToBlogSlug(this string? input) Parameters input string The input. Returns string ToCamelCase(string?) Converts the string into camel case by lower-casing the first character. public static string? ToCamelCase(this string? input) Parameters input string The input. Returns string ToConfigurationKey(string?) Convert a command-line args like those defined in ConsoleArgsScalars to IConfiguration-key format. public static string ToConfigurationKey(this string? input) Parameters input string The input. Returns string ToDigitsOnly(string?) Converts the string into digits only. public static string? ToDigitsOnly(this string? input) Parameters input string The input. Returns string ToIntString(string?) Prepares a string to be converted to int. public static string? ToIntString(this string? input) Parameters input string The input. Returns string ToIntString(string?, string) Prepares a string to be converted to int. public static string? ToIntString(this string? input, string defaultValue) Parameters input string The input. defaultValue string The default value (\"0\" by default). Returns string ToNumberOfDirectoryLevels(string?) Returns the number of directory levels based on the conventions ../ or ..</code>. public static int ToNumberOfDirectoryLevels(this string? path) Parameters path string The path. Returns int ToNumericString(string?) Converts the string into a numeric format for parsing. public static string? ToNumericString(this string? input) Parameters input string The input. Returns string Returns a numeric string ready for integer or float parsing. Remarks This member does not support parenthesis as indicators of negative numbers. ToNumericString(string?, string?) Converts the string into a numeric format for parsing. public static string? ToNumericString(this string? input, string? defaultValue) Parameters input string The input. defaultValue string The default value (\"0\" by default). Returns string Returns a numeric string ready for integer or float parsing. Remarks This member does not support parenthesis as indicators of negative numbers. ToPascalCase(string?) Converts the string into camel case by upper-casing the first character. public static string? ToPascalCase(this string? input) Parameters input string The input. Returns string ToSnakeCase(string?) Converts the string into camel case then replaces every upper case character with an underscore and its lowercase equivalent. public static string? ToSnakeCase(this string? input) Parameters input string The input. Returns string ToSubstringInContext(string?, string?, int) Formats the string into a shortened form, showing the search text in context. public static string? ToSubstringInContext(this string? input, string? searchText, int contextLength) Parameters input string The input. searchText string The search text. contextLength int Length of the context. Returns string Truncate(string?) Truncates the specified input to 16 characters. The input. public static string? Truncate(this string? input) Parameters input string Returns string Truncate(string?, int) Truncates the specified input to 16 characters. The input. The length. public static string? Truncate(this string? input, int length) Parameters input string length int Returns string Truncate(string?, int, string) Truncates the specified input. public static string? Truncate(this string? input, int length, string ellipsis) Parameters input string The input. length int The length. ellipsis string Returns string WithConfigurationHelpTextSuffix(string?) Returns the specified string with HelpTextSuffix. public static string WithConfigurationHelpTextSuffix(this string? input) Parameters input string The input. Returns string"
  },
  "latest/Songhay.Extensions.TimeSpanExtensions.html": {
    "href": "latest/Songhay.Extensions.TimeSpanExtensions.html",
    "title": "Class TimeSpanExtensions | SonghayCore API",
    "keywords": "Class TimeSpanExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of TimeSpan. public static class TimeSpanExtensions Inheritance object TimeSpanExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ListDays(TimeSpan) Lists the days for the specified TimeSpan. public static IList<DateTime> ListDays(this TimeSpan span) Parameters span TimeSpan The TimeSpan. Returns IList<DateTime> ListDays(TimeSpan, DateTime) Lists the days for the specified TimeSpan from the specified start DateTime. public static IList<DateTime> ListDays(this TimeSpan span, DateTime startDate) Parameters span TimeSpan The TimeSpan. startDate DateTime The start date. Returns IList<DateTime>"
  },
  "latest/Songhay.Extensions.TraceSourceExtensions.html": {
    "href": "latest/Songhay.Extensions.TraceSourceExtensions.html",
    "title": "Class TraceSourceExtensions | SonghayCore API",
    "keywords": "Class TraceSourceExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of TraceSource public static class TraceSourceExtensions Inheritance object TraceSourceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Based on Fonlow.Diagnostics by Zijian Huang [https://github.com/zijianhuang/Fonlow.Diagnostics] Also see “Use TraceSource Efficiently” [http://www.codeproject.com/Tips/1071853/Use-TraceSource-Efficiently] Methods TraceError(TraceSource?, Exception) Traces the error. public static void TraceError(this TraceSource? traceSource, Exception ex) Parameters traceSource TraceSource The trace source. ex Exception The exception. TraceError(TraceSource?, Exception?, bool) Traces the error. public static void TraceError(this TraceSource? traceSource, Exception? ex, bool includeStackTrace) Parameters traceSource TraceSource The trace source. ex Exception The exception. includeStackTrace bool When true, include StackTrace info. TraceError(TraceSource?, string) Traces the error. public static void TraceError(this TraceSource? traceSource, string message) Parameters traceSource TraceSource The trace source. message string The message. TraceError(TraceSource?, string, params object[]) Traces the error. public static void TraceError(this TraceSource? traceSource, string format, params object[] args) Parameters traceSource TraceSource The trace source. format string The format. args object[] The arguments. TraceVerbose(TraceSource?, string) Trace event type Verbose public static void TraceVerbose(this TraceSource? traceSource, string message) Parameters traceSource TraceSource The trace source. message string The message. TraceVerbose(TraceSource?, string, params object[]) Trace event type Verbose public static void TraceVerbose(this TraceSource? traceSource, string format, params object[] args) Parameters traceSource TraceSource The trace source. format string The format. args object[] The arguments. TraceWarning(TraceSource?, string) Trace event type Warning public static void TraceWarning(this TraceSource? traceSource, string message) Parameters traceSource TraceSource The trace source. message string The message. TraceWarning(TraceSource?, string, params object[]) Trace event type Warning public static void TraceWarning(this TraceSource? traceSource, string format, params object[] args) Parameters traceSource TraceSource The trace source. format string The format. args object[] The arguments. WithSourceLevels(TraceSource?) Returns the TraceSource with Switch Level All. public static TraceSource? WithSourceLevels(this TraceSource? traceSource) Parameters traceSource TraceSource The trace source. Returns TraceSource WithSourceLevels(TraceSource?, SourceLevels) Returns the TraceSource with the specified SourceLevels. public static TraceSource? WithSourceLevels(this TraceSource? traceSource, SourceLevels levels) Parameters traceSource TraceSource The trace source. levels SourceLevels The levels. Returns TraceSource WriteLine(TraceSource?, string) Trace event type Information public static void WriteLine(this TraceSource? traceSource, string message) Parameters traceSource TraceSource The trace source. message string The message. Remarks This member was previously marked with ObsoleteAttribute. For detail, see https://github.com/BryanWilhite/SonghayCore/issues/82#issuecomment-566214635 WriteLine(TraceSource?, string, params object[]) Trace event type Information public static void WriteLine(this TraceSource? traceSource, string format, params object[] args) Parameters traceSource TraceSource The trace source. format string The format. args object[] The arguments. Remarks This member was previously marked with ObsoleteAttribute. For detail, see https://github.com/BryanWilhite/SonghayCore/issues/82#issuecomment-566214635"
  },
  "latest/Songhay.Extensions.TraceSourcesExtensions.html": {
    "href": "latest/Songhay.Extensions.TraceSourcesExtensions.html",
    "title": "Class TraceSourcesExtensions | SonghayCore API",
    "keywords": "Class TraceSourcesExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of TraceSources public static class TraceSourcesExtensions Inheritance object TraceSourcesExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetConfiguredTraceSource(TraceSources?) Gets the configured trace source. public static TraceSource? GetConfiguredTraceSource(this TraceSources? instance) Parameters instance TraceSources The instance. Returns TraceSource Remarks For .NET Standard, this member makes sense after lines like these: var configuration = builder.Build(); TraceSources.ConfiguredTraceSourceName = configuration[DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey]; This member makes the GetConfiguredTraceSource pattern cross platform. GetConfiguredTraceSource(TraceSources?, IConfiguration?) Gets the configured trace source. public static TraceSource? GetConfiguredTraceSource(this TraceSources? instance, IConfiguration? configuration) Parameters instance TraceSources The instance. configuration IConfiguration The configuration. Returns TraceSource Remarks For .NET Standard, this member makes sense after lines like these: var configuration = builder.Build(); TraceSources.ConfiguredTraceSourceName = configuration[DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey]; This member makes the GetConfiguredTraceSource pattern cross platform. GetConfiguredTraceSource(TraceSources?, IConfiguration?, string?) Gets the configured trace source. public static TraceSource? GetConfiguredTraceSource(this TraceSources? instance, IConfiguration? configuration, string? key) Parameters instance TraceSources The instance. configuration IConfiguration The configuration. key string The key. Returns TraceSource Remarks For .NET Standard, this member makes sense after lines like these: var configuration = builder.Build(); TraceSources.ConfiguredTraceSourceName = configuration[DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey]; This member makes the GetConfiguredTraceSource pattern cross platform."
  },
  "latest/Songhay.Extensions.UriBuilderExtensions.html": {
    "href": "latest/Songhay.Extensions.UriBuilderExtensions.html",
    "title": "Class UriBuilderExtensions | SonghayCore API",
    "keywords": "Class UriBuilderExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of UriBuilder. public static class UriBuilderExtensions Inheritance object UriBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WithPath(UriBuilder?, string?) Returns UriBuilder with the specified path. public static UriBuilder? WithPath(this UriBuilder? builder, string? path) Parameters builder UriBuilder The builder. path string The path. Returns UriBuilder"
  },
  "latest/Songhay.Extensions.UriExtensions.html": {
    "href": "latest/Songhay.Extensions.UriExtensions.html",
    "title": "Class UriExtensions | SonghayCore API",
    "keywords": "Class UriExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Uri public static class UriExtensions Inheritance object UriExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsProbablyAFile(Uri?) Determines whether the Uri is a file. public static bool IsProbablyAFile(this Uri? input) Parameters input Uri The input. Returns bool Remarks Recall that IsFile is another way of stating that Uri.Schema == Uri.UriSchemeFile and that System.IO members can process URIs. Also note that the only way to truly define a directory or folder is with a trailing forward/back slash. ToAzureStorageCanonicalizedResourceLocation(Uri?, string?) This part of the signature string represents the storage account targeted by the request. Will also include any additional query parameters/values. For ListContainers, this will return something like this: /storageaccountname/\\ncomp:list public static string ToAzureStorageCanonicalizedResourceLocation(this Uri? uri, string? accountName) Parameters uri Uri The URI of the storage service. accountName string The storage account name. Returns string string representing the canonicalized resource. Remarks See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key See “Shared Key format for 2009-09-19 and later” [ https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key#shared-key-format-for-2009-09-19-and-later ] ToBaseUri(Uri?) Converts the Uri into a base URI. public static string? ToBaseUri(this Uri? input) Parameters input Uri The input. Returns string Returns a string like: https://MyServer:8080/ ToExpandedUriAsync(Uri?) Converts the specified Uri to its ‘expanded’ version. public static Task<Uri?> ToExpandedUriAsync(this Uri? expandableUri) Parameters expandableUri Uri The expandable Uri. Returns Task<Uri> Remarks This member will call itself recursively until IsMovedOrRedirected(HttpResponseMessage?) returns true or Location is null. ToExpandedUriPairAsync(Uri?) Converts the specified Uri to its ‘expanded’ version. public static Task<KeyValuePair<Uri?, Uri?>> ToExpandedUriPairAsync(this Uri? expandableUri) Parameters expandableUri Uri The expandable Uri. Returns Task<KeyValuePair<Uri, Uri>> ToFileName(Uri?) Converts the Uri into its file name. public static string? ToFileName(this Uri? input) Parameters input Uri The input. Returns string ToRelativeUriFromQuery(Uri?) Converts the Uri into a relative URI from query. public static Uri? ToRelativeUriFromQuery(this Uri? input) Parameters input Uri The input. Returns Uri"
  },
  "latest/Songhay.Extensions.UriTemplateExtensions.html": {
    "href": "latest/Songhay.Extensions.UriTemplateExtensions.html",
    "title": "Class UriTemplateExtensions | SonghayCore API",
    "keywords": "Class UriTemplateExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Tavis.UriTemplates.UriTemplate public static class UriTemplateExtensions Inheritance object UriTemplateExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods BindByPosition(UriTemplate?, params string[]) Binds the Tavis.UriTemplates.UriTemplate to the specified params by position. public static Uri? BindByPosition(this UriTemplate? template, params string[] values) Parameters template UriTemplate The template. values string[] The values. Returns Uri BindByPosition(UriTemplate?, Uri?, params string[]) Binds the Tavis.UriTemplates.UriTemplate to the specified params by position. public static Uri? BindByPosition(this UriTemplate? template, Uri? baseUri, params string[] values) Parameters template UriTemplate The template. baseUri Uri The base URI. values string[] The values. Returns Uri"
  },
  "latest/Songhay.Extensions.Utf8JsonWriterExtensions.html": {
    "href": "latest/Songhay.Extensions.Utf8JsonWriterExtensions.html",
    "title": "Class Utf8JsonWriterExtensions | SonghayCore API",
    "keywords": "Class Utf8JsonWriterExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of Utf8JsonWriter public static class Utf8JsonWriterExtensions Inheritance object Utf8JsonWriterExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WriteObject(Utf8JsonWriter?, Action?) Wrap Utf8JsonWriter statements inside WriteStartObject() and WriteEndObject(). public static Utf8JsonWriter? WriteObject(this Utf8JsonWriter? writer, Action? writerAction) Parameters writer Utf8JsonWriter the Utf8JsonWriter writerAction Action Returns Utf8JsonWriter Remarks This method is for building a JSON object. WriteObject(Utf8JsonWriter?, string, Action?) Wrap Utf8JsonWriter statements inside WritePropertyName(string)WriteStartObject() and WriteEndObject(). public static Utf8JsonWriter? WriteObject(this Utf8JsonWriter? writer, string propertyName, Action? writerAction) Parameters writer Utf8JsonWriter the Utf8JsonWriter propertyName string writerAction Action Returns Utf8JsonWriter Remarks This method is for building a JSON object for a JSON property."
  },
  "latest/Songhay.Extensions.ValidationContextExtensions.html": {
    "href": "latest/Songhay.Extensions.ValidationContextExtensions.html",
    "title": "Class ValidationContextExtensions | SonghayCore API",
    "keywords": "Class ValidationContextExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of ValidationResult and IValidatableObject, returning a ValidationContext. public static class ValidationContextExtensions Inheritance object ValidationContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks The use of these methods should be the last resort after deferring to a NuGet package like FluentValidation. Methods ToDisplayText(IEnumerable<ValidationResult>?) Converts the IEnumerable<T> into a display text. public static string ToDisplayText(this IEnumerable<ValidationResult>? results) Parameters results IEnumerable<ValidationResult> The results. Returns string ToDisplayText(ValidationResult?) Converts the ValidationResult into a display text. public static string ToDisplayText(this ValidationResult? result) Parameters result ValidationResult The result. Returns string ToValidationContext(IValidatableObject) Converts the object into a validation context. public static ValidationContext ToValidationContext(this IValidatableObject objectToValidate) Parameters objectToValidate IValidatableObject The object to validate. Returns ValidationContext ToValidationResults(IValidatableObject?) Converts the object into a validation results. public static IEnumerable<ValidationResult> ToValidationResults(this IValidatableObject? objectToValidate) Parameters objectToValidate IValidatableObject The object to validate. Returns IEnumerable<ValidationResult> Remarks This member will validate all properties;validateAllProperties == true. ToValidationResults(IValidatableObject?, bool, ValidationContext?) Converts the object into a validation results. public static IEnumerable<ValidationResult> ToValidationResults(this IValidatableObject? objectToValidate, bool validateAllProperties, ValidationContext? validationContext) Parameters objectToValidate IValidatableObject The object to validate. validateAllProperties bool true to validate all properties;if false, only required attributes are validated. validationContext ValidationContext the ValidationContext Returns IEnumerable<ValidationResult> ToValidationResults(IValidatableObject?, ValidationContext?) Converts the object into a validation results. public static IEnumerable<ValidationResult> ToValidationResults(this IValidatableObject? objectToValidate, ValidationContext? validationContext) Parameters objectToValidate IValidatableObject The object to validate. validationContext ValidationContext the ValidationContext Returns IEnumerable<ValidationResult> Remarks This member will validate all properties;validateAllProperties == true. ToValidationResults(IValidatableObject?, string?, object?) Converts the object into a validation results. public static IEnumerable<ValidationResult> ToValidationResults(this IValidatableObject? objectToValidate, string? propertyName, object? propertyValue) Parameters objectToValidate IValidatableObject The object to validate. propertyName string Name of the property. propertyValue object The property value. Returns IEnumerable<ValidationResult> ToValidationResults(IValidatableObject?, string?, object?, ValidationContext?) Converts the object into a validation results. public static IEnumerable<ValidationResult> ToValidationResults(this IValidatableObject? objectToValidate, string? propertyName, object? propertyValue, ValidationContext? validationContext) Parameters objectToValidate IValidatableObject The object to validate. propertyName string Name of the property. propertyValue object The property value. validationContext ValidationContext the ValidationContext Returns IEnumerable<ValidationResult>"
  },
  "latest/Songhay.Extensions.XElementExtensions.html": {
    "href": "latest/Songhay.Extensions.XElementExtensions.html",
    "title": "Class XElementExtensions | SonghayCore API",
    "keywords": "Class XElementExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of XElement. public static class XElementExtensions Inheritance object XElementExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddOnce(XElement?, XAttribute?) Prevents the specified XAttribute from being added more than once. public static void AddOnce(this XElement? element, XAttribute? attribute) Parameters element XElement The element. attribute XAttribute The attribute. GetElement(XNode?, XName?) Gets the XElement. public static XElement? GetElement(this XNode? node, XName? name) Parameters node XNode The node. name XName The name. Returns XElement HasElementName(XElement?, XName?) Determines whether the XElement has the specified XName. public static bool HasElementName(this XElement? element, XName? name) Parameters element XElement The element. name XName The name. Returns bool true when the element has the name; otherwise, false. HasElementName(XNode?, XName?) Determines whether the XNode has the specified XName. public static bool HasElementName(this XNode? node, XName? name) Parameters node XNode The node. name XName The name. Returns bool true when the node has the name; otherwise, false. IsElement(XNode?) Determines whether the specified node is XElement. public static bool IsElement(this XNode? node) Parameters node XNode The node. Returns bool true if the specified node is element; otherwise, false. ToAttributeValueOrDefault(XElement?, string?, string?) Converts the XElement into a attribute value or default. public static string? ToAttributeValueOrDefault(this XElement? element, string? attributeName, string? defaultValue) Parameters element XElement The element. attributeName string Name of the attribute. defaultValue string The default value. Returns string ToAttributeValueOrNull(XElement?, string?) Returns the attribute value or null. public static string? ToAttributeValueOrNull(this XElement? element, string? attributeName) Parameters element XElement The element. attributeName string Name of the attribute. Returns string ToElementValueOrDefault(XElement?, string?) Converts the XElement into a element value or default. public static string? ToElementValueOrDefault(this XElement? element, string? defaultValue) Parameters element XElement The element. defaultValue string The default value. Returns string ToElementValueOrNull(IEnumerable<XElement>?) Returns the element value or null. public static string? ToElementValueOrNull(this IEnumerable<XElement>? elements) Parameters elements IEnumerable<XElement> The elements. Returns string ToElementValueOrNull(XElement?) Converts the XElement into a element value or null. public static string? ToElementValueOrNull(this XElement? element) Parameters element XElement The element. Returns string WithoutNamespaces(XElement?) Returns the specified XElement without namespace qualifiers on elements and attributes. public static XElement? WithoutNamespaces(this XElement? element) Parameters element XElement The element Returns XElement Remarks Based on “Answer: How to remove all namespaces from XML with C#?” [http://stackoverflow.com/a/7238007/22944?stw=2]"
  },
  "latest/Songhay.Extensions.XNamespaceExtensions.html": {
    "href": "latest/Songhay.Extensions.XNamespaceExtensions.html",
    "title": "Class XNamespaceExtensions | SonghayCore API",
    "keywords": "Class XNamespaceExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of XNamespace public static class XNamespaceExtensions Inheritance object XNamespaceExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToXName(XNamespace?, string?) Converts the XNamespace to an XName with the specified element name. public static XName? ToXName(this XNamespace? ns, string? elementName) Parameters ns XNamespace The ns. elementName string Name of the element. Returns XName"
  },
  "latest/Songhay.Extensions.XNodeExtensions.html": {
    "href": "latest/Songhay.Extensions.XNodeExtensions.html",
    "title": "Class XNodeExtensions | SonghayCore API",
    "keywords": "Class XNodeExtensions Namespace Songhay.Extensions Assembly SonghayCore.dll Extensions of XNode. public static class XNodeExtensions Inheritance object XNodeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetInnerXml(XNode) Gets the inner XML. public static string? GetInnerXml(this XNode node) Parameters node XNode The node. Returns string GetInnerXml(XNode?, bool, ReaderOptions) Gets the inner XML. public static string? GetInnerXml(this XNode? node, bool stripNamespaces, ReaderOptions options) Parameters node XNode The node. stripNamespaces bool if set to true then strip namespaces (true by default). options ReaderOptions The options (None by default). Returns string Remarks “If performance is important (e.g. lots of XML, parsed frequently), I'd use Daniel's CreateReader method every time.” [http://stackoverflow.com/questions/3793/best-way-to-get-innerxml-of-an-xelement] —Luke Sampson GetNamespaceResolver(XNode?) Gets IXmlNamespaceResolver from the specified node. public static IXmlNamespaceResolver? GetNamespaceResolver(this XNode? node) Parameters node XNode The node. Returns IXmlNamespaceResolver GetOuterXml(XNode?) Gets the outer XML. public static string? GetOuterXml(this XNode? node) Parameters node XNode The node. Returns string GetOuterXml(XNode?, bool, ReaderOptions) Gets the outer XML. public static string? GetOuterXml(this XNode? node, bool stripNamespaces, ReaderOptions options) Parameters node XNode The node. stripNamespaces bool if set to true then strip namespaces (true by default). options ReaderOptions The options (None by default). Returns string"
  },
  "latest/Songhay.Extensions.html": {
    "href": "latest/Songhay.Extensions.html",
    "title": "Namespace Songhay.Extensions | SonghayCore API",
    "keywords": "Namespace Songhay.Extensions Classes ArrayExtensions Extensions of Array. AssemblyExtensions Extensions of Assembly. ByteExtensions Extensions of byte. CharExtensions Extension of char. ConfigurationManagerExtensions Extensions of ConfigurationManager DataSetExtensions Extensions of DataSet. DateTimeExtensions Extensions of DateTime. DbDataReaderExtensions Extensions of DbDataReader DirectoryInfoExtensions Extensions of DirectoryInfo. DisplayItemModelExtensions Extensions of DisplayItemModel. EnumExtensions Extensions of Enum. EnvironmentExtensions Extensions of Environment. FileInfoExtensions Extension of FileInfo HttpClientExtensions Extensions of HttpClient HttpRequestMessageExtensions Extensions of HttpRequestMessage HttpResponseMessageExtensions Extensions of HttpResponseMessage. HttpWebRequestExtensions Extensions of HttpWebRequest IConfigurationExtensions Extensions of IConfiguration. IDictionaryExtensions Extensions of IDictionary<TKey, TValue>. IEnumerableOfTExtensions Extensions of IEnumerable<T>. ILoggerExtensions Extensions of ILogger to assist with “structured logging.” IPrincipalExtensions Extensions of IPrincipal ITemporalExtensions Extensions of ITemporal JsonNodeExtensions Extensions of JsonNode. MenuDisplayItemModelExtensions Extensions of MenuDisplayItemModel NullableExtensions Extensions of Nullable types. ObservableCollectionExtensions Extensions of ObservableCollection<T>. ProgramMetadataExtensions Extensions of ProgramMetadata. RestApiMetadataExtensions Extensions of RestApiMetadata. StreamReaderExtensions Extensions of StreamReader. StringBuilderExtensions Extensions of StringBuilder StringExtensions Extensions of string. TimeSpanExtensions Extensions of TimeSpan. TraceSourceExtensions Extensions of TraceSource TraceSourcesExtensions Extensions of TraceSources UriBuilderExtensions Extensions of UriBuilder. UriExtensions Extensions of Uri UriTemplateExtensions Extensions of Tavis.UriTemplates.UriTemplate Utf8JsonWriterExtensions Extensions of Utf8JsonWriter ValidationContextExtensions Extensions of ValidationResult and IValidatableObject, returning a ValidationContext. XElementExtensions Extensions of XElement. XNamespaceExtensions Extensions of XNamespace XNodeExtensions Extensions of XNode."
  },
  "latest/Songhay.Globalization.TextInfoUtility.html": {
    "href": "latest/Songhay.Globalization.TextInfoUtility.html",
    "title": "Class TextInfoUtility | SonghayCore API",
    "keywords": "Class TextInfoUtility Namespace Songhay.Globalization Assembly SonghayCore.dll Helper members for TextInfo. public static class TextInfoUtility Inheritance object TextInfoUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties EnglishWordsNotCapitalized “A virtually complete list of English words that are are NOT capitalized in titles.” [http://www.cumbrowski.com/CarstenC/articles/20070623_Title_Capitalization_in_the_English_Language.asp] public static ReadOnlyCollection<string> EnglishWordsNotCapitalized { get; } Property Value ReadOnlyCollection<string> Methods ToTitleCase(string) Wraps ToTitleCase(string) to add support for articles, conjunctions and prepositions. public static string ToTitleCase(string input) Parameters input string The input. Returns string"
  },
  "latest/Songhay.Globalization.html": {
    "href": "latest/Songhay.Globalization.html",
    "title": "Namespace Songhay.Globalization | SonghayCore API",
    "keywords": "Namespace Songhay.Globalization Classes TextInfoUtility Helper members for TextInfo."
  },
  "latest/Songhay.Hosting.DefaultHostedService.html": {
    "href": "latest/Songhay.Hosting.DefaultHostedService.html",
    "title": "Class DefaultHostedService | SonghayCore API",
    "keywords": "Class DefaultHostedService Namespace Songhay.Hosting Assembly SonghayCore.dll Defines the conventional, default Hosted Service public class DefaultHostedService : IHostedService Inheritance object DefaultHostedService Implements IHostedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Constructors DefaultHostedService(IHostApplicationLifetime, ILogger<DefaultHostedService>) Initializes a new instance of the DefaultHostedService class. public DefaultHostedService(IHostApplicationLifetime hostApplicationLifetime, ILogger<DefaultHostedService> logger) Parameters hostApplicationLifetime IHostApplicationLifetime the IHostApplicationLifetime logger ILogger<DefaultHostedService> the ILogger Methods StartAsync(CancellationToken) Triggered when the application host is ready to start the service. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the start process has been aborted. Returns Task StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task"
  },
  "latest/Songhay.Hosting.html": {
    "href": "latest/Songhay.Hosting.html",
    "title": "Namespace Songhay.Hosting | SonghayCore API",
    "keywords": "Namespace Songhay.Hosting Classes DefaultHostedService Defines the conventional, default Hosted Service"
  },
  "latest/Songhay.MathUtility.html": {
    "href": "latest/Songhay.MathUtility.html",
    "title": "Class MathUtility | SonghayCore API",
    "keywords": "Class MathUtility Namespace Songhay Assembly SonghayCore.dll Static helpers for Math. public static class MathUtility Inheritance object MathUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDigitInNumber(int, int) Gets the digit in number. public static byte? GetDigitInNumber(int x, int place) Parameters x int The x. place int The place (from right to left). Returns byte? GetMantissa(double, int) Gets the mantissa. public static double GetMantissa(double x, int round) Parameters x double The x. round int The round. Returns double TruncateNumber(double) Truncates the number. public static double TruncateNumber(double x) Parameters x double The x. Returns double Remarks Silverlight does not have Math.Truncate()."
  },
  "latest/Songhay.Models.ActivityOutput-1.html": {
    "href": "latest/Songhay.Models.ActivityOutput-1.html",
    "title": "Class ActivityOutput<TOutput> | SonghayCore API",
    "keywords": "Class ActivityOutput<TOutput> Namespace Songhay.Models Assembly SonghayCore.dll Defines the conventional output of IActivityTask<TInput, TOutput>. public class ActivityOutput<TOutput> Type Parameters TOutput The type of the output. Inheritance object ActivityOutput<TOutput> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Log Gets or sets the log. public string? Log { get; set; } Property Value string Output Gets or sets the output. public TOutput? Output { get; set; } Property Value TOutput"
  },
  "latest/Songhay.Models.ColorDisplayItemModel.html": {
    "href": "latest/Songhay.Models.ColorDisplayItemModel.html",
    "title": "Class ColorDisplayItemModel | SonghayCore API",
    "keywords": "Class ColorDisplayItemModel Namespace Songhay.Models Assembly SonghayCore.dll Model for color display public class ColorDisplayItemModel : DisplayItemModel, ISortable, ITemporal, IColorable Inheritance object DisplayItemModel ColorDisplayItemModel Implements ISortable ITemporal IColorable Derived MenuDisplayItemModel Inherited Members DisplayItemModel.Description DisplayItemModel.DisplayText DisplayItemModel.Id DisplayItemModel.ItemName DisplayItemModel.ResourceIndicator DisplayItemModel.Tag DisplayItemModel.SortOrdinal DisplayItemModel.EndDate DisplayItemModel.InceptDate DisplayItemModel.ModificationDate DisplayItemModel.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ITemporalExtensions.SetDefaults(ITemporal) ITemporalExtensions.SetDefaults(ITemporal?, DateTime?) NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) DisplayItemModelExtensions.HasTag(DisplayItemModel?, Func<object?, bool>?) DisplayItemModelExtensions.ToMenuDisplayItemModel(DisplayItemModel?) DisplayItemModelExtensions.WithTag(DisplayItemModel?, object) Properties BackgroundHex Gets or sets the background hexadecimal value. public string? BackgroundHex { get; set; } Property Value string ForegroundHex Gets or sets the foreground hexadecimal value. public string? ForegroundHex { get; set; } Property Value string"
  },
  "latest/Songhay.Models.ConsoleArgsScalars.html": {
    "href": "latest/Songhay.Models.ConsoleArgsScalars.html",
    "title": "Class ConsoleArgsScalars | SonghayCore API",
    "keywords": "Class ConsoleArgsScalars Namespace Songhay.Models Assembly SonghayCore.dll Centralizes conventional console args passed to IConfiguration. public static class ConsoleArgsScalars Inheritance object ConsoleArgsScalars Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ActivityName The name of the class implementing one of the Activity* abstractions. public const string ActivityName = \"--activity-name\" Field Value string Remarks Going forward, this Studio should not support command-line parameters based solely on position. All parameters should have a --key. [https://github.com/BryanWilhite/SonghayCore/issues/173] BaseDirectory The base-directory argument. public const string BaseDirectory = \"--base-directory\" Field Value string BaseDirectoryRequired Is BaseDirectory required flag. public const string BaseDirectoryRequired = \"--base-directory-required\" Field Value string DryRun Dry-run flag. public const string DryRun = \"--dry-run\" Field Value string FlagSpacer Ensures the space after a flag is clearly seen. public const string FlagSpacer = \" \" Field Value string Help The help argument flag. public const string Help = \"--help\" Field Value string HelpTextSuffix The conventional IConfiguration-key help text suffix. public const string HelpTextSuffix = \"-help\" Field Value string InputFile The input file argument. public const string InputFile = \"--input-file\" Field Value string InputString The input string argument. public const string InputString = \"--input-string\" Field Value string OutputFile The output file argument. public const string OutputFile = \"--output-file\" Field Value string OutputUnderBasePath Flag: use the output file argument relative to BaseDirectory. public const string OutputUnderBasePath = \"--output-under-base-path\" Field Value string SettingsFile The settings file argument. public const string SettingsFile = \"--settings-file\" Field Value string"
  },
  "latest/Songhay.Models.CorsOrigins.html": {
    "href": "latest/Songhay.Models.CorsOrigins.html",
    "title": "Class CorsOrigins | SonghayCore API",
    "keywords": "Class CorsOrigins Namespace Songhay.Models Assembly SonghayCore.dll Defines selected CORS origins. public static class CorsOrigins Inheritance object CorsOrigins Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BRollPlayer Uri string constant public const string BRollPlayer = \"http://brollplayer.azurewebsites.net\" Field Value string BRollPlayerCom Uri string constant public const string BRollPlayerCom = \"http://brollplayer.com\" Field Value string CodePenIo Uri string constant public const string CodePenIo = \"http://codepen.io\" Field Value string CommaDelimiter The comma delimiter public const string CommaDelimiter = \",\" Field Value string InOurTerribleness Uri string constant public const string InOurTerribleness = \"http://terrible.azurewebsites.net\" Field Value string InOurTerriblenessCom Uri string constant public const string InOurTerriblenessCom = \"http://inourterribleness.com\" Field Value string KinteSpaceAzure Uri string constant public const string KinteSpaceAzure = \"http://kintespace.azurewebsites.net\" Field Value string KinteSpaceCom Uri string constant public const string KinteSpaceCom = \"http://kintespace.com\" Field Value string SonghayBlog Uri string constant public const string SonghayBlog = \"http://songhayblog.azurewebsites.net\" Field Value string SonghayDashboard Uri string constant public const string SonghayDashboard = \"http://songhaydashboard.azurewebsites.net\" Field Value string SonghaySystemCom Uri string constant public const string SonghaySystemCom = \"http://songhaysystem.com\" Field Value string StaticsCodePenIo Uri string constant public const string StaticsCodePenIo = \"http://s.codepen.io\" Field Value string WordWalkingStickCom Uri string constant public const string WordWalkingStickCom = \"http://wordwalkingstick.com\" Field Value string"
  },
  "latest/Songhay.Models.DataParameterMetadata.html": {
    "href": "latest/Songhay.Models.DataParameterMetadata.html",
    "title": "Class DataParameterMetadata | SonghayCore API",
    "keywords": "Class DataParameterMetadata Namespace Songhay.Models Assembly SonghayCore.dll A JSON.net-friendly definition for types implementing IDataParameter. public class DataParameterMetadata Inheritance object DataParameterMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties DataRowVersion Gets or sets the data row version. public DataRowVersion DataRowVersion { get; set; } Property Value DataRowVersion DbType Gets or sets the type of the database. public DbType DbType { get; set; } Property Value DbType ParameterDirection Gets or sets the parameter direction. public ParameterDirection ParameterDirection { get; set; } Property Value ParameterDirection ParameterName Gets or sets the name of the parameter. public string? ParameterName { get; set; } Property Value string ParameterValue Gets or sets the parameter value. public object? ParameterValue { get; set; } Property Value object SourceColumn Gets or sets the source column. public string? SourceColumn { get; set; } Property Value string"
  },
  "latest/Songhay.Models.DbmsMetadata.html": {
    "href": "latest/Songhay.Models.DbmsMetadata.html",
    "title": "Class DbmsMetadata | SonghayCore API",
    "keywords": "Class DbmsMetadata Namespace Songhay.Models Assembly SonghayCore.dll Defines DBMS metadata public class DbmsMetadata Inheritance object DbmsMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties ConnectionString Gets or sets the connection string. public string? ConnectionString { get; set; } Property Value string ConnectionStringKey Gets or sets the connection string key. public string? ConnectionStringKey { get; set; } Property Value string EncryptionMetadata Gets or sets the encryption metadata. public EncryptionMetadata? EncryptionMetadata { get; set; } Property Value EncryptionMetadata ProviderName Gets or sets the name of the provider. public string? ProviderName { get; set; } Property Value string Methods ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance."
  },
  "latest/Songhay.Models.DeploymentEnvironment.html": {
    "href": "latest/Songhay.Models.DeploymentEnvironment.html",
    "title": "Class DeploymentEnvironment | SonghayCore API",
    "keywords": "Class DeploymentEnvironment Namespace Songhay.Models Assembly SonghayCore.dll Defines the deployment environment. public static class DeploymentEnvironment Inheritance object DeploymentEnvironment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields ConfigurationKey The configuration key. public const string ConfigurationKey = \"environment\" Field Value string ConfigurationKeyDelimiter The configuration key delimiter. public const string ConfigurationKeyDelimiter = \".\" Field Value string DefaultTraceSourceNameConfigurationKey The default trace source name configuration key. public const string DefaultTraceSourceNameConfigurationKey = \"defaultTraceSourceName\" Field Value string DevelopmentEnvironmentName The development environment name. public const string DevelopmentEnvironmentName = \"dev\" Field Value string ProductionEnvironmentName The production environment name. public const string ProductionEnvironmentName = \"prod\" Field Value string StagingEnvironmentName The staging environment name. public const string StagingEnvironmentName = \"qa\" Field Value string"
  },
  "latest/Songhay.Models.DisplayItemModel.html": {
    "href": "latest/Songhay.Models.DisplayItemModel.html",
    "title": "Class DisplayItemModel | SonghayCore API",
    "keywords": "Class DisplayItemModel Namespace Songhay.Models Assembly SonghayCore.dll Model for display item. public class DisplayItemModel : ISortable, ITemporal Inheritance object DisplayItemModel Implements ISortable ITemporal Derived ColorDisplayItemModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ITemporalExtensions.SetDefaults(ITemporal) ITemporalExtensions.SetDefaults(ITemporal?, DateTime?) DisplayItemModelExtensions.HasTag(DisplayItemModel?, Func<object?, bool>?) DisplayItemModelExtensions.ToMenuDisplayItemModel(DisplayItemModel?) DisplayItemModelExtensions.WithTag(DisplayItemModel?, object) NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks This class was originally developed to compensate for RIA Services not supporting composition of Entity Framework entities where an Entity is the property of another object. Properties Description Gets or sets the description. public string? Description { get; set; } Property Value string DisplayText Gets or sets the display text. public string? DisplayText { get; set; } Property Value string EndDate End/expiration DateTime of the item. public DateTime? EndDate { get; set; } Property Value DateTime? Id Gets or sets the identifier. public int Id { get; set; } Property Value int InceptDate Origin DateTime of the item. public DateTime? InceptDate { get; set; } Property Value DateTime? ItemName Gets or sets the item name. public string? ItemName { get; set; } Property Value string ModificationDate Modification/editorial DateTime of the item. public DateTime? ModificationDate { get; set; } Property Value DateTime? ResourceIndicator Gets or sets the resource indicator. public Uri? ResourceIndicator { get; set; } Property Value Uri SortOrdinal Gets or sets the sort ordinal. public byte SortOrdinal { get; set; } Property Value byte Tag Gets or sets the tag. public object? Tag { get; set; } Property Value object Methods ToString() Represents this instance as a string. public override string ToString() Returns string"
  },
  "latest/Songhay.Models.EncryptionMetadata.html": {
    "href": "latest/Songhay.Models.EncryptionMetadata.html",
    "title": "Class EncryptionMetadata | SonghayCore API",
    "keywords": "Class EncryptionMetadata Namespace Songhay.Models Assembly SonghayCore.dll Defines encryption metadata for persistent storage. public class EncryptionMetadata Inheritance object EncryptionMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties InitialVector Gets or sets the initial vector. public string? InitialVector { get; set; } Property Value string Key Gets or sets the key. public string? Key { get; set; } Property Value string"
  },
  "latest/Songhay.Models.HttpMethods.html": {
    "href": "latest/Songhay.Models.HttpMethods.html",
    "title": "Class HttpMethods | SonghayCore API",
    "keywords": "Class HttpMethods Namespace Songhay.Models Assembly SonghayCore.dll Centralizes HttpMethod members as strings. public static class HttpMethods Inheritance object HttpMethods Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Reference: “HTTP request methods” [https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods] Fields Delete HTTP Method DELETE. public const string Delete = \"DELETE\" Field Value string Get HTTP Method GET. public const string Get = \"GET\" Field Value string Head HTTP Method HEAD. public const string Head = \"HEAD\" Field Value string Options HTTP Method OPTIONS. public const string Options = \"OPTIONS\" Field Value string Post HTTP Method POST. public const string Post = \"POST\" Field Value string Put HTTP Method PUT. public const string Put = \"PUT\" Field Value string Trace HTTP Method TRACE. public const string Trace = \"TRACE\" Field Value string"
  },
  "latest/Songhay.Models.LazyDisplayItem-1.html": {
    "href": "latest/Songhay.Models.LazyDisplayItem-1.html",
    "title": "Class LazyDisplayItem<T> | SonghayCore API",
    "keywords": "Class LazyDisplayItem<T> Namespace Songhay.Models Assembly SonghayCore.dll Wraps a lazy-initialized object with meta-data for display. public class LazyDisplayItem<T> Type Parameters T Inheritance object LazyDisplayItem<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties DisplayName Gets or sets the targetValues name. public string? DisplayName { get; set; } Property Value string LazyItem Gets or sets the lazy item. public Lazy<T?>? LazyItem { get; set; } Property Value Lazy<T> Name Gets or sets the name. public string? Name { get; set; } Property Value string"
  },
  "latest/Songhay.Models.MenuDisplayItemModel.html": {
    "href": "latest/Songhay.Models.MenuDisplayItemModel.html",
    "title": "Class MenuDisplayItemModel | SonghayCore API",
    "keywords": "Class MenuDisplayItemModel Namespace Songhay.Models Assembly SonghayCore.dll Defines a colorable, selectable menu item public class MenuDisplayItemModel : ColorDisplayItemModel, ISortable, ITemporal, IColorable, IGroupable, ISelectable Inheritance object DisplayItemModel ColorDisplayItemModel MenuDisplayItemModel Implements ISortable ITemporal IColorable IGroupable ISelectable Inherited Members ColorDisplayItemModel.BackgroundHex ColorDisplayItemModel.ForegroundHex DisplayItemModel.Description DisplayItemModel.DisplayText DisplayItemModel.Id DisplayItemModel.ItemName DisplayItemModel.ResourceIndicator DisplayItemModel.Tag DisplayItemModel.SortOrdinal DisplayItemModel.EndDate DisplayItemModel.InceptDate DisplayItemModel.ModificationDate DisplayItemModel.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods ITemporalExtensions.SetDefaults(ITemporal) ITemporalExtensions.SetDefaults(ITemporal?, DateTime?) DisplayItemModelExtensions.HasTag(DisplayItemModel?, Func<object?, bool>?) DisplayItemModelExtensions.ToMenuDisplayItemModel(DisplayItemModel?) DisplayItemModelExtensions.WithTag(DisplayItemModel?, object) MenuDisplayItemModelExtensions.GetAllBy(MenuDisplayItemModel?, Func<MenuDisplayItemModel, bool>) MenuDisplayItemModelExtensions.HasGroupId(MenuDisplayItemModel?, string) MenuDisplayItemModelExtensions.WithChildItem(MenuDisplayItemModel?, MenuDisplayItemModel?) MenuDisplayItemModelExtensions.WithChildItems(MenuDisplayItemModel?, IEnumerable<MenuDisplayItemModel>?) NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties ChildItems Gets or sets the child items. public MenuDisplayItemModel[] ChildItems { get; set; } Property Value MenuDisplayItemModel[] GroupDisplayText Display text of the Group. public string? GroupDisplayText { get; set; } Property Value string GroupId Identifier of the Group. public string? GroupId { get; set; } Property Value string IsCollapsed Returns true when group is visually collapsed. public bool IsCollapsed { get; set; } Property Value bool IsDefaultSelection Gets or sets whether this is default selection. public bool? IsDefaultSelection { get; set; } Property Value bool? IsEnabled Gets or sets whether this is enabled. public bool? IsEnabled { get; set; } Property Value bool? IsSelected Gets or sets whether this is selected. public bool? IsSelected { get; set; } Property Value bool?"
  },
  "latest/Songhay.Models.MimeTypes.html": {
    "href": "latest/Songhay.Models.MimeTypes.html",
    "title": "Class MimeTypes | SonghayCore API",
    "keywords": "Class MimeTypes Namespace Songhay.Models Assembly SonghayCore.dll Selected MIME types for this Studio public static class MimeTypes Inheritance object MimeTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Multipurpose Internet Mail Extensions: https://tools.ietf.org/html/rfc6838 See: https://www.iana.org/assignments/media-types/media-types.xhtml Fields ApplicationAtomXml MIME media type name: application MIME subtype name: atom+xml [ https://www.iana.org/assignments/media-types/application/atom+xml ] public const string ApplicationAtomXml = \"application/atom+xml\" Field Value string ApplicationFormUrlEncoded MIME media type name: application Media subtype name: x-www-form-urlencoded [ https://www.iana.org/assignments/media-types/application/x-www-form-urlencoded ] public const string ApplicationFormUrlEncoded = \"application/x-www-form-urlencoded\" Field Value string ApplicationJson MIME media type name: application Subtype name: json [ https://www.iana.org/assignments/media-types/application/json ] public const string ApplicationJson = \"application/json\" Field Value string ApplicationOctetStream MIME media type name: application The octet-stream subtype is used to indicate that a body contains arbitrary binary data. [ https://www.iana.org/assignments/media-types/application/octet-stream ] public const string ApplicationOctetStream = \"application/octet-stream\" Field Value string ApplicationRssXml MIME media type name: application public const string ApplicationRssXml = \"application/rss+xml\" Field Value string Remarks This MIME type is not documented by www.iana.org. What did Dave Winer do to those people? ApplicationVndMsFontObject MIME media type name: application MIME subtype name: vnd.ms-fontobject [ https://www.iana.org/assignments/media-types/application/vnd.ms-fontobject ] public const string ApplicationVndMsFontObject = \"application/vnd.ms-fontobject\" Field Value string ApplicationXFontOtf MIME media type name: application public const string ApplicationXFontOtf = \"application/x-font-otf\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://www.iana.org/assignments/media-types/font/otf ] ApplicationXFontTtf MIME media type name: application public const string ApplicationXFontTtf = \"application/x-font-ttf\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://www.iana.org/assignments/media-types/font/ttf ] ApplicationXFontWoff MIME media type name: application public const string ApplicationXFontWoff = \"application/x-font-woff\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://www.iana.org/assignments/media-types/font/woff ] ApplicationXml MIME media type name: application Subtype name: xml [ https://www.iana.org/assignments/media-types/application/xml ] public const string ApplicationXml = \"application/xml\" Field Value string ImageGif The image GIF format. public const string ImageGif = \"image/gif\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://www.iana.org/go/rfc2046 ] [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#gif_graphics_interchange_format ] ImageJpeg The image JPEG format. public const string ImageJpeg = \"image/jpeg\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://www.iana.org/go/rfc2046 ] [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#jpeg_joint_photographic_experts_group_image ] ImagePng Media type name: image Media subtype name: png [ https://www.iana.org/assignments/media-types/image/png ] [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#png_portable_network_graphics ] public const string ImagePng = \"image/png\" Field Value string ImageSvgXml Media type name: image Subtype name: svg+xml [ https://www.iana.org/assignments/media-types/image/svg+xml ] [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#svg_scalable_vector_graphics ] public const string ImageSvgXml = \"image/svg+xml\" Field Value string ImageWebP The Web Picture format. public const string ImageWebP = \"image/webp\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image ] ImageXIcon Microsoft Icon. public const string ImageXIcon = \"image/x-icon\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#ico_microsoft_windows_icon ] TextCss Type name: text Subtype name: css [ https://www.iana.org/assignments/media-types/text/css ] public const string TextCss = \"text/css\" Field Value string TextHtml Type name: text Subtype name: Standards Tree - html [ https://www.iana.org/assignments/media-types/text/html ] public const string TextHtml = \"text/html\" Field Value string TextJavascript Type name: text Subtype name: javascript [ https://www.iana.org/assignments/media-types/text/javascript ] public const string TextJavascript = \"text/javascript\" Field Value string TextPlain Text, (generally ASCII or ISO 8859-n). public const string TextPlain = \"text/plain\" Field Value string Remarks This MIME type is not documented by www.iana.org. [ https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types ] TextXml Type name: text Subtype name: xml [ https://www.iana.org/assignments/media-types/text/xml ] public const string TextXml = \"text/xml\" Field Value string"
  },
  "latest/Songhay.Models.OpenAuthorizationData.html": {
    "href": "latest/Songhay.Models.OpenAuthorizationData.html",
    "title": "Class OpenAuthorizationData | SonghayCore API",
    "keywords": "Class OpenAuthorizationData Namespace Songhay.Models Assembly SonghayCore.dll Defines Authorization Information for OAuth 1.0. public class OpenAuthorizationData Inheritance object OpenAuthorizationData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Constructors OpenAuthorizationData() Initializes a new instance of the OpenAuthorizationData class. public OpenAuthorizationData() OpenAuthorizationData(NameValueCollection) Initializes a new instance of the OpenAuthorizationData class. public OpenAuthorizationData(NameValueCollection data) Parameters data NameValueCollection The data. OpenAuthorizationData(string) Initializes a new instance of the OpenAuthorizationData class. public OpenAuthorizationData(string nonce) Parameters nonce string The nonce. OpenAuthorizationData(string?, NameValueCollection?) Initializes a new instance of the OpenAuthorizationData class. public OpenAuthorizationData(string? nonce, NameValueCollection? data) Parameters nonce string The nonce. data NameValueCollection The data. Properties ConsumerKey Gets or sets the consumer key. public string? ConsumerKey { get; set; } Property Value string ConsumerSecret Gets or sets the consumer secret. public string? ConsumerSecret { get; set; } Property Value string Nonce Gets the nonce. public string? Nonce { get; set; } Property Value string SignatureMethod Gets the signature method. public string? SignatureMethod { get; set; } Property Value string TimeStamp Gets or sets the time stamp. public string? TimeStamp { get; set; } Property Value string Token Gets or sets the token. public string? Token { get; set; } Property Value string TokenSecret Gets or sets the token secret. public string? TokenSecret { get; set; } Property Value string Version Gets or sets the version. public string? Version { get; set; } Property Value string"
  },
  "latest/Songhay.Models.OpmlBody.html": {
    "href": "latest/Songhay.Models.OpmlBody.html",
    "title": "Class OpmlBody | SonghayCore API",
    "keywords": "Class OpmlBody Namespace Songhay.Models Assembly SonghayCore.dll Defines a managed representation of the OPML body element. [Serializable] [DataContract(Name = \"head\")] public class OpmlBody Inheritance object OpmlBody Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Outlines Gets or sets the outlines. [JsonPropertyName(\"outline\")] public OpmlOutline[] Outlines { get; set; } Property Value OpmlOutline[]"
  },
  "latest/Songhay.Models.OpmlDocument.html": {
    "href": "latest/Songhay.Models.OpmlDocument.html",
    "title": "Class OpmlDocument | SonghayCore API",
    "keywords": "Class OpmlDocument Namespace Songhay.Models Assembly SonghayCore.dll Dave Winer, his Outline Processor Markup Language document format [Serializable] [DataContract(Name = \"opml\")] [JsonSourceGenerationOptions(PropertyNamingPolicy = JsonKnownNamingPolicy.CamelCase, WriteIndented = true)] public class OpmlDocument Inheritance object OpmlDocument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks “OPML an XML-based format that allows exchange of outline-structured information between applications running on different operating systems and environments.” http://www.opml.org/about Constructors OpmlDocument() Initializes a new instance of the OpmlDocument class. public OpmlDocument() Fields RxOpmlSchema The rx opml schema URI public const string RxOpmlSchema = \"http://songhaysystem.com/schemas/opml.xsd\" Field Value string Properties OpmlBody Gets the OPML body element. [JsonPropertyName(\"body\")] public OpmlBody? OpmlBody { get; set; } Property Value OpmlBody OpmlHead Gets the OPML head element. [JsonPropertyName(\"head\")] public OpmlHead? OpmlHead { get; set; } Property Value OpmlHead Version Gets the version. [JsonPropertyName(\"version\")] public string? Version { get; set; } Property Value string XsiSchemaLocation Gets or sets the schema location. [JsonPropertyName(\"schemaLocation\")] public string? XsiSchemaLocation { get; set; } Property Value string"
  },
  "latest/Songhay.Models.OpmlHead.html": {
    "href": "latest/Songhay.Models.OpmlHead.html",
    "title": "Class OpmlHead | SonghayCore API",
    "keywords": "Class OpmlHead Namespace Songhay.Models Assembly SonghayCore.dll Defines a managed representation of the OPML head element. [Serializable] [DataContract(Name = \"head\")] public class OpmlHead Inheritance object OpmlHead Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Constructors OpmlHead() Initializes a new instance of the OpmlHead class. public OpmlHead() Properties DateCreated Gets or sets the date created. [JsonIgnore] public DateTime? DateCreated { get; set; } Property Value DateTime? DateCreatedString Gets the date created string. [JsonPropertyName(\"dateCreated\")] public string? DateCreatedString { get; set; } Property Value string DateModified Gets or sets the date modified. [JsonIgnore] public DateTime? DateModified { get; set; } Property Value DateTime? DateModifiedString Gets the date created string. [JsonPropertyName(\"dateModified\")] public string? DateModifiedString { get; set; } Property Value string OwnerEmail Gets or sets the owner email. [JsonPropertyName(\"ownerEmail\")] public string? OwnerEmail { get; set; } Property Value string OwnerName Gets or sets the name of the owner. [JsonPropertyName(\"ownerName\")] public string? OwnerName { get; set; } Property Value string Title Gets or sets the title. [JsonPropertyName(\"title\")] public string? Title { get; set; } Property Value string"
  },
  "latest/Songhay.Models.OpmlOutline.html": {
    "href": "latest/Songhay.Models.OpmlOutline.html",
    "title": "Class OpmlOutline | SonghayCore API",
    "keywords": "Class OpmlOutline Namespace Songhay.Models Assembly SonghayCore.dll Defines a managed representation of the OPML outline element. [Serializable] [DataContract(Name = \"outline\")] public class OpmlOutline Inheritance object OpmlOutline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Category Gets or sets the Category. [JsonPropertyName(\"category\")] public string? Category { get; set; } Property Value string Id Gets or sets the ID. [JsonPropertyName(\"id\")] public string? Id { get; set; } Property Value string OutlineType Gets or sets the type. [JsonPropertyName(\"type\")] public string? OutlineType { get; set; } Property Value string Outlines Gets or sets the outlines. [JsonPropertyName(\"outline\")] public OpmlOutline[] Outlines { get; set; } Property Value OpmlOutline[] Text Gets or sets the text. [JsonPropertyName(\"text\")] public string? Text { get; set; } Property Value string Title Gets or sets the title. [JsonPropertyName(\"title\")] public string? Title { get; set; } Property Value string Url Gets or sets the URL. [JsonPropertyName(\"url\")] public string? Url { get; set; } Property Value string XmlUrl Gets or sets the XML URL. [JsonPropertyName(\"xmlUrl\")] public string? XmlUrl { get; set; } Property Value string"
  },
  "latest/Songhay.Models.PackedResource-1.html": {
    "href": "latest/Songhay.Models.PackedResource-1.html",
    "title": "Class PackedResource<TResource> | SonghayCore API",
    "keywords": "Class PackedResource<TResource> Namespace Songhay.Models Assembly SonghayCore.dll Defines the meta-data of an Application resource. public class PackedResource<TResource> : PackedResource Type Parameters TResource The type of the resource. Inheritance object PackedResource PackedResource<TResource> Inherited Members PackedResource.DisplayName PackedResource.Key PackedResource.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties XamlObject Gets or sets the XAML object. public TResource? XamlObject { get; set; } Property Value TResource XamlString Gets or sets the XAML string. public string? XamlString { get; set; } Property Value string"
  },
  "latest/Songhay.Models.PackedResource.html": {
    "href": "latest/Songhay.Models.PackedResource.html",
    "title": "Class PackedResource | SonghayCore API",
    "keywords": "Class PackedResource Namespace Songhay.Models Assembly SonghayCore.dll Defines the meta-data of an Application resource. public class PackedResource Inheritance object PackedResource Derived PackedResource<TResource> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties DisplayName Gets or sets the display name. public string? DisplayName { get; set; } Property Value string Key Gets or sets the key. public string? Key { get; set; } Property Value string Name Gets or sets the name. public string? Name { get; set; } Property Value string"
  },
  "latest/Songhay.Models.PagedResult.html": {
    "href": "latest/Songhay.Models.PagedResult.html",
    "title": "Class PagedResult | SonghayCore API",
    "keywords": "Class PagedResult Namespace Songhay.Models Assembly SonghayCore.dll Defines a paged set of data. public class PagedResult Inheritance object PagedResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Metadata Gets or sets the metadata. public PagedResultMeta? Metadata { get; set; } Property Value PagedResultMeta PagedResultSet Gets or sets the paged result set. public IEnumerable<DisplayItemModel> PagedResultSet { get; set; } Property Value IEnumerable<DisplayItemModel>"
  },
  "latest/Songhay.Models.PagedResultMeta.html": {
    "href": "latest/Songhay.Models.PagedResultMeta.html",
    "title": "Class PagedResultMeta | SonghayCore API",
    "keywords": "Class PagedResultMeta Namespace Songhay.Models Assembly SonghayCore.dll Defines the metadata for a paged set of data. public class PagedResultMeta Inheritance object PagedResultMeta Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties PageCount Gets the page count. public int PageCount { get; } Property Value int PageIndex Gets or sets the index of the page. public int PageIndex { get; set; } Property Value int PageSize Gets or sets the size of the page. public int PageSize { get; set; } Property Value int TotalCount Gets or sets the total count. public int TotalCount { get; set; } Property Value int"
  },
  "latest/Songhay.Models.ProgramAssemblyInfo.html": {
    "href": "latest/Songhay.Models.ProgramAssemblyInfo.html",
    "title": "Class ProgramAssemblyInfo | SonghayCore API",
    "keywords": "Class ProgramAssemblyInfo Namespace Songhay.Models Assembly SonghayCore.dll Defines Assembly information. public class ProgramAssemblyInfo : IProgramAssemblyInfo Inheritance object ProgramAssemblyInfo Implements IProgramAssemblyInfo Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks This definition was developed for About… dialogs in Windows Forms. Constructors ProgramAssemblyInfo(Assembly?) Constructor of this class. public ProgramAssemblyInfo(Assembly? targetAssembly) Parameters targetAssembly Assembly The target Assembly Properties AssemblyCompany Gets Assembly company information. public string AssemblyCompany { get; } Property Value string AssemblyCopyright Gets Assembly copyright information. public string AssemblyCopyright { get; } Property Value string AssemblyDescription Gets Assembly description information. public string AssemblyDescription { get; } Property Value string AssemblyProduct Gets Assembly product information. public string AssemblyProduct { get; } Property Value string AssemblyTitle Gets title of assembly. public string AssemblyTitle { get; } Property Value string AssemblyVersion Gets Assembly version information. public string AssemblyVersion { get; } Property Value string AssemblyVersionDetail Gets detailed Assembly version information. public string AssemblyVersionDetail { get; } Property Value string Methods ToString() Returns format: [AssemblyCompany], [AssemblyTitle] Version: [AssemblyVersion], [AssemblyVersionDetail]. public override string ToString() Returns string"
  },
  "latest/Songhay.Models.ProgramGlyph.html": {
    "href": "latest/Songhay.Models.ProgramGlyph.html",
    "title": "Struct ProgramGlyph | SonghayCore API",
    "keywords": "Struct ProgramGlyph Namespace Songhay.Models Assembly SonghayCore.dll Defines a Unicode glyphic character public readonly record struct ProgramGlyph : IEquatable<ProgramGlyph> Implements IEquatable<ProgramGlyph> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) Properties Character Gets or sets the character, usually the Unicode Point. public string Character { get; init; } Property Value string HtmlEntityName Gets or sets the name of the HTML entity. public string HtmlEntityName { get; init; } Property Value string UnicodeGroup Gets or sets the unicode group. public string UnicodeGroup { get; init; } Property Value string UnicodeInteger Gets or sets the unicode integer. public int UnicodeInteger { get; } Property Value int UnicodeName Gets or sets the name of the unicode. public string UnicodeName { get; init; } Property Value string UnicodePoint Gets or sets the unicode point. public string UnicodePoint { get; init; } Property Value string Utf8UrlEncoding Gets or sets the UTF8 URL encoding. public string Utf8UrlEncoding { get; init; } Property Value string Windows1252UrlEncoding Gets or sets the windows1252 URL encoding. public string Windows1252UrlEncoding { get; init; } Property Value string XmlEntityNumber Gets or sets the XML entity number. public string XmlEntityNumber { get; init; } Property Value string"
  },
  "latest/Songhay.Models.ProgramMetadata.html": {
    "href": "latest/Songhay.Models.ProgramMetadata.html",
    "title": "Class ProgramMetadata | SonghayCore API",
    "keywords": "Class ProgramMetadata Namespace Songhay.Models Assembly SonghayCore.dll Defines the conventional Program metadata. public class ProgramMetadata Inheritance object ProgramMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) ProgramMetadataExtensions.ToConventionalHeaders(ProgramMetadata?, string) Properties CloudStorageSet Gets or sets the cloud storage set. [Obsolete(\"See https://github.com/BryanWilhite/SonghayCore/issues/176\")] public Dictionary<string, Dictionary<string, string>> CloudStorageSet { get; } Property Value Dictionary<string, Dictionary<string, string>> DbmsSet Gets or sets the DBMS set. public Dictionary<string, DbmsMetadata> DbmsSet { get; } Property Value Dictionary<string, DbmsMetadata> RestApiMetadataSet Gets or sets the REST API metadata set. public Dictionary<string, RestApiMetadata> RestApiMetadataSet { get; } Property Value Dictionary<string, RestApiMetadata> Methods ToString() Represents this instance as a string. public override string ToString() Returns string"
  },
  "latest/Songhay.Models.RestApiMetadata.html": {
    "href": "latest/Songhay.Models.RestApiMetadata.html",
    "title": "Class RestApiMetadata | SonghayCore API",
    "keywords": "Class RestApiMetadata Namespace Songhay.Models Assembly SonghayCore.dll REST API Metadata public class RestApiMetadata Inheritance object RestApiMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) RestApiMetadataExtensions.ToAzureActiveDirectoryAccessTokenData(RestApiMetadata?) RestApiMetadataExtensions.ToAzureActiveDirectoryAccessTokenUri(RestApiMetadata?) RestApiMetadataExtensions.ToAzureKeyVaultSecretUri(RestApiMetadata?, string) RestApiMetadataExtensions.ToUri(RestApiMetadata?, string?, params string?[]) Fields ClaimsSetHeaderApiAuthorization A convential name representing an API key to sent in the HTTP headers for authentication. public const string ClaimsSetHeaderApiAuthorization = \"headerAuthorization\" Field Value string Remarks Usually \"headerAuthorization\": \"Authorization\". See https://docs.microsoft.com/en-us/rest/api/azure/#request-header ClaimsSetHeaderApiContentType A convential name representing an API key to sent in the HTTP headers for authentication. public const string ClaimsSetHeaderApiContentType = \"headerContentType\" Field Value string Remarks Usually \"headerContentType\": \"Content-Type\". See https://docs.microsoft.com/en-us/rest/api/azure/#request-header ClaimsSetHeaderApiKey A convential name representing an API key to sent in the HTTP headers for authentication. public const string ClaimsSetHeaderApiKey = \"headerKey\" Field Value string Remarks Usually \"headerKey\": \"X-ApiKey\". Properties ApiBase Gets or sets the API base. public Uri? ApiBase { get; set; } Property Value Uri ApiKey Gets or sets the API key. public string? ApiKey { get; set; } Property Value string ClaimsSet Gets or sets the claims set. public Dictionary<string, string> ClaimsSet { get; set; } Property Value Dictionary<string, string> UriTemplates Gets or sets the URI templates. public Dictionary<string, string> UriTemplates { get; set; } Property Value Dictionary<string, string> Methods ToString() Converts this instance into a string representation. public override string ToString() Returns string"
  },
  "latest/Songhay.Models.RestPagingMetadata.html": {
    "href": "latest/Songhay.Models.RestPagingMetadata.html",
    "title": "Class RestPagingMetadata | SonghayCore API",
    "keywords": "Class RestPagingMetadata Namespace Songhay.Models Assembly SonghayCore.dll REST Paging Metadata public class RestPagingMetadata Inheritance object RestPagingMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties EndPosition Gets or sets the end position. public int EndPosition { get; set; } Property Value int FromDate Gets or sets from date. public DateTime? FromDate { get; set; } Property Value DateTime? NextUri Gets or sets the next URI. public string? NextUri { get; set; } Property Value string PreviousUri Gets or sets the previous URI. public string? PreviousUri { get; set; } Property Value string ResultSetSize Gets or sets the size of the result set. public int ResultSetSize { get; set; } Property Value int StartPosition Gets or sets the start position. public int StartPosition { get; set; } Property Value int ToDate Gets or sets to date. public DateTime? ToDate { get; set; } Property Value DateTime? TotalSetSize Gets or sets the total size of the set. public int TotalSetSize { get; set; } Property Value int Methods ToShallowCopy() Returns the shallow copy from MemberwiseClone(). public RestPagingMetadata? ToShallowCopy() Returns RestPagingMetadata ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance."
  },
  "latest/Songhay.Models.SystemErrorCodes.html": {
    "href": "latest/Songhay.Models.SystemErrorCodes.html",
    "title": "Class SystemErrorCodes | SonghayCore API",
    "keywords": "Class SystemErrorCodes Namespace Songhay.Models Assembly SonghayCore.dll Defines the error codes of Windows public static class SystemErrorCodes Inheritance object SystemErrorCodes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See MSDN: https://msdn.microsoft.com/en-us/library/ms681382.aspx Fields ERROR_ACCESS_DENIED System error code public const int ERROR_ACCESS_DENIED = 5 Field Value int ERROR_ADAP_HDW_ERR System error code public const int ERROR_ADAP_HDW_ERR = 57 Field Value int ERROR_ALREADY_ASSIGNED System error code public const int ERROR_ALREADY_ASSIGNED = 85 Field Value int ERROR_ALREADY_EXISTS System error code public const int ERROR_ALREADY_EXISTS = 183 Field Value int ERROR_ARENA_TRASHED System error code public const int ERROR_ARENA_TRASHED = 7 Field Value int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED System error code public const int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED = 174 Field Value int ERROR_AUTODATASEG_EXCEEDS_64k System error code public const int ERROR_AUTODATASEG_EXCEEDS_64k = 199 Field Value int ERROR_BAD_ARGUMENTS System error code public const int ERROR_BAD_ARGUMENTS = 160 Field Value int ERROR_BAD_COMMAND System error code public const int ERROR_BAD_COMMAND = 22 Field Value int ERROR_BAD_DEV_TYPE System error code public const int ERROR_BAD_DEV_TYPE = 66 Field Value int ERROR_BAD_DRIVER_LEVEL System error code public const int ERROR_BAD_DRIVER_LEVEL = 119 Field Value int ERROR_BAD_ENVIRONMENT System error code public const int ERROR_BAD_ENVIRONMENT = 10 Field Value int ERROR_BAD_EXE_FORMAT System error code public const int ERROR_BAD_EXE_FORMAT = 193 Field Value int ERROR_BAD_FILE_TYPE System error code public const int ERROR_BAD_FILE_TYPE = 222 Field Value int ERROR_BAD_FORMAT System error code public const int ERROR_BAD_FORMAT = 11 Field Value int ERROR_BAD_LENGTH System error code public const int ERROR_BAD_LENGTH = 24 Field Value int ERROR_BAD_NETPATH System error code public const int ERROR_BAD_NETPATH = 53 Field Value int ERROR_BAD_NET_NAME System error code public const int ERROR_BAD_NET_NAME = 67 Field Value int ERROR_BAD_NET_RESP System error code public const int ERROR_BAD_NET_RESP = 58 Field Value int ERROR_BAD_PATHNAME System error code public const int ERROR_BAD_PATHNAME = 161 Field Value int ERROR_BAD_PIPE System error code public const int ERROR_BAD_PIPE = 230 Field Value int ERROR_BAD_REM_ADAP System error code public const int ERROR_BAD_REM_ADAP = 60 Field Value int ERROR_BAD_THREADID_ADDR System error code public const int ERROR_BAD_THREADID_ADDR = 159 Field Value int ERROR_BAD_UNIT System error code public const int ERROR_BAD_UNIT = 20 Field Value int ERROR_BROKEN_PIPE System error code public const int ERROR_BROKEN_PIPE = 109 Field Value int ERROR_BUFFER_OVERFLOW System error code public const int ERROR_BUFFER_OVERFLOW = 111 Field Value int ERROR_BUSY System error code public const int ERROR_BUSY = 170 Field Value int ERROR_BUSY_DRIVE System error code public const int ERROR_BUSY_DRIVE = 142 Field Value int ERROR_CALL_NOT_IMPLEMENTED System error code public const int ERROR_CALL_NOT_IMPLEMENTED = 120 Field Value int ERROR_CANCEL_VIOLATION System error code public const int ERROR_CANCEL_VIOLATION = 173 Field Value int ERROR_CANNOT_COPY System error code public const int ERROR_CANNOT_COPY = 266 Field Value int ERROR_CANNOT_MAKE System error code public const int ERROR_CANNOT_MAKE = 82 Field Value int ERROR_CHECKOUT_REQUIRED System error code public const int ERROR_CHECKOUT_REQUIRED = 221 Field Value int ERROR_CHILD_NOT_COMPLETE System error code public const int ERROR_CHILD_NOT_COMPLETE = 129 Field Value int ERROR_CRC System error code public const int ERROR_CRC = 23 Field Value int ERROR_CURRENT_DIRECTORY System error code public const int ERROR_CURRENT_DIRECTORY = 16 Field Value int ERROR_DELETE_PENDING System error code public const int ERROR_DELETE_PENDING = 303 Field Value int ERROR_DEV_NOT_EXIST System error code public const int ERROR_DEV_NOT_EXIST = 55 Field Value int ERROR_DIRECTORY System error code public const int ERROR_DIRECTORY = 267 Field Value int ERROR_DIRECT_ACCESS_HANDLE System error code public const int ERROR_DIRECT_ACCESS_HANDLE = 130 Field Value int ERROR_DIR_NOT_EMPTY System error code public const int ERROR_DIR_NOT_EMPTY = 145 Field Value int ERROR_DIR_NOT_ROOT System error code public const int ERROR_DIR_NOT_ROOT = 144 Field Value int ERROR_DISCARDED System error code public const int ERROR_DISCARDED = 157 Field Value int ERROR_DISK_CHANGE System error code public const int ERROR_DISK_CHANGE = 107 Field Value int ERROR_DISK_FULL System error code public const int ERROR_DISK_FULL = 112 Field Value int ERROR_DISK_TOO_FRAGMENTED System error code public const int ERROR_DISK_TOO_FRAGMENTED = 302 Field Value int ERROR_DRIVE_LOCKED System error code public const int ERROR_DRIVE_LOCKED = 108 Field Value int ERROR_DUP_NAME System error code public const int ERROR_DUP_NAME = 52 Field Value int ERROR_DYNLINK_FROM_INVALID_RING System error code public const int ERROR_DYNLINK_FROM_INVALID_RING = 196 Field Value int ERROR_EAS_DIDNT_FIT System error code public const int ERROR_EAS_DIDNT_FIT = 275 Field Value int ERROR_EAS_NOT_SUPPORTED System error code public const int ERROR_EAS_NOT_SUPPORTED = 282 Field Value int ERROR_EA_FILE_CORRUPT System error code public const int ERROR_EA_FILE_CORRUPT = 276 Field Value int ERROR_EA_LIST_INCONSISTENT System error code public const int ERROR_EA_LIST_INCONSISTENT = 255 Field Value int ERROR_EA_TABLE_FULL System error code public const int ERROR_EA_TABLE_FULL = 277 Field Value int ERROR_ENVVAR_NOT_FOUND System error code public const int ERROR_ENVVAR_NOT_FOUND = 203 Field Value int ERROR_EXCL_SEM_ALREADY_OWNED System error code public const int ERROR_EXCL_SEM_ALREADY_OWNED = 101 Field Value int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY System error code public const int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY = 217 Field Value int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY System error code public const int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY = 218 Field Value int ERROR_EXE_MACHINE_TYPE_MISMATCH System error code public const int ERROR_EXE_MACHINE_TYPE_MISMATCH = 216 Field Value int ERROR_EXE_MARKED_INVALID System error code public const int ERROR_EXE_MARKED_INVALID = 192 Field Value int ERROR_FAIL_I24 System error code public const int ERROR_FAIL_I24 = 83 Field Value int ERROR_FAIL_NOACTION_REBOOT System error code public const int ERROR_FAIL_NOACTION_REBOOT = 350 Field Value int ERROR_FAIL_RESTART System error code public const int ERROR_FAIL_RESTART = 352 Field Value int ERROR_FAIL_SHUTDOWN System error code public const int ERROR_FAIL_SHUTDOWN = 351 Field Value int ERROR_FILENAME_EXCED_RANGE System error code public const int ERROR_FILENAME_EXCED_RANGE = 206 Field Value int ERROR_FILE_CHECKED_OUT System error code public const int ERROR_FILE_CHECKED_OUT = 220 Field Value int ERROR_FILE_EXISTS System error code public const int ERROR_FILE_EXISTS = 80 Field Value int ERROR_FILE_NOT_FOUND System error code public const int ERROR_FILE_NOT_FOUND = 2 Field Value int ERROR_FILE_TOO_LARGE System error code public const int ERROR_FILE_TOO_LARGE = 223 Field Value int ERROR_FORMS_AUTH_REQUIRED System error code public const int ERROR_FORMS_AUTH_REQUIRED = 224 Field Value int ERROR_GEN_FAILURE System error code public const int ERROR_GEN_FAILURE = 31 Field Value int ERROR_HANDLE_DISK_FULL System error code public const int ERROR_HANDLE_DISK_FULL = 39 Field Value int ERROR_HANDLE_EOF System error code public const int ERROR_HANDLE_EOF = 38 Field Value int ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT System error code public const int ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 308 Field Value int ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING System error code public const int ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 304 Field Value int ERROR_INFLOOP_IN_RELOC_CHAIN System error code public const int ERROR_INFLOOP_IN_RELOC_CHAIN = 202 Field Value int ERROR_INSUFFICIENT_BUFFER System error code public const int ERROR_INSUFFICIENT_BUFFER = 122 Field Value int ERROR_INVALID_ACCESS System error code public const int ERROR_INVALID_ACCESS = 12 Field Value int ERROR_INVALID_ADDRESS System error code public const int ERROR_INVALID_ADDRESS = 487 Field Value int ERROR_INVALID_AT_INTERRUPT_TIME System error code public const int ERROR_INVALID_AT_INTERRUPT_TIME = 104 Field Value int ERROR_INVALID_BLOCK System error code public const int ERROR_INVALID_BLOCK = 9 Field Value int ERROR_INVALID_CATEGORY System error code public const int ERROR_INVALID_CATEGORY = 117 Field Value int ERROR_INVALID_DATA System error code public const int ERROR_INVALID_DATA = 13 Field Value int ERROR_INVALID_DRIVE System error code public const int ERROR_INVALID_DRIVE = 15 Field Value int ERROR_INVALID_EA_HANDLE System error code public const int ERROR_INVALID_EA_HANDLE = 278 Field Value int ERROR_INVALID_EA_NAME System error code public const int ERROR_INVALID_EA_NAME = 254 Field Value int ERROR_INVALID_EVENT_COUNT System error code public const int ERROR_INVALID_EVENT_COUNT = 151 Field Value int ERROR_INVALID_EXE_SIGNATURE System error code public const int ERROR_INVALID_EXE_SIGNATURE = 191 Field Value int ERROR_INVALID_FLAG_NUMBER System error code public const int ERROR_INVALID_FLAG_NUMBER = 186 Field Value int ERROR_INVALID_FUNCTION System error code public const int ERROR_INVALID_FUNCTION = 1 Field Value int ERROR_INVALID_HANDLE System error code public const int ERROR_INVALID_HANDLE = 6 Field Value int ERROR_INVALID_LEVEL System error code public const int ERROR_INVALID_LEVEL = 124 Field Value int ERROR_INVALID_LIST_FORMAT System error code public const int ERROR_INVALID_LIST_FORMAT = 153 Field Value int ERROR_INVALID_LOCK_RANGE System error code public const int ERROR_INVALID_LOCK_RANGE = 307 Field Value int ERROR_INVALID_MINALLOCSIZE System error code public const int ERROR_INVALID_MINALLOCSIZE = 195 Field Value int ERROR_INVALID_MODULETYPE System error code public const int ERROR_INVALID_MODULETYPE = 190 Field Value int ERROR_INVALID_NAME System error code public const int ERROR_INVALID_NAME = 123 Field Value int ERROR_INVALID_OPLOCK_PROTOCOL System error code public const int ERROR_INVALID_OPLOCK_PROTOCOL = 301 Field Value int ERROR_INVALID_ORDINAL System error code public const int ERROR_INVALID_ORDINAL = 182 Field Value int ERROR_INVALID_PARAMETER System error code public const int ERROR_INVALID_PARAMETER = 87 Field Value int ERROR_INVALID_PASSWORD System error code public const int ERROR_INVALID_PASSWORD = 86 Field Value int ERROR_INVALID_SEGDPL System error code public const int ERROR_INVALID_SEGDPL = 198 Field Value int ERROR_INVALID_SEGMENT_NUMBER System error code public const int ERROR_INVALID_SEGMENT_NUMBER = 180 Field Value int ERROR_INVALID_SIGNAL_NUMBER System error code public const int ERROR_INVALID_SIGNAL_NUMBER = 209 Field Value int ERROR_INVALID_STACKSEG System error code public const int ERROR_INVALID_STACKSEG = 189 Field Value int ERROR_INVALID_STARTING_CODESEG System error code public const int ERROR_INVALID_STARTING_CODESEG = 188 Field Value int ERROR_INVALID_TARGET_HANDLE System error code public const int ERROR_INVALID_TARGET_HANDLE = 114 Field Value int ERROR_INVALID_VERIFY_SWITCH System error code public const int ERROR_INVALID_VERIFY_SWITCH = 118 Field Value int ERROR_IOPL_NOT_ENABLED System error code public const int ERROR_IOPL_NOT_ENABLED = 197 Field Value int ERROR_IS_JOINED System error code public const int ERROR_IS_JOINED = 134 Field Value int ERROR_IS_JOIN_PATH System error code public const int ERROR_IS_JOIN_PATH = 147 Field Value int ERROR_IS_JOIN_TARGET System error code public const int ERROR_IS_JOIN_TARGET = 133 Field Value int ERROR_IS_SUBSTED System error code public const int ERROR_IS_SUBSTED = 135 Field Value int ERROR_IS_SUBST_PATH System error code public const int ERROR_IS_SUBST_PATH = 146 Field Value int ERROR_IS_SUBST_TARGET System error code public const int ERROR_IS_SUBST_TARGET = 149 Field Value int ERROR_ITERATED_DATA_EXCEEDS_64k System error code public const int ERROR_ITERATED_DATA_EXCEEDS_64k = 194 Field Value int ERROR_JOIN_TO_JOIN System error code public const int ERROR_JOIN_TO_JOIN = 138 Field Value int ERROR_JOIN_TO_SUBST System error code public const int ERROR_JOIN_TO_SUBST = 140 Field Value int ERROR_LABEL_TOO_LONG System error code public const int ERROR_LABEL_TOO_LONG = 154 Field Value int ERROR_LOCKED System error code public const int ERROR_LOCKED = 212 Field Value int ERROR_LOCK_FAILED System error code public const int ERROR_LOCK_FAILED = 167 Field Value int ERROR_LOCK_VIOLATION System error code public const int ERROR_LOCK_VIOLATION = 33 Field Value int ERROR_MAX_SESSIONS_REACHED System error code public const int ERROR_MAX_SESSIONS_REACHED = 353 Field Value int ERROR_MAX_THRDS_REACHED System error code public const int ERROR_MAX_THRDS_REACHED = 164 Field Value int ERROR_META_EXPANSION_TOO_LONG System error code public const int ERROR_META_EXPANSION_TOO_LONG = 208 Field Value int ERROR_MOD_NOT_FOUND System error code public const int ERROR_MOD_NOT_FOUND = 126 Field Value int ERROR_MORE_DATA System error code public const int ERROR_MORE_DATA = 234 Field Value int ERROR_MR_MID_NOT_FOUND System error code public const int ERROR_MR_MID_NOT_FOUND = 317 Field Value int ERROR_NEGATIVE_SEEK System error code public const int ERROR_NEGATIVE_SEEK = 131 Field Value int ERROR_NESTING_NOT_ALLOWED System error code public const int ERROR_NESTING_NOT_ALLOWED = 215 Field Value int ERROR_NETNAME_DELETED System error code public const int ERROR_NETNAME_DELETED = 64 Field Value int ERROR_NETWORK_ACCESS_DENIED System error code public const int ERROR_NETWORK_ACCESS_DENIED = 65 Field Value int ERROR_NETWORK_BUSY System error code public const int ERROR_NETWORK_BUSY = 54 Field Value int ERROR_NET_WRITE_FAULT System error code public const int ERROR_NET_WRITE_FAULT = 88 Field Value int ERROR_NOTIFICATION_GUID_ALREADY_DEFINED System error code public const int ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 309 Field Value int ERROR_NOT_DOS_DISK System error code public const int ERROR_NOT_DOS_DISK = 26 Field Value int ERROR_NOT_ENOUGH_MEMORY System error code public const int ERROR_NOT_ENOUGH_MEMORY = 8 Field Value int ERROR_NOT_JOINED System error code public const int ERROR_NOT_JOINED = 136 Field Value int ERROR_NOT_LOCKED System error code public const int ERROR_NOT_LOCKED = 158 Field Value int ERROR_NOT_OWNER System error code public const int ERROR_NOT_OWNER = 288 Field Value int ERROR_NOT_READY System error code public const int ERROR_NOT_READY = 21 Field Value int ERROR_NOT_SAME_DEVICE System error code public const int ERROR_NOT_SAME_DEVICE = 17 Field Value int ERROR_NOT_SUBSTED System error code public const int ERROR_NOT_SUBSTED = 137 Field Value int ERROR_NOT_SUPPORTED System error code public const int ERROR_NOT_SUPPORTED = 50 Field Value int ERROR_NO_DATA System error code public const int ERROR_NO_DATA = 232 Field Value int ERROR_NO_MORE_FILES System error code public const int ERROR_NO_MORE_FILES = 18 Field Value int ERROR_NO_MORE_ITEMS System error code public const int ERROR_NO_MORE_ITEMS = 259 Field Value int ERROR_NO_MORE_SEARCH_HANDLES System error code public const int ERROR_NO_MORE_SEARCH_HANDLES = 113 Field Value int ERROR_NO_PROC_SLOTS System error code public const int ERROR_NO_PROC_SLOTS = 89 Field Value int ERROR_NO_SIGNAL_SENT System error code public const int ERROR_NO_SIGNAL_SENT = 205 Field Value int ERROR_NO_SPOOL_SPACE System error code public const int ERROR_NO_SPOOL_SPACE = 62 Field Value int ERROR_NO_VOLUME_LABEL System error code public const int ERROR_NO_VOLUME_LABEL = 125 Field Value int ERROR_OPEN_FAILED System error code public const int ERROR_OPEN_FAILED = 110 Field Value int ERROR_OPLOCK_NOT_GRANTED System error code public const int ERROR_OPLOCK_NOT_GRANTED = 300 Field Value int ERROR_OUTOFMEMORY System error code public const int ERROR_OUTOFMEMORY = 14 Field Value int ERROR_OUT_OF_PAPER System error code public const int ERROR_OUT_OF_PAPER = 28 Field Value int ERROR_OUT_OF_STRUCTURES System error code public const int ERROR_OUT_OF_STRUCTURES = 84 Field Value int ERROR_PARTIAL_COPY System error code public const int ERROR_PARTIAL_COPY = 299 Field Value int ERROR_PATH_BUSY System error code public const int ERROR_PATH_BUSY = 148 Field Value int ERROR_PATH_NOT_FOUND System error code public const int ERROR_PATH_NOT_FOUND = 3 Field Value int ERROR_PIPE_BUSY System error code public const int ERROR_PIPE_BUSY = 231 Field Value int ERROR_PIPE_LOCAL System error code public const int ERROR_PIPE_LOCAL = 229 Field Value int ERROR_PIPE_NOT_CONNECTED System error code public const int ERROR_PIPE_NOT_CONNECTED = 233 Field Value int ERROR_PRINTQ_FULL System error code public const int ERROR_PRINTQ_FULL = 61 Field Value int ERROR_PRINT_CANCELLED System error code public const int ERROR_PRINT_CANCELLED = 63 Field Value int ERROR_PROCESS_MODE_ALREADY_BACKGROUND System error code public const int ERROR_PROCESS_MODE_ALREADY_BACKGROUND = 402 Field Value int ERROR_PROCESS_MODE_NOT_BACKGROUND System error code public const int ERROR_PROCESS_MODE_NOT_BACKGROUND = 403 Field Value int ERROR_PROC_NOT_FOUND System error code public const int ERROR_PROC_NOT_FOUND = 127 Field Value int ERROR_READ_FAULT System error code public const int ERROR_READ_FAULT = 30 Field Value int ERROR_REDIR_PAUSED System error code public const int ERROR_REDIR_PAUSED = 72 Field Value int ERROR_RELOC_CHAIN_XEEDS_SEGLIM System error code public const int ERROR_RELOC_CHAIN_XEEDS_SEGLIM = 201 Field Value int ERROR_REM_NOT_LIST System error code public const int ERROR_REM_NOT_LIST = 51 Field Value int ERROR_REQ_NOT_ACCEP System error code public const int ERROR_REQ_NOT_ACCEP = 71 Field Value int ERROR_RING2SEG_MUST_BE_MOVABLE System error code public const int ERROR_RING2SEG_MUST_BE_MOVABLE = 200 Field Value int ERROR_RING2_STACK_IN_USE System error code public const int ERROR_RING2_STACK_IN_USE = 207 Field Value int ERROR_SAME_DRIVE System error code public const int ERROR_SAME_DRIVE = 143 Field Value int ERROR_SCOPE_NOT_FOUND System error code public const int ERROR_SCOPE_NOT_FOUND = 318 Field Value int ERROR_SECTOR_NOT_FOUND System error code public const int ERROR_SECTOR_NOT_FOUND = 27 Field Value int ERROR_SECURITY_STREAM_IS_INCONSISTENT System error code public const int ERROR_SECURITY_STREAM_IS_INCONSISTENT = 306 Field Value int ERROR_SEEK System error code public const int ERROR_SEEK = 25 Field Value int ERROR_SEEK_ON_DEVICE System error code public const int ERROR_SEEK_ON_DEVICE = 132 Field Value int ERROR_SEM_IS_SET System error code public const int ERROR_SEM_IS_SET = 102 Field Value int ERROR_SEM_NOT_FOUND System error code public const int ERROR_SEM_NOT_FOUND = 187 Field Value int ERROR_SEM_OWNER_DIED System error code public const int ERROR_SEM_OWNER_DIED = 105 Field Value int ERROR_SEM_TIMEOUT System error code public const int ERROR_SEM_TIMEOUT = 121 Field Value int ERROR_SEM_USER_LIMIT System error code public const int ERROR_SEM_USER_LIMIT = 106 Field Value int ERROR_SHARING_BUFFER_EXCEEDED System error code public const int ERROR_SHARING_BUFFER_EXCEEDED = 36 Field Value int ERROR_SHARING_PAUSED System error code public const int ERROR_SHARING_PAUSED = 70 Field Value int ERROR_SHARING_VIOLATION System error code public const int ERROR_SHARING_VIOLATION = 32 Field Value int ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME System error code public const int ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 305 Field Value int ERROR_SIGNAL_PENDING System error code public const int ERROR_SIGNAL_PENDING = 162 Field Value int ERROR_SIGNAL_REFUSED System error code public const int ERROR_SIGNAL_REFUSED = 156 Field Value int ERROR_SUBST_TO_JOIN System error code public const int ERROR_SUBST_TO_JOIN = 141 Field Value int ERROR_SUBST_TO_SUBST System error code public const int ERROR_SUBST_TO_SUBST = 139 Field Value int ERROR_SUCCESS System error code public const int ERROR_SUCCESS = 0 Field Value int ERROR_SYSTEM_TRACE System error code public const int ERROR_SYSTEM_TRACE = 150 Field Value int ERROR_THREAD_1_INACTIVE System error code public const int ERROR_THREAD_1_INACTIVE = 210 Field Value int ERROR_THREAD_MODE_ALREADY_BACKGROUND System error code public const int ERROR_THREAD_MODE_ALREADY_BACKGROUND = 400 Field Value int ERROR_THREAD_MODE_NOT_BACKGROUND System error code public const int ERROR_THREAD_MODE_NOT_BACKGROUND = 401 Field Value int ERROR_TOO_MANY_CMDS System error code public const int ERROR_TOO_MANY_CMDS = 56 Field Value int ERROR_TOO_MANY_MODULES System error code public const int ERROR_TOO_MANY_MODULES = 214 Field Value int ERROR_TOO_MANY_MUXWAITERS System error code public const int ERROR_TOO_MANY_MUXWAITERS = 152 Field Value int ERROR_TOO_MANY_NAMES System error code public const int ERROR_TOO_MANY_NAMES = 68 Field Value int ERROR_TOO_MANY_OPEN_FILES System error code public const int ERROR_TOO_MANY_OPEN_FILES = 4 Field Value int ERROR_TOO_MANY_POSTS System error code public const int ERROR_TOO_MANY_POSTS = 298 Field Value int ERROR_TOO_MANY_SEMAPHORES System error code public const int ERROR_TOO_MANY_SEMAPHORES = 100 Field Value int ERROR_TOO_MANY_SEM_REQUESTS System error code public const int ERROR_TOO_MANY_SEM_REQUESTS = 103 Field Value int ERROR_TOO_MANY_SESS System error code public const int ERROR_TOO_MANY_SESS = 69 Field Value int ERROR_TOO_MANY_TCBS System error code public const int ERROR_TOO_MANY_TCBS = 155 Field Value int ERROR_UNEXP_NET_ERR System error code public const int ERROR_UNEXP_NET_ERR = 59 Field Value int ERROR_VC_DISCONNECTED System error code public const int ERROR_VC_DISCONNECTED = 240 Field Value int ERROR_VIRUS_DELETED System error code public const int ERROR_VIRUS_DELETED = 226 Field Value int ERROR_VIRUS_INFECTED System error code public const int ERROR_VIRUS_INFECTED = 225 Field Value int ERROR_WAIT_NO_CHILDREN System error code public const int ERROR_WAIT_NO_CHILDREN = 128 Field Value int ERROR_WRITE_FAULT System error code public const int ERROR_WRITE_FAULT = 29 Field Value int ERROR_WRITE_PROTECT System error code public const int ERROR_WRITE_PROTECT = 19 Field Value int ERROR_WRONG_DISK System error code public const int ERROR_WRONG_DISK = 34 Field Value int WAIT_TIMEOUT System error code public const int WAIT_TIMEOUT = 258 Field Value int Methods GetErrorMessage(int) Gets the error message. public static string GetErrorMessage(int ERR) Parameters ERR int The error. Returns string"
  },
  "latest/Songhay.Models.SystemVariable-1.html": {
    "href": "latest/Songhay.Models.SystemVariable-1.html",
    "title": "Class SystemVariable<T> | SonghayCore API",
    "keywords": "Class SystemVariable<T> Namespace Songhay.Models Assembly SonghayCore.dll Defines the Data for displaying meta-data about variables. public class SystemVariable<T> Type Parameters T Inheritance object SystemVariable<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties VariableDescription Gets or sets the variable description. public string? VariableDescription { get; set; } Property Value string VariableName Gets or sets the name of the variable. public string? VariableName { get; set; } Property Value string VariableValue Gets or sets the variable value. public T? VariableValue { get; set; } Property Value T"
  },
  "latest/Songhay.Models.SystemVariable.html": {
    "href": "latest/Songhay.Models.SystemVariable.html",
    "title": "Class SystemVariable | SonghayCore API",
    "keywords": "Class SystemVariable Namespace Songhay.Models Assembly SonghayCore.dll Defines the Data for displaying meta-data about variables. public class SystemVariable Inheritance object SystemVariable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties VariableDescription Gets or sets the variable description. public string? VariableDescription { get; set; } Property Value string VariableName Gets or sets the name of the variable. public string? VariableName { get; set; } Property Value string VariableValue Gets or sets the variable value. public string? VariableValue { get; set; } Property Value string"
  },
  "latest/Songhay.Models.XEncoding.html": {
    "href": "latest/Songhay.Models.XEncoding.html",
    "title": "Class XEncoding | SonghayCore API",
    "keywords": "Class XEncoding Namespace Songhay.Models Assembly SonghayCore.dll Defines selected text file encodings. public static class XEncoding Inheritance object XEncoding Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Iso88591 Text encoding. public const string Iso88591 = \"ISO-8859-1\" Field Value string Utf08 Text encoding. public const string Utf08 = \"UTF-8\" Field Value string Utf16 Text encoding. public const string Utf16 = \"UTF-16\" Field Value string Windows1252 Text encoding. public const string Windows1252 = \"windows-1252\" Field Value string"
  },
  "latest/Songhay.Models.XObjectMetadata.html": {
    "href": "latest/Songhay.Models.XObjectMetadata.html",
    "title": "Class XObjectMetadata | SonghayCore API",
    "keywords": "Class XObjectMetadata Namespace Songhay.Models Assembly SonghayCore.dll The conventional XObject metadata. public static class XObjectMetadata Inheritance object XObjectMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields SiteMapNamespace The sitemaps.org namespace. public static readonly XNamespace SiteMapNamespace Field Value XNamespace Properties XhtmlDocTypeTransitional DOCTYPE XHTML Transitional declaration. public static XDocumentType XhtmlDocTypeTransitional { get; } Property Value XDocumentType"
  },
  "latest/Songhay.Models.XhtmlDocument.html": {
    "href": "latest/Songhay.Models.XhtmlDocument.html",
    "title": "Class XhtmlDocument | SonghayCore API",
    "keywords": "Class XhtmlDocument Namespace Songhay.Models Assembly SonghayCore.dll Defines the conventional XHTML Document. [Serializable] public class XhtmlDocument Inheritance object XhtmlDocument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Header Gets or sets the header. public string? Header { get; set; } Property Value string Location Gets or sets the location. public string? Location { get; set; } Property Value string Title Gets or sets the title. public string? Title { get; set; } Property Value string"
  },
  "latest/Songhay.Models.XhtmlDocuments.html": {
    "href": "latest/Songhay.Models.XhtmlDocuments.html",
    "title": "Class XhtmlDocuments | SonghayCore API",
    "keywords": "Class XhtmlDocuments Namespace Songhay.Models Assembly SonghayCore.dll Collects XhtmlDocument. [Serializable] public class XhtmlDocuments Inheritance object XhtmlDocuments Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Documents Gets or sets the documents. public XhtmlDocument[] Documents { get; set; } Property Value XhtmlDocument[] Title Gets or sets the title. public string? Title { get; set; } Property Value string"
  },
  "latest/Songhay.Models.XhtmlImage.html": {
    "href": "latest/Songhay.Models.XhtmlImage.html",
    "title": "Class XhtmlImage | SonghayCore API",
    "keywords": "Class XhtmlImage Namespace Songhay.Models Assembly SonghayCore.dll Defines an image used by XHTML(5) clients public class XhtmlImage Inheritance object XhtmlImage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Properties Height Gets or sets the height. public string? Height { get; set; } Property Value string HeightInPixels Gets or sets the height in pixels. public int? HeightInPixels { get; set; } Property Value int? Location Gets or sets the location. public Uri? Location { get; set; } Property Value Uri Width Gets or sets the width. public string? Width { get; set; } Property Value string WidthInPixels Gets or sets the width in pixels. public int? WidthInPixels { get; set; } Property Value int?"
  },
  "latest/Songhay.Models.html": {
    "href": "latest/Songhay.Models.html",
    "title": "Namespace Songhay.Models | SonghayCore API",
    "keywords": "Namespace Songhay.Models Classes ActivityOutput<TOutput> Defines the conventional output of IActivityTask<TInput, TOutput>. ColorDisplayItemModel Model for color display ConsoleArgsScalars Centralizes conventional console args passed to IConfiguration. CorsOrigins Defines selected CORS origins. DataParameterMetadata A JSON.net-friendly definition for types implementing IDataParameter. DbmsMetadata Defines DBMS metadata DeploymentEnvironment Defines the deployment environment. DisplayItemModel Model for display item. EncryptionMetadata Defines encryption metadata for persistent storage. HttpMethods Centralizes HttpMethod members as strings. LazyDisplayItem<T> Wraps a lazy-initialized object with meta-data for display. MenuDisplayItemModel Defines a colorable, selectable menu item MimeTypes Selected MIME types for this Studio OpenAuthorizationData Defines Authorization Information for OAuth 1.0. OpmlBody Defines a managed representation of the OPML body element. OpmlDocument Dave Winer, his Outline Processor Markup Language document format OpmlHead Defines a managed representation of the OPML head element. OpmlOutline Defines a managed representation of the OPML outline element. PackedResource Defines the meta-data of an Application resource. PackedResource<TResource> Defines the meta-data of an Application resource. PagedResult Defines a paged set of data. PagedResultMeta Defines the metadata for a paged set of data. ProgramAssemblyInfo Defines Assembly information. ProgramMetadata Defines the conventional Program metadata. RestApiMetadata REST API Metadata RestPagingMetadata REST Paging Metadata SystemErrorCodes Defines the error codes of Windows SystemVariable Defines the Data for displaying meta-data about variables. SystemVariable<T> Defines the Data for displaying meta-data about variables. XEncoding Defines selected text file encodings. XObjectMetadata The conventional XObject metadata. XhtmlDocument Defines the conventional XHTML Document. XhtmlDocuments Collects XhtmlDocument. XhtmlImage Defines an image used by XHTML(5) clients Structs ProgramGlyph Defines a Unicode glyphic character"
  },
  "latest/Songhay.Net.SmtpUtility.html": {
    "href": "latest/Songhay.Net.SmtpUtility.html",
    "title": "Class SmtpUtility | SonghayCore API",
    "keywords": "Class SmtpUtility Namespace Songhay.Net Assembly SonghayCore.dll SMTP Utility public static class SmtpUtility Inheritance object SmtpUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAttachment(IEnumerable<string>?) Gets the attachment. public static ICollection<Attachment> GetAttachment(IEnumerable<string>? paths) Parameters paths IEnumerable<string> The paths. Returns ICollection<Attachment> GetAttachment(string?) Gets the attachment. public static Attachment GetAttachment(string? path) Parameters path string The path. Returns Attachment GetMailMessage(string, string, string, ICollection<string>) Returns MailMessage for an instance of SmtpClient public static MailMessage GetMailMessage(string from, string subject, string message, ICollection<string> recipients) Parameters from string the from email address subject string the email message subject message string the email message recipients ICollection<string> a collection of recipients Returns MailMessage GetMailMessage(string?, string?, string?, ICollection<string>?, ICollection<Attachment>?) Returns MailMessage for an instance of SmtpClient public static MailMessage GetMailMessage(string? from, string? subject, string? message, ICollection<string>? recipients, ICollection<Attachment>? attachments) Parameters from string the from email address subject string the email message subject message string the email message recipients ICollection<string> a collection of recipients attachments ICollection<Attachment> a collection of Attachment Returns MailMessage GetMailMessage(string, string, string, string) Returns MailMessage for an instance of SmtpClient public static MailMessage GetMailMessage(string from, string to, string subject, string message) Parameters from string the from email address to string the to email address subject string the email message subject message string the email message Returns MailMessage GetMailMessage(string, string, string, string, ICollection<Attachment>) Returns MailMessage for an instance of SmtpClient public static MailMessage GetMailMessage(string from, string to, string subject, string message, ICollection<Attachment> attachments) Parameters from string the from email address to string the to email address subject string the email message subject message string the email message attachments ICollection<Attachment> a collection of Attachment Returns MailMessage"
  },
  "latest/Songhay.Net.TimeoutHandler.html": {
    "href": "latest/Songhay.Net.TimeoutHandler.html",
    "title": "Class TimeoutHandler | SonghayCore API",
    "keywords": "Class TimeoutHandler Namespace Songhay.Net Assembly SonghayCore.dll Defines timeout and cancellation support for HttpClient. public class TimeoutHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler TimeoutHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks \uD83D\uDCD6 see “Better timeout handling with HttpClient” by @thomaslevesque [ https://github.com/thomaslevesque ] [ https://thomaslevesque.com/2018/02/25/better-timeout-handling-with-httpclient/ ] Properties DefaultTimeout Gets or sets the default timeout. public static TimeSpan DefaultTimeout { get; } Property Value TimeSpan RequestTimeout Gets or sets the request timeout. public TimeSpan RequestTimeout { get; init; } Property Value TimeSpan Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request to the inner handler to send to the server as an asynchronous operation. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message to send to the server. cancellationToken CancellationToken A cancellation token to cancel operation. Returns Task<HttpResponseMessage> The task object representing the asynchronous operation. See Also DelegatingHandler"
  },
  "latest/Songhay.Net.html": {
    "href": "latest/Songhay.Net.html",
    "title": "Namespace Songhay.Net | SonghayCore API",
    "keywords": "Namespace Songhay.Net Classes SmtpUtility SMTP Utility TimeoutHandler Defines timeout and cancellation support for HttpClient."
  },
  "latest/Songhay.ProgramAssemblyUtility.html": {
    "href": "latest/Songhay.ProgramAssemblyUtility.html",
    "title": "Class ProgramAssemblyUtility | SonghayCore API",
    "keywords": "Class ProgramAssemblyUtility Namespace Songhay Assembly SonghayCore.dll Static members related to System.Reflection. public static class ProgramAssemblyUtility Inheritance object ProgramAssemblyUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetAssemblyInfo(Assembly) Returns a string about the executing assembly. public static string? GetAssemblyInfo(Assembly targetAssembly) Parameters targetAssembly Assembly The executing Assembly. Returns string Returns string GetAssemblyInfo(Assembly?, bool) Returns a string about the executing assembly. public static string? GetAssemblyInfo(Assembly? targetAssembly, bool useConsoleChars) Parameters targetAssembly Assembly The executing Assembly. useConsoleChars bool When true selected “special” characters are formatted for the Windows Console. Returns string Returns string GetPathFromAssembly(Assembly?) Gets the directory name from assembly. public static string? GetPathFromAssembly(Assembly? assembly) Parameters assembly Assembly The assembly. Returns string GetPathFromAssembly(Assembly?, string?) Gets the path from assembly. public static string GetPathFromAssembly(Assembly? assembly, string? fileSegment) Parameters assembly Assembly The assembly. fileSegment string The file segment. Returns string"
  },
  "latest/Songhay.ProgramFileUtility.html": {
    "href": "latest/Songhay.ProgramFileUtility.html",
    "title": "Class ProgramFileUtility | SonghayCore API",
    "keywords": "Class ProgramFileUtility Namespace Songhay Assembly SonghayCore.dll A few static helper members for System.IO. public static class ProgramFileUtility Inheritance object ProgramFileUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CountParentDirectoryChars(string?) Counts the parent directory chars. public static int CountParentDirectoryChars(string? path) Parameters path string The path. Returns int Remarks This method is useful when running GetParentDirectory(string?, int). WARNING: call NormalizePath(string?) to prevent incorrectly returning 0 in cross-platform scenarios. FindParentDirectory(string?, string?, int) Finds the parent directory. public static string? FindParentDirectory(string? path, string? parentName, int levels) Parameters path string The path. parentName string Name of the parent. levels int The levels. Returns string FindParentDirectoryInfo(string?, string?, int) Finds the parent DirectoryInfo. public static DirectoryInfo? FindParentDirectoryInfo(string? path, string? parentName, int levels) Parameters path string The path. parentName string Name of the parent. levels int The levels. Returns DirectoryInfo GetCombinedPath(string?, string?) Combines path and root based on the ambient value of DirectorySeparatorChar of the current OS. public static string GetCombinedPath(string? root, string? path) Parameters root string The root. path string The path. Returns string Remarks For detail, see: \uD83D\uDCDA https://github.com/BryanWilhite/SonghayCore/issues/14 \uD83D\uDCDA https://github.com/BryanWilhite/SonghayCore/issues/32 \uD83D\uDCDA https://github.com/BryanWilhite/SonghayCore/issues/97 GetCombinedPath(string?, string?, bool) Combines path and root based on the ambient value of DirectorySeparatorChar of the current OS. public static string GetCombinedPath(string? root, string? path, bool fileIsExpected) Parameters root string The root. path string The path. fileIsExpected bool when true will throw FileNotFoundException when combined path is not of a file; otherwise will throw DirectoryNotFoundException when combined path is not a directory Returns string Remarks For detail, see: \uD83D\uDCDA https://github.com/BryanWilhite/SonghayCore/issues/14 \uD83D\uDCDA https://github.com/BryanWilhite/SonghayCore/issues/32 \uD83D\uDCDA https://github.com/BryanWilhite/SonghayCore/issues/97 GetEncodedString(string?) Gets the UTF-8 encoded string from. public static string GetEncodedString(string? utf16Value) Parameters utf16Value string The raw value. Returns string GetEncodedString(string?, Encoding?) Gets the encoded string from its default Unicode encoding. public static string GetEncodedString(string? utf16Value, Encoding? outputEncoding) Parameters utf16Value string The raw value. outputEncoding Encoding The output encoding. Returns string Remarks Unicode encoding is the UTF-16 encoding of strings in .NET. See: https://docs.microsoft.com/en-us/dotnet/api/system.text.unicodeencoding GetParentDirectory(string?, int) Gets the parent directory. public static string? GetParentDirectory(string? path, int levels) Parameters path string The path. levels int The levels. Returns string Remarks A recursive wrapper for GetParent(string). GetParentDirectoryInfo(string?, int) Gets the parent DirectoryInfo. public static DirectoryInfo? GetParentDirectoryInfo(string? path, int levels) Parameters path string The path. levels int The levels. Returns DirectoryInfo Remarks A recursive wrapper for GetParent(string). GetRelativePath(string?) Gets the relative path from the specified file segment without leading dots (.) or DirectorySeparatorChar chars. public static string? GetRelativePath(string? fileSegment) Parameters fileSegment string The file segment. Returns string Remarks This method is the equivalent of calling: TrimLeadingDirectorySeparatorChars(string?) NormalizePath(string?) RemoveBackslashPrefixes(string?) RemoveForwardslashPrefixes(string?) IsForwardSlashSystem() Returns true when the current OS uses forward-slash (/) paths or not. public static bool IsForwardSlashSystem() Returns bool NormalizePath(string?) Normalizes the specified path with respect to the ambient value of DirectorySeparatorChar. public static string? NormalizePath(string? path) Parameters path string The path. Returns string ReadZipArchiveEntries(FileInfo?, Action<string>?) Read zip archive entries. public static void ReadZipArchiveEntries(FileInfo? archiveInfo, Action<string>? fileAction) Parameters archiveInfo FileInfo The ZIP archive FileInfo. fileAction Action<string> The action to take per text file. Remarks Use entriesProjector for any filtering or sorting. ReadZipArchiveEntries(FileInfo?, Action<string>?, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>?) Read zip archive entries. public static void ReadZipArchiveEntries(FileInfo? archiveInfo, Action<string>? fileAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>? entriesProjector) Parameters archiveInfo FileInfo The ZIP archive FileInfo. fileAction Action<string> The action to take per text file. entriesProjector Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> The entries projector for LINQ filtering/sorting. Remarks Use entriesProjector for any filtering or sorting. ReadZipArchiveEntriesByLine(FileInfo?, Action<int, string>?) Read zip archive entries as strings, line by line. public static void ReadZipArchiveEntriesByLine(FileInfo? archiveInfo, Action<int, string>? lineAction) Parameters archiveInfo FileInfo The ZIP archive FileInfo. lineAction Action<int, string> The action to take per text file line. Remarks This member is designed for compressed text documents that are too large to load into memory. The fileAction includes the line number and the current line. ReadZipArchiveEntriesByLine(FileInfo?, Action<int, string>?, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>?) Read zip archive entries as strings, line by line. public static void ReadZipArchiveEntriesByLine(FileInfo? archiveInfo, Action<int, string>? lineAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>? entriesProjector) Parameters archiveInfo FileInfo The ZIP archive FileInfo. lineAction Action<int, string> The action to take per text file line. entriesProjector Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> The entries projector for LINQ filtering/sorting. Remarks This member is designed for compressed text documents that are too large to load into memory. The fileAction includes the line number and the current line. RemoveBackslashPrefixes(string?) Removes conventional Directory prefixes for relative paths, e.g. ..</code> or .</code> public static string? RemoveBackslashPrefixes(string? path) Parameters path string The path. Returns string RemoveConventionalPrefixes(string?) Removes conventional Directory prefixes for relative paths based on the ambient value of DirectorySeparatorChar. public static string? RemoveConventionalPrefixes(string? path) Parameters path string The path. Returns string RemoveForwardslashPrefixes(string?) Removes conventional Directory prefixes for relative paths, e.g. ../ or ./. public static string? RemoveForwardslashPrefixes(string? path) Parameters path string The path. Returns string TrimLeadingDirectorySeparatorChars(string?) Trims the leading directory separator chars. public static string? TrimLeadingDirectorySeparatorChars(string? path) Parameters path string The path. Returns string Remarks Trims leading AltDirectorySeparatorChar and/or DirectorySeparatorChar, formatting relative paths for Combine(string, string). UseZipArchive(FileInfo?, Action<ZipArchive?>?) Centralizes the use of ZipArchive in Read. public static void UseZipArchive(FileInfo? archiveInfo, Action<ZipArchive?>? archiveAction) Parameters archiveInfo FileInfo The ZIP archive FileInfo. archiveAction Action<ZipArchive> The action to take for the ZIP archive in use. UseZipArchive(FileInfo?, Action<ZipArchive?>?, ZipArchiveMode) Centralizes the use of ZipArchive public static void UseZipArchive(FileInfo? archiveInfo, Action<ZipArchive?>? archiveAction, ZipArchiveMode zipArchiveMode) Parameters archiveInfo FileInfo The ZIP archive FileInfo. archiveAction Action<ZipArchive> The action to take for the ZIP archive in use. zipArchiveMode ZipArchiveMode The ZipArchiveMode. UseZipArchiveEntries(FileInfo?, Action<ReadOnlyCollection<ZipArchiveEntry>>?) Centralizes the use of ReadOnlyCollection<T>. public static void UseZipArchiveEntries(FileInfo? archiveInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>? entriesAction) Parameters archiveInfo FileInfo The ZIP archive FileInfo. entriesAction Action<ReadOnlyCollection<ZipArchiveEntry>> The action to take for ZIP archive entries. UseZipArchiveEntries(FileInfo?, Action<ReadOnlyCollection<ZipArchiveEntry>>?, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>?) Centralizes the use of ReadOnlyCollection<T>. public static void UseZipArchiveEntries(FileInfo? archiveInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>? entriesAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>? entriesProjector) Parameters archiveInfo FileInfo The ZIP archive FileInfo. entriesAction Action<ReadOnlyCollection<ZipArchiveEntry>> The action to take for ZIP archive entries. entriesProjector Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> The entries projector for LINQ filtering/sorting. WriteZipArchiveEntry(FileInfo?, FileInfo) Write zip archive entry with Optimal. public static void WriteZipArchiveEntry(FileInfo? archiveInfo, FileInfo fileInfo) Parameters archiveInfo FileInfo The ZIP archive FileInfo. fileInfo FileInfo The file information for writing the entry. WriteZipArchiveEntry(FileInfo?, FileInfo, CompressionLevel) Write zip archive entry. public static void WriteZipArchiveEntry(FileInfo? archiveInfo, FileInfo fileInfo, CompressionLevel compressionLevel) Parameters archiveInfo FileInfo The ZIP archive FileInfo. fileInfo FileInfo The file information for writing the entry. compressionLevel CompressionLevel The CompressionLevel."
  },
  "latest/Songhay.ProgramTypeUtility.html": {
    "href": "latest/Songhay.ProgramTypeUtility.html",
    "title": "Class ProgramTypeUtility | SonghayCore API",
    "keywords": "Class ProgramTypeUtility Namespace Songhay Assembly SonghayCore.dll Static members for type handling. public static class ProgramTypeUtility Inheritance object ProgramTypeUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Most of the Parse methods were originally meant for unboxing values from XML documents. Methods ConvertDateTimeFromUnixTime(double) Converts Unix time stamps to DateTime. public static DateTime ConvertDateTimeFromUnixTime(double time) Parameters time double A double. Returns DateTime A DateTime. ConvertDateTimeToRfc3339DateTime(DateTime) Converts the specified DateTime to RFC3339. public static string ConvertDateTimeToRfc3339DateTime(DateTime utcDateTime) Parameters utcDateTime DateTime The UTC date and time. Returns string ConvertDateTimeToRfc822DateTime(DateTime) /// Converts the specified DateTime to RFC822. public static string ConvertDateTimeToRfc822DateTime(DateTime dateTime) Parameters dateTime DateTime The date and time. Returns string Remarks “Shortcomings of OPML… The RFC 822 date format is considered obsolete, and amongst other things permits the representation of years as two digits. (RFC 822 has been superseded by RFC 2822.) In general, date and time formats should be represented according to RFC 3339.” http://www.answers.com/topic/opml ConvertDateTimeToUnixTime() Converts the current time to a Unix time stamp. public static double ConvertDateTimeToUnixTime() Returns double A double. ConvertDateTimeToUnixTime(DateTime) Converts a DateTime to a Unix time stamp. public static double ConvertDateTimeToUnixTime(DateTime dateValue) Parameters dateValue DateTime The DateTime. Returns double A double. ConvertDateTimeToUtc(DateTime) Converts a DateTime to UTC (ISO 8601). [Obsolete(\"Use `DateTimeExtensions.ToIso8601String` instead.\")] public static string ConvertDateTimeToUtc(DateTime dateValue) Parameters dateValue DateTime The DateTime. Returns string Remarks For detail, see https://stackoverflow.com/a/1728437/22944. ConvertInchesToPoints(float) Converts inches as a float to points. public static float ConvertInchesToPoints(float inches) Parameters inches float The inches. Returns float Remarks 1 point = 0.013837 inch ConvertPointsToInches(float) Converts points as a float to inches. public static float ConvertPointsToInches(float points) Parameters points float The points. Returns float Remarks 1 point = 0.013837 inch GenerateRandomPassword(int) Generates the random password. public static string GenerateRandomPassword(int passwordLength) Parameters passwordLength int Length of the password. Returns string Remarks See “Generate random password in C#” by Mads Kristensen [http://madskristensen.net/post/Generate-random-password-in-C] IsNullOrEmptyOrNotArray(object?) Returns true when the specified value is an empty array, not an array or null. public static bool IsNullOrEmptyOrNotArray(object? boxedArray) Parameters boxedArray object The specified value. Returns bool IsNullOrEmptyString(object?) Returns true when the specified value is null or Empty. public static bool IsNullOrEmptyString(object? boxedString) Parameters boxedString object The framework value. Returns bool ParseBoolean(object?) Tries to convert the specified value to the Nullable return type. public static bool? ParseBoolean(object? value) Parameters value object The specified object box. Returns bool? Always returns a Nullable as parse failure means HasValue is false. ParseBoolean(object?, bool) Tries to convert the specified value to the Nullable return type. public static bool? ParseBoolean(object? value, bool supportBitStrings) Parameters value object The specified object box. supportBitStrings bool When true, support \"1\" and \"0\" as Boolean strings. Returns bool? Always returns a Nullable as parse failure means HasValue is false. ParseBoolean(object?, bool, bool) Tries to convert the specified value to the Nullable return type. public static bool? ParseBoolean(object? value, bool supportBitStrings, bool defaultValue) Parameters value object The specified object box. supportBitStrings bool When true, support \"1\" and \"0\" as Boolean strings. defaultValue bool The default value to return when Nullable.HasValue == false. Returns bool? Always returns a Nullable as parse failure means HasValue is false. ParseByte(object?) Tries to convert the specified value to the Nullable return type. public static byte? ParseByte(object? value) Parameters value object The specified object box. Returns byte? Always returns a Nullable as parse failure means HasValue is false. ParseByte(object?, byte) Tries to convert the specified value to the Nullable return type. public static byte? ParseByte(object? value, byte defaultValue) Parameters value object The specified object box. defaultValue byte The default value to return when Nullable.HasValue == false. Returns byte? Always returns a Nullable as parse failure means HasValue is false. ParseDateTime(object?) Tries to convert the specified value to the Nullable return type. public static DateTime? ParseDateTime(object? value) Parameters value object The specified object box. Returns DateTime? Always returns a Nullable as parse failure means HasValue is false. ParseDateTime(object?, DateTime) Tries to convert the specified value to the Nullable return type. public static DateTime? ParseDateTime(object? value, DateTime defaultValue) Parameters value object The specified object box. defaultValue DateTime The default value to return when Nullable.HasValue == false. Returns DateTime? Always returns a Nullable as parse failure means HasValue is false. ParseDateTimeWithFormat(object?, string) Tries to convert the specified value to the Nullable return type. public static string? ParseDateTimeWithFormat(object? value, string formatExpression) Parameters value object The specified object box. formatExpression string The string format expression. Returns string Always returns a Nullable as parse failure means HasValue is false. ParseDateTimeWithFormat(object?, string, string) Tries to convert the specified value to the Nullable return type. public static string ParseDateTimeWithFormat(object? value, string formatExpression, string defaultValue) Parameters value object The specified object box. formatExpression string The string format expression. defaultValue string The default value to return when Nullable.HasValue == false. Returns string Always returns a Nullable as parse failure means HasValue is false. ParseDecimal(object?) Tries to convert the specified value to the Nullable return type. public static decimal? ParseDecimal(object? value) Parameters value object The specified object box. Returns decimal? Always returns a Nullable as parse failure means HasValue is false. ParseDecimal(object?, decimal) Tries to convert the specified value to the Nullable return type. public static decimal? ParseDecimal(object? value, decimal defaultValue) Parameters value object The specified object box. defaultValue decimal The default value to return when Nullable.HasValue == false. Returns decimal? Always returns a Nullable as parse failure means HasValue is false. ParseDouble(object?) Tries to convert the specified value to the Nullable return type. public static double? ParseDouble(object? value) Parameters value object The specified object box. Returns double? Always returns a Nullable as parse failure means HasValue is false. ParseDouble(object?, double) Tries to convert the specified value to the Nullable return type. public static double? ParseDouble(object? value, double defaultValue) Parameters value object The specified object box. defaultValue double The default value to return when Nullable.HasValue == false. Returns double? Always returns a Nullable as parse failure means HasValue is false. ParseEnum<TEnum>(string, TEnum) Tries to convert the specified value to the Enum return type. public static TEnum ParseEnum<TEnum>(string value, TEnum defaultValue) where TEnum : struct Parameters value string The value. defaultValue TEnum The default value. Returns TEnum Type Parameters TEnum The type of the enum. Remarks For background, see http://stackoverflow.com/a/15017429/22944 ParseInt16(object?) Tries to convert the specified value to the Nullable return type. public static short? ParseInt16(object? value) Parameters value object The specified object box. Returns short? Always returns a Nullable as parse failure means HasValue is false. ParseInt16(object?, short) Tries to convert the specified value to the Nullable return type. public static short? ParseInt16(object? value, short defaultValue) Parameters value object The specified object box. defaultValue short The default value to return when Nullable.HasValue == false. Returns short? Always returns a Nullable as parse failure means HasValue is false. ParseInt32(object?) Tries to convert the specified value to the Nullable return type. public static int? ParseInt32(object? value) Parameters value object The specified object box. Returns int? Always returns a Nullable as parse failure means HasValue is false. ParseInt32(object?, int) Tries to convert the specified value to the Nullable return type. public static int? ParseInt32(object? value, int defaultValue) Parameters value object The specified object box. defaultValue int The default value to return when Nullable.HasValue == false. Returns int? Always returns a Nullable as parse failure means HasValue is false. ParseInt64(object?) Tries to convert the specified value to the Nullable return type. public static long? ParseInt64(object? value) Parameters value object The specified object box. Returns long? Always returns a Nullable as parse failure means HasValue is false. ParseInt64(object?, long) Tries to convert the specified value to the Nullable return type. public static long? ParseInt64(object? value, long defaultValue) Parameters value object The specified object box. defaultValue long The default value to return when Nullable.HasValue == false. Returns long? Always returns a Nullable as parse failure means HasValue is false. ParseRfc3339DateTime(string?) Parses the RFC3339 date and time. public static DateTime ParseRfc3339DateTime(string? value) Parameters value string The value. Returns DateTime Remarks This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic). ParseRfc822DateTime(string) Parses the RFC822 date and time. public static DateTime ParseRfc822DateTime(string value) Parameters value string The value. Returns DateTime Remarks This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic). ParseString(object?) Tries to convert the specified value to a string. public static string? ParseString(object? value) Parameters value object The specified object box. Returns string ParseString(object?, string?) Tries to convert the specified value to a string. public static string? ParseString(object? value, string? defaultValue) Parameters value object The value. defaultValue string The default value. Returns string SqlDatabaseNull() Returns the conventional database null (DBNull) for Microsoft SQL Server systems. public static DBNull SqlDatabaseNull() Returns DBNull DBNull TryParseRfc3339DateTime(string, out DateTime) Tries the parse RFC3339 date and time. public static bool TryParseRfc3339DateTime(string value, out DateTime result) Parameters value string The value. result DateTime The result. Returns bool Remarks This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic). TryParseRfc822DateTime(string, out DateTime) Tries the parse RFC822 date and time. public static bool TryParseRfc822DateTime(string value, out DateTime result) Parameters value string The value. result DateTime The result. Returns bool Remarks This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic)."
  },
  "latest/Songhay.ProgramUtility.html": {
    "href": "latest/Songhay.ProgramUtility.html",
    "title": "Class ProgramUtility | SonghayCore API",
    "keywords": "Class ProgramUtility Namespace Songhay Assembly SonghayCore.dll Defines shared routines for Studio programs. public static class ProgramUtility Inheritance object ProgramUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetConsoleCharacters(string?) Gets the console characters. public static string? GetConsoleCharacters(string? input) Parameters input string The input. Returns string Returns formatted input. GetConsoleIndentation(int, int) Gets the indentation spaces for test display. public static string GetConsoleIndentation(int numberOfSpaces, int indentationLevel) Parameters numberOfSpaces int indentationLevel int Returns string GetCurrentMethodName() Gets the name of the current method. public static string? GetCurrentMethodName() Returns string GetMethodName(int) Gets the name of the current method. public static string? GetMethodName(int stackFrameIndex) Parameters stackFrameIndex int Index of the stack frame. Returns string HandleDebug() Pauses the shell Program in DEBUG mode. public static void HandleDebug() InitializeTraceSource(TraceListener?) Initializes the trace source. public static TraceSource? InitializeTraceSource(TraceListener? listener) Parameters listener TraceListener The listener. Returns TraceSource LoadConfiguration(string?) Loads the configuration. public static IConfigurationRoot LoadConfiguration(string? basePath) Parameters basePath string The base path. Returns IConfigurationRoot LoadConfiguration(string?, Func<IConfigurationBuilder, IConfigurationBuilder>?, params string[]) Loads the built configuration. public static IConfigurationRoot LoadConfiguration(string? basePath, Func<IConfigurationBuilder, IConfigurationBuilder>? builderModifier, params string[] requiredJsonConfigurationFiles) Parameters basePath string The base path. builderModifier Func<IConfigurationBuilder, IConfigurationBuilder> Allows modification of ConfigurationBuilder before build. requiredJsonConfigurationFiles string[] specify any additional JSON configuration files before build Returns IConfigurationRoot Returns the built configuration. LoadConfiguration(string?, params string[]) Loads the built configuration. public static IConfigurationRoot LoadConfiguration(string? basePath, params string[] requiredJsonConfigurationFiles) Parameters basePath string The base path. requiredJsonConfigurationFiles string[] specify any additional JSON configuration files before build Returns IConfigurationRoot Returns the built configuration. StartProcess(string?) Starts the process. public static void StartProcess(string? command) Parameters command string The command. StartProcess(string, string, bool) Starts the process. public static void StartProcess(string argumentOfExe, string pathToExe, bool useExe) Parameters argumentOfExe string The argument of executable. pathToExe string The path to executable. useExe bool if set to true use path to executable."
  },
  "latest/Songhay.TaskUtility.html": {
    "href": "latest/Songhay.TaskUtility.html",
    "title": "Class TaskUtility | SonghayCore API",
    "keywords": "Class TaskUtility Namespace Songhay Assembly SonghayCore.dll Members for Task. public static class TaskUtility Inheritance object TaskUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Delay(TimeSpan, Action<Task>?) Delays with a Timer task for the specified TimeSpan. public static Task Delay(TimeSpan timeSpan, Action<Task>? actionAfterDelay) Parameters timeSpan TimeSpan The specified TimeSpan. actionAfterDelay Action<Task> The continuation action. Returns Task Delay(TimeSpan, Action<Task>?, TaskScheduler?) Delays with a Timer task for the specified TimeSpan. public static Task Delay(TimeSpan timeSpan, Action<Task>? actionAfterDelay, TaskScheduler? schedulerAfterDelay) Parameters timeSpan TimeSpan The specified TimeSpan. actionAfterDelay Action<Task> The continuation action. schedulerAfterDelay TaskScheduler The work-queue scheduler. Returns Task"
  },
  "latest/Songhay.Tests.Extensions.AssemblyExtensions.html": {
    "href": "latest/Songhay.Tests.Extensions.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | SonghayCore API",
    "keywords": "Class AssemblyExtensions Namespace Songhay.Tests.Extensions Assembly SonghayCore.xUnit.dll Extensions of Assembly public static class AssemblyExtensions Inheritance object AssemblyExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindNetCoreProjectDirectorySiblingInfo(Assembly, string) Returns the sibling DirectoryInfo of the directory referenced by GetNetCoreProjectDirectoryInfo(Assembly). public static DirectoryInfo? FindNetCoreProjectDirectorySiblingInfo(this Assembly assembly, string expectedDirectoryName) Parameters assembly Assembly the Assembly expectedDirectoryName string the name or pattern of the sibling directory (e.g. *.Web) Returns DirectoryInfo GetDirectoryInfoOfConventionalWebProjectWithAssertion(Assembly) Returns the sibling DirectoryInfo of the conventional Web project directory by asserting that FindNetCoreProjectDirectorySiblingInfo(Assembly, string)(*.Web) is valid with NotNull(object). public static DirectoryInfo GetDirectoryInfoOfConventionalWebProjectWithAssertion(this Assembly assembly) Parameters assembly Assembly the Assembly Returns DirectoryInfo GetDirectoryInfoWithAssertion(Assembly, string?) Returns DirectoryInfo based on the specified file segment and GetPathFromAssembly(Assembly?, string?) by asserting that Exists is true with True(bool). public static DirectoryInfo GetDirectoryInfoWithAssertion(this Assembly assembly, string? fileSegment) Parameters assembly Assembly the Assembly fileSegment string the file segment, relative to the Assembly Returns DirectoryInfo GetNetCoreProjectDirectoryInfo(Assembly) Returns the path of the conventional, .NET-Solution, project directory with the .NET-Core file segment (NetCoreRelativePathToProjectFolder). public static DirectoryInfo GetNetCoreProjectDirectoryInfo(this Assembly assembly) Parameters assembly Assembly the Assembly Returns DirectoryInfo"
  },
  "latest/Songhay.Tests.Extensions.DataAttributeExtensions.html": {
    "href": "latest/Songhay.Tests.Extensions.DataAttributeExtensions.html",
    "title": "Class DataAttributeExtensions | SonghayCore API",
    "keywords": "Class DataAttributeExtensions Namespace Songhay.Tests.Extensions Assembly SonghayCore.xUnit.dll Extensions for Xunit.Sdk.DataAttribute. public static class DataAttributeExtensions Inheritance object DataAttributeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindDirectory(DataAttribute?, string?) Test attribute extensions: should find the specified directory. public static void FindDirectory(this DataAttribute? attribute, string? path) Parameters attribute DataAttribute The attribute. path string The path. GetAssemblyDirectoryInfo(DataAttribute?, Type?) Test attribute extensions: should get DirectoryInfo. public static DirectoryInfo GetAssemblyDirectoryInfo(this DataAttribute? attribute, Type? typeInAssembly) Parameters attribute DataAttribute The attribute. typeInAssembly Type The type in assembly. Returns DirectoryInfo GetAssemblyParentDirectory(DataAttribute?, Type?, int) Gets the assembly parent directory path. public static string? GetAssemblyParentDirectory(this DataAttribute? attribute, Type? typeInAssembly, int levels) Parameters attribute DataAttribute The attribute. typeInAssembly Type The type in assembly. levels int The levels of directories above the assembly. Returns string GetAssemblyParentDirectoryInfo(DataAttribute?, Type?, int) Gets the assembly parent DirectoryInfo. public static DirectoryInfo GetAssemblyParentDirectoryInfo(this DataAttribute? attribute, Type? typeInAssembly, int expectedLevels) Parameters attribute DataAttribute The attribute. typeInAssembly Type The type in assembly. expectedLevels int The expected levels of directories above the assembly. Returns DirectoryInfo"
  },
  "latest/Songhay.Tests.Extensions.IServiceProviderExtensions.html": {
    "href": "latest/Songhay.Tests.Extensions.IServiceProviderExtensions.html",
    "title": "Class IServiceProviderExtensions | SonghayCore API",
    "keywords": "Class IServiceProviderExtensions Namespace Songhay.Tests.Extensions Assembly SonghayCore.xUnit.dll Extensions of IServiceProvider public static class IServiceProviderExtensions Inheritance object IServiceProviderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetRequiredServiceWithAssertion<TService>(IServiceProvider?) Gets the required IServiceProvider service with the assertion that it is not null. public static TService GetRequiredServiceWithAssertion<TService>(this IServiceProvider? serviceProvider) where TService : notnull Parameters serviceProvider IServiceProvider The service provider. Returns TService Type Parameters TService The type of the service. Remarks This member is convenient for returning global-state (non-scoped) services like those registered with IServiceCollection.AddSingleton (e.g. Microsoft’s IConfiguration contract). This member also saves one line of code for the following scoped ServiceProvider pattern: using IServiceScope scope = _factory.Services.CreateScope(); IMyRepo myRepo = scope.ServiceProvider.GetRequiredService{IMyRepo}(); Assert.NotNull(myRepo); where _factory is an instance of an xUnit fixture like IClassFixture{WebApplicationFactory{Program}}."
  },
  "latest/Songhay.Tests.Extensions.html": {
    "href": "latest/Songhay.Tests.Extensions.html",
    "title": "Namespace Songhay.Tests.Extensions | SonghayCore API",
    "keywords": "Namespace Songhay.Tests.Extensions Classes AssemblyExtensions Extensions of Assembly DataAttributeExtensions Extensions for Xunit.Sdk.DataAttribute. IServiceProviderExtensions Extensions of IServiceProvider"
  },
  "latest/Songhay.Tests.Models.TestScalars.html": {
    "href": "latest/Songhay.Tests.Models.TestScalars.html",
    "title": "Class TestScalars | SonghayCore API",
    "keywords": "Class TestScalars Namespace Songhay.Tests.Models Assembly SonghayCore.xUnit.dll Shared values for this assembly. public static class TestScalars Inheritance object TestScalars Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields NetCoreRelativePathToProjectFolder The Microsoft conventional relative path, indicating the number of directories above compiled assembly output in a modern .NET project. public const string NetCoreRelativePathToProjectFolder = \"../../../\" Field Value string Remarks In .NET core and in modern .NET the path to compiled assembly output is: {Project Directory}/bin/Debug/{.NET Version} The /bin/Debug/{.NET Version} directory is three levels below {Project Directory}. ReasonForSkippingWhenNotDebugging The conventional reason for skipping a test when not debugging the test public const string ReasonForSkippingWhenNotDebugging = \"This test is intended to run when a Debugger is attached.\" Field Value string XunitCategory The xunit category trait public const string XunitCategory = \"Category\" Field Value string XunitCategoryIntegrationManualTest The xunit category integration manual test public const string XunitCategoryIntegrationManualTest = \"IntegrationManual\" Field Value string XunitCategoryIntegrationTest The xunit category integration test public const string XunitCategoryIntegrationTest = \"Integration\" Field Value string Properties IsNotDebugging Returns true when IsAttached is false. public static bool IsNotDebugging { get; } Property Value bool"
  },
  "latest/Songhay.Tests.Models.html": {
    "href": "latest/Songhay.Tests.Models.html",
    "title": "Namespace Songhay.Tests.Models | SonghayCore API",
    "keywords": "Namespace Songhay.Tests.Models Classes TestScalars Shared values for this assembly."
  },
  "latest/Songhay.Tests.Orderers.OrderedTestBase.html": {
    "href": "latest/Songhay.Tests.Orderers.OrderedTestBase.html",
    "title": "Class OrderedTestBase | SonghayCore API",
    "keywords": "Class OrderedTestBase Namespace Songhay.Tests.Orderers Assembly SonghayCore.xUnit.dll Provides ordered test assertions. [TestCaseOrderer(\"Songhay.Tests.Orderers.TestCaseOrderer\", \"SonghayCore.xUnit\")] public abstract class OrderedTestBase Inheritance object OrderedTestBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For more detail, see “How to Order xUnit Tests and Collections” by Tom DuPont [http://www.tomdupont.net/2016/04/how-to-order-xunit-tests-and-collections.html] Constructors OrderedTestBase() Initializes a new instance of the OrderedTestBase class. protected OrderedTestBase() Properties XUnitExceptionHasOccurred Returns true when an XUnit assertion exception has occurred. protected static bool XUnitExceptionHasOccurred { get; } Property Value bool Methods AssertNoXUnitException() Asserts there are no exceptions of type xUnit.Sdk.* to prevent ordered tests from running. protected static void AssertNoXUnitException() Remarks See https://github.com/xunit/xunit/issues/856"
  },
  "latest/Songhay.Tests.Orderers.TestCaseOrderer.html": {
    "href": "latest/Songhay.Tests.Orderers.TestCaseOrderer.html",
    "title": "Class TestCaseOrderer | SonghayCore API",
    "keywords": "Class TestCaseOrderer Namespace Songhay.Tests.Orderers Assembly SonghayCore.xUnit.dll Implementation of Xunit.Sdk.ITestCaseOrderer for the use of TestOrderAttribute. public class TestCaseOrderer : ITestCaseOrderer Inheritance object TestCaseOrderer Implements ITestCaseOrderer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks For more detail, see “How to Order xUnit Tests and Collections” by Tom DuPont. [ see http://www.tomdupont.net/2016/04/how-to-order-xunit-tests-and-collections.html ] Fields AssemblyName The type name public const string AssemblyName = \"SonghayCore.xUnit\" Field Value string QueuedTests The queued tests public static readonly ConcurrentDictionary<string, ConcurrentQueue<string>> QueuedTests Field Value ConcurrentDictionary<string, ConcurrentQueue<string>> TypeName The type name public const string TypeName = \"Songhay.Tests.Orderers.TestCaseOrderer\" Field Value string Methods OrderTestCases<TTestCase>(IEnumerable<TTestCase>) Orders test cases for execution. public IEnumerable<TTestCase> OrderTestCases<TTestCase>(IEnumerable<TTestCase> testCases) where TTestCase : ITestCase Parameters testCases IEnumerable<TTestCase> The test cases to be ordered. Returns IEnumerable<TTestCase> The test cases in the order to be run. Type Parameters TTestCase See Also ITestCaseOrderer"
  },
  "latest/Songhay.Tests.Orderers.TestOrderAttribute.html": {
    "href": "latest/Songhay.Tests.Orderers.TestOrderAttribute.html",
    "title": "Class TestOrderAttribute | SonghayCore API",
    "keywords": "Class TestOrderAttribute Namespace Songhay.Tests.Orderers Assembly SonghayCore.xUnit.dll Defines the attribute used to order tests by the specified ordinal. public class TestOrderAttribute : Attribute Inheritance object Attribute TestOrderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Constructors TestOrderAttribute(int) Initializes a new instance of the TestOrderAttribute class. public TestOrderAttribute(int ordinal) Parameters ordinal int The ordinal. TestOrderAttribute(int, string?) Initializes a new instance of the TestOrderAttribute class. public TestOrderAttribute(int ordinal, string? reason) Parameters ordinal int The ordinal. reason string The reason. Properties Ordinal Gets the ordinal. public int Ordinal { get; } Property Value int The ordinal. Reason Gets the reason for choosing the order. public string? Reason { get; } Property Value string The reason. See Also Attribute"
  },
  "latest/Songhay.Tests.Orderers.html": {
    "href": "latest/Songhay.Tests.Orderers.html",
    "title": "Namespace Songhay.Tests.Orderers | SonghayCore API",
    "keywords": "Namespace Songhay.Tests.Orderers Classes OrderedTestBase Provides ordered test assertions. TestCaseOrderer Implementation of Xunit.Sdk.ITestCaseOrderer for the use of TestOrderAttribute. TestOrderAttribute Defines the attribute used to order tests by the specified ordinal."
  },
  "latest/Songhay.Tests.ProjectFileDataAttribute.html": {
    "href": "latest/Songhay.Tests.ProjectFileDataAttribute.html",
    "title": "Class ProjectFileDataAttribute | SonghayCore API",
    "keywords": "Class ProjectFileDataAttribute Namespace Songhay.Tests Assembly SonghayCore.xUnit.dll File-based data source for a data theory. public class ProjectFileDataAttribute : DataAttribute Inheritance object Attribute DataAttribute ProjectFileDataAttribute Inherited Members DataAttribute.Skip Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) DataAttributeExtensions.FindDirectory(DataAttribute?, string?) DataAttributeExtensions.GetAssemblyDirectoryInfo(DataAttribute?, Type?) DataAttributeExtensions.GetAssemblyParentDirectory(DataAttribute?, Type?, int) DataAttributeExtensions.GetAssemblyParentDirectoryInfo(DataAttribute?, Type?, int) Constructors ProjectFileDataAttribute(Type, object[], params string[]) Initializes a new instance of the ProjectFileDataAttribute class. public ProjectFileDataAttribute(Type typeInAssembly, object[] inlineData, params string[] relativePaths) Parameters typeInAssembly Type The type in assembly. inlineData object[] The inline data. relativePaths string[] The relative paths. Remarks The order of elements in inlineData must have the order of args. So new object[] { 1, \"two\" } must have int one, string two,. ProjectFileDataAttribute(Type, params string[]) Initializes a new instance of the ProjectFileDataAttribute class. public ProjectFileDataAttribute(Type typeInAssembly, params string[] relativePaths) Parameters typeInAssembly Type The type in assembly. relativePaths string[] The relative paths. Methods GetData(MethodInfo) Returns the data to be used to test the theory. public override IEnumerable<object[]> GetData(MethodInfo testMethod) Parameters testMethod MethodInfo The method that is being tested Returns IEnumerable<object[]> One or more sets of theory data. Each invocation of the test method is represented by a single object array."
  },
  "latest/Songhay.Tests.html": {
    "href": "latest/Songhay.Tests.html",
    "title": "Namespace Songhay.Tests | SonghayCore API",
    "keywords": "Namespace Songhay.Tests Classes ProjectFileDataAttribute File-based data source for a data theory."
  },
  "latest/Songhay.Text.CsvExporter-1.html": {
    "href": "latest/Songhay.Text.CsvExporter-1.html",
    "title": "Class CsvExporter<T> | SonghayCore API",
    "keywords": "Class CsvExporter<T> Namespace Songhay.Text Assembly SonghayCore.dll Transforms and exports the specified class to CSV format. public class CsvExporter<T> where T : class Type Parameters T the class to export Inheritance object CsvExporter<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NullableExtensions.IsAssignableToISerializable<T>(T?) NullableExtensions.ToObjectOrDbNull<T>(T?) NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?) Remarks Based on http://stackoverflow.com/questions/2422212/simple-c-sharp-csv-excel-export-class Constructors CsvExporter(IEnumerable<T>?) Initializes a new instance of the CsvExporter<T> class. public CsvExporter(IEnumerable<T>? rows) Parameters rows IEnumerable<T> The rows. CsvExporter(IEnumerable<T>?, IEnumerable<string>?) Initializes a new instance of the CsvExporter<T> class. public CsvExporter(IEnumerable<T>? rows, IEnumerable<string>? columns) Parameters rows IEnumerable<T> The rows. columns IEnumerable<string> The columns. Properties Columns Gets the columns. public IEnumerable<string> Columns { get; } Property Value IEnumerable<string> Rows Gets the rows. public IEnumerable<T> Rows { get; } Property Value IEnumerable<T> Methods Export() Exports this instance. public string Export() Returns string Export(bool) Exports the specified include header line. public string Export(bool includeHeaderLine) Parameters includeHeaderLine bool if set to true [include header line]. Returns string ExportToBytes() Exports to bytes. public byte[] ExportToBytes() Returns byte[] ExportToFile(string?) Exports to file. public void ExportToFile(string? path) Parameters path string The path."
  },
  "latest/Songhay.Text.html": {
    "href": "latest/Songhay.Text.html",
    "title": "Namespace Songhay.Text | SonghayCore API",
    "keywords": "Namespace Songhay.Text Classes CsvExporter<T> Transforms and exports the specified class to CSV format."
  },
  "latest/Songhay.Xml.HtmlUtility.html": {
    "href": "latest/Songhay.Xml.HtmlUtility.html",
    "title": "Class HtmlUtility | SonghayCore API",
    "keywords": "Class HtmlUtility Namespace Songhay.Xml Assembly SonghayCore.dll Static members for HTML text processing. public static class HtmlUtility Inheritance object HtmlUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertToHtml(string?) Returns a string of marked up text compatible with browsers that do not support XHTML (loosely towards HTML 4.x W3C standard). public static string? ConvertToHtml(string? input) Parameters input string A string of markup. Returns string ConvertToXml(string?) Attempts to convert HTML to well-formed XML. public static string? ConvertToXml(string? html) Parameters html string An HTML string. Returns string Remarks This task is simpler than converting to XHTML. FormatXhtmlElements(string?) Returns an XHTML string derived from a .NET procedure. public static string? FormatXhtmlElements(string? xmlFragment) Parameters xmlFragment string A well-formed string of XML. Returns string Remarks This member addresses certain quirks that well-formed XML cannot have in a contemporary Web browser. GetInnerXml(string?, string?) Returns the …inner… fragment of XML from the specified unique element. public static string? GetInnerXml(string? xmlFragment, string? elementName) Parameters xmlFragment string A well-formed string of XML. elementName string The local name of the element in the XML string. Returns string PublicDocType(string?, string?, string?) Emits a public DOCTYPE tag. public static string PublicDocType(string? rootElement = \"html\", string? publicIdentifier = \"-//W3C//DTD XHTML 1.0 Transitional//EN\", string? resourceReference = \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\") Parameters rootElement string The root element of the DTD. publicIdentifier string The public identifier of the DTD. resourceReference string The link to reference material of the DTD. Returns string A public DOCTYPE tag."
  },
  "latest/Songhay.Xml.LatinGlyphsUtility.html": {
    "href": "latest/Songhay.Xml.LatinGlyphsUtility.html",
    "title": "Class LatinGlyphsUtility | SonghayCore API",
    "keywords": "Class LatinGlyphsUtility Namespace Songhay.Xml Assembly SonghayCore.dll Condenses and expands Latin glyphs. public static class LatinGlyphsUtility Inheritance object LatinGlyphsUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Condense(string?, bool) Condenses selected decimal entities into their Latin glyph equivalent. public static string? Condense(string? input, bool basicLatinOnly) Parameters input string The input string containing the decimal entities. basicLatinOnly bool When true, process input for ProgramGlyph array where UnicodeInteger < 128. Returns string Returns a string with Latin glyphs. Expand(string?, bool) Expands selected Latin glyphs into their decimal entity equivalent. public static string? Expand(string? input, bool basicLatinOnly) Parameters input string The input string containing the glyphs. basicLatinOnly bool When true, process input for array of ProgramGlyph where UnicodeInteger < 128. Returns string Returns a string with decimal entities. GetGlyphs(bool) Gets the array of ProgramGlyph. public static ProgramGlyph[] GetGlyphs(bool basicLatinOnly) Parameters basicLatinOnly bool Returns ProgramGlyph[] RemoveUrlEncodings(string, bool) Replaces any Utf8UrlEncoding found in the input with Empty. public static string RemoveUrlEncodings(string input, bool basicLatinOnly) Parameters input string The input. basicLatinOnly bool When true, process input for array of ProgramGlyph where UnicodeInteger < 128. Returns string RemoveUrlEncodings(string, bool, bool) Replaces any Utf8UrlEncoding found in the input with Empty. public static string RemoveUrlEncodings(string input, bool includeWindows1252UrlEncoding, bool basicLatinOnly) Parameters input string The input. includeWindows1252UrlEncoding bool When true, search for Windows1252UrlEncoding strings in the input. basicLatinOnly bool When true, process input for array of ProgramGlyph where UnicodeInteger < 128. Returns string"
  },
  "latest/Songhay.Xml.OpmlUtility.html": {
    "href": "latest/Songhay.Xml.OpmlUtility.html",
    "title": "Class OpmlUtility | SonghayCore API",
    "keywords": "Class OpmlUtility Namespace Songhay.Xml Assembly SonghayCore.dll Static helpers for OPML. public static class OpmlUtility Inheritance object OpmlUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties rx Conventional namespace for OPML documents. public static XNamespace rx { get; } Property Value XNamespace Methods GetBody(XContainer?, XNamespace?) Gets the OpmlBody. public static OpmlBody? GetBody(XContainer? root, XNamespace? ns) Parameters root XContainer The root. ns XNamespace The namespace. Returns OpmlBody GetDocument(string?) Gets the OpmlDocument. public static OpmlDocument? GetDocument(string? path) Parameters path string The path. Returns OpmlDocument GetDocument(string?, XNamespace?) Gets the OpmlDocument. public static OpmlDocument? GetDocument(string? xml, XNamespace? ns) Parameters xml string The XML. ns XNamespace The ns. Returns OpmlDocument GetDocument(XContainer?, XNamespace?) Gets the OpmlDocument. public static OpmlDocument? GetDocument(XContainer? root, XNamespace? ns) Parameters root XContainer The root. ns XNamespace The conventional namespace. Returns OpmlDocument GetHead(XContainer?, XNamespace?) Gets the OpmlHead. public static OpmlHead? GetHead(XContainer? root, XNamespace? ns) Parameters root XContainer The root. ns XNamespace The namespace. Returns OpmlHead GetOutline(XElement?, XNamespace?) Gets the OpmlOutline. public static OpmlOutline? GetOutline(XElement? root, XNamespace? ns) Parameters root XElement The root. ns XNamespace The namespace. Returns OpmlOutline GetOutlines(XContainer?, XNamespace?) Gets the array of OpmlOutline. public static OpmlOutline[] GetOutlines(XContainer? root, XNamespace? ns) Parameters root XContainer The root. ns XNamespace The namespace. Returns OpmlOutline[]"
  },
  "latest/Songhay.Xml.XObjectUtility.html": {
    "href": "latest/Songhay.Xml.XObjectUtility.html",
    "title": "Class XObjectUtility | SonghayCore API",
    "keywords": "Class XObjectUtility Namespace Songhay.Xml Assembly SonghayCore.dll Static helper members for XML-related routines. public static class XObjectUtility Inheritance object XObjectUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks These definitions are biased toward emitting XPathDocument documents. However, many accept any input implementing the IXPathNavigable interface. Fields GlyphNonBreakingSpace Glyph: Non-Breaking Space public static readonly string GlyphNonBreakingSpace Field Value string Properties XTextNonBreakingSpace XText: Non-Breaking Space public static XText XTextNonBreakingSpace { get; } Property Value XText Methods GetCDataValue(XElement?) Get the CDATA value from the specified XElement. public static string? GetCDataValue(XElement? element) Parameters element XElement The XElement. Returns string GetCDataValue(XNode?) Get the CDATA value from the specified XNode. public static string? GetCDataValue(XNode? node) Parameters node XNode The XNode. Returns string GetLocalNameXPathQuery(string?) Gets the XNode into a local-name(), XPath-predicate query. public static string? GetLocalNameXPathQuery(string? childElementName) Parameters childElementName string Name of the child element. Returns string GetLocalNameXPathQuery(string?, string?) Gets the XNode into a local-name(), XPath-predicate query. public static string? GetLocalNameXPathQuery(string? namespacePrefixOrUri, string? childElementName) Parameters namespacePrefixOrUri string The namespace prefix or URI. childElementName string Name of the child element. Returns string GetLocalNameXPathQuery(string?, string?, string?) Gets the XNode into a local-name(), XPath-predicate query. public static string? GetLocalNameXPathQuery(string? namespacePrefixOrUri, string? childElementName, string? childAttributeName) Parameters namespacePrefixOrUri string The namespace prefix or URI. childElementName string Name of the child element. childAttributeName string Name of the child attribute. Returns string Remarks This routine is useful when namespace-resolving is not desirable or available. GetValue(XNode?, string?) Gets the element or attribute value of the specified element. public static string? GetValue(XNode? currentNode, string? query) Parameters currentNode XNode The current element. query string The xpath query. Returns string GetValue(XNode?, string?, bool) Gets the element or attribute value of the current element. public static string? GetValue(XNode? currentNode, string? query, bool throwException) Parameters currentNode XNode The current XNode. query string The xpath query. throwException bool if set to true throw exception. Returns string GetXAttributeValue(XNode?, string?, bool) Returns an object for parsing and adding to a list of parameters for data access. public static string? GetXAttributeValue(XNode? node, string? nodeQuery, bool throwException) Parameters node XNode The XNode. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. Returns string GetXAttributeValue(XNode?, string?, bool, string?) Returns an object for parsing and adding to a list of parameters for data access. public static string? GetXAttributeValue(XNode? node, string? nodeQuery, bool throwException, string? defaultValue) Parameters node XNode The XNode. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. defaultValue string Return the specified default value for “zero-length” text nodes. Returns string GetXAttributeValue(XNode?, string?, bool, string?, IXmlNamespaceResolver?) Returns an object for parsing and adding to a list of parameters for data access. public static string? GetXAttributeValue(XNode? node, string? nodeQuery, bool throwException, string? defaultValue, IXmlNamespaceResolver? resolver) Parameters node XNode The XNode. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. defaultValue string Return the specified default value for “zero-length” text nodes. resolver IXmlNamespaceResolver The IXmlNamespaceResolver to use to resolve prefixes. Returns string GetXAttributeValueAndParse<T>(XNode?, string?, bool, T) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetXAttributeValueAndParse<T>(XNode? node, string? nodeQuery, bool throwException, T defaultValue) Parameters node XNode The XNode. nodeQuery string The XPath string. throwException bool When true , throw an exception for null nodes and nodes that do not parse into the specified type. defaultValue T Return a boxing object for “zero-length” text nodes. Returns object Type Parameters T The type to parse from the node value. GetXAttributeValueAndParse<T>(XNode?, string?, bool, T?, IXmlNamespaceResolver?) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetXAttributeValueAndParse<T>(XNode? node, string? nodeQuery, bool throwException, T? defaultValue, IXmlNamespaceResolver? resolver) Parameters node XNode The XNode. nodeQuery string The XPath string. throwException bool When true , throw an exception for null nodes and nodes that do not parse into the specified type. defaultValue T Return a boxing object for “zero-length” text nodes. resolver IXmlNamespaceResolver The IXmlNamespaceResolver to use to resolve prefixes. Returns object Type Parameters T The type to parse from the node value. GetXDeclaration() Gets the XDeclaration. public static XDeclaration GetXDeclaration() Returns XDeclaration GetXDeclaration(string?, bool) Gets the XDeclaration. public static XDeclaration GetXDeclaration(string? encoding, bool isStandAlone) Parameters encoding string The encoding (Utf08 by default). isStandAlone bool When true document is stand-alone (true by default). Returns XDeclaration GetXElement(string?, object?) Gets the XElement. public static XElement GetXElement(string? rootElement, object? innerXml) Parameters rootElement string The root element name. innerXml object The inner XML. Returns XElement GetXElement(XNode?, string?) Gets the XElement. public static XElement? GetXElement(XNode? root, string? pathToElement) Parameters root XNode The root XNode. pathToElement string The XPath to element. Returns XElement GetXElements(XNode?, string?) Gets the IEnumerable<T>. public static IEnumerable<XElement> GetXElements(XNode? currentElement, string? query) Parameters currentElement XNode The current element. query string The xpath query. Returns IEnumerable<XElement> GetXNode(XNode?, string?) Gets the XNode from the specified XPath query. public static XNode? GetXNode(XNode? node, string? nodeQuery) Parameters node XNode The node. nodeQuery string The node query. Returns XNode GetXNode(XNode?, string?, bool) Gets the XNode from the specified XPath query. public static XNode? GetXNode(XNode? node, string? nodeQuery, bool throwException) Parameters node XNode The node. nodeQuery string The node query. throwException bool When true , throw an exception for null nodes. Returns XNode GetXNode(XNode?, string?, bool, IXmlNamespaceResolver) Gets the XNode from the specified XPath query. public static XNode? GetXNode(XNode? node, string? nodeQuery, bool throwException, IXmlNamespaceResolver resolver) Parameters node XNode The node. nodeQuery string The node query. throwException bool When true , throw an exception for null nodes. resolver IXmlNamespaceResolver The resolver. Returns XNode GetXNodes(XNode?, string?) Gets IEnumerable<T> from the specified XPath query. public static IEnumerable<XNode> GetXNodes(XNode? node, string? nodeQuery) Parameters node XNode The node. nodeQuery string The node query. Returns IEnumerable<XNode> GetXNodes(XNode?, string?, bool) Gets IEnumerable<T> from the specified XPath query. public static IEnumerable<XNode> GetXNodes(XNode? node, string? nodeQuery, bool throwException) Parameters node XNode The node. nodeQuery string The node query. throwException bool When true , throw an exception for null nodes. Returns IEnumerable<XNode> GetXNodes(XNode?, string?, bool, IXmlNamespaceResolver?) Gets IEnumerable<T> from the specified XPath query. public static IEnumerable<XNode> GetXNodes(XNode? node, string? nodeQuery, bool throwException, IXmlNamespaceResolver? resolver) Parameters node XNode The node. nodeQuery string The node query. throwException bool When true , throw an exception for null nodes. resolver IXmlNamespaceResolver The resolver. Returns IEnumerable<XNode> GetXObject(XNode?, string?) Gets the XObject from the specified XPath query. public static XObject? GetXObject(XNode? node, string? nodeQuery) Parameters node XNode The XNode node. nodeQuery string The node query string. Returns XObject GetXObject(XNode?, string?, bool) Gets the XObject from the specified XPath query. public static XObject? GetXObject(XNode? node, string? nodeQuery, bool throwException) Parameters node XNode The XNode node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. Returns XObject GetXObject(XNode?, string?, bool, IXmlNamespaceResolver?) Gets the XObject. public static XObject? GetXObject(XNode? node, string? nodeQuery, bool throwException, IXmlNamespaceResolver? resolver) Parameters node XNode The XNode node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. resolver IXmlNamespaceResolver The IXmlNamespaceResolver to use to resolve prefixes. Returns XObject GetXObjects(XNode?, string?) Gets IEnumerable<T> from the specified XPath query. public static IEnumerable<XObject> GetXObjects(XNode? node, string? nodeQuery) Parameters node XNode The node. nodeQuery string The node query. Returns IEnumerable<XObject> GetXObjects(XNode?, string?, bool) Gets IEnumerable<T> from the specified XPath query. public static IEnumerable<XObject> GetXObjects(XNode? node, string? nodeQuery, bool throwException) Parameters node XNode The node. nodeQuery string The node query. throwException bool When true , throw an exception for null nodes. Returns IEnumerable<XObject> GetXObjects(XNode?, string?, bool, IXmlNamespaceResolver?) Gets IEnumerable<T> from the specified XPath query. public static IEnumerable<XObject> GetXObjects(XNode? node, string? nodeQuery, bool throwException, IXmlNamespaceResolver? resolver) Parameters node XNode The node. nodeQuery string The node query. throwException bool When true , throw an exception for null nodes. resolver IXmlNamespaceResolver The resolver. Returns IEnumerable<XObject> JoinFlattenedXTextNodes(XElement?) Joins the flattened XText nodes. public static string? JoinFlattenedXTextNodes(XElement? rootElement) Parameters rootElement XElement The root element. Returns string JoinFlattenedXTextNodes(XElement?, bool) Joins the flattened XText nodes. public static string? JoinFlattenedXTextNodes(XElement? rootElement, bool includeRootElement) Parameters rootElement XElement The root element. includeRootElement bool When true include root element. Returns string JoinFlattenedXTextNodes(XElement?, bool, string?) Joins the flattened XText nodes. public static string? JoinFlattenedXTextNodes(XElement? rootElement, bool includeRootElement, string? joinDelimiter) Parameters rootElement XElement The root element. includeRootElement bool When true include root element. joinDelimiter string The join delimiter. Returns string"
  },
  "latest/Songhay.Xml.XhtmlDocumentUtility.html": {
    "href": "latest/Songhay.Xml.XhtmlDocumentUtility.html",
    "title": "Class XhtmlDocumentUtility | SonghayCore API",
    "keywords": "Class XhtmlDocumentUtility Namespace Songhay.Xml Assembly SonghayCore.dll Static members for XHTML Documents. public static class XhtmlDocumentUtility Inheritance object XhtmlDocumentUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Xhtml XHTML Namespace public static XNamespace Xhtml { get; } Property Value XNamespace Methods GetDocument(XDocument?, string?) Loads the XhtmlDocument. public static XhtmlDocument? GetDocument(XDocument? document, string? webPath) Parameters document XDocument The XML document. webPath string The public web path. Returns XhtmlDocument GetDocument(XDocument?, string?, bool) Loads the XhtmlDocument. public static XhtmlDocument? GetDocument(XDocument? document, string? webPath, bool useXhtmlNamespace) Parameters document XDocument The XML document. webPath string The public web path. useXhtmlNamespace bool if set to true use XHTML namespace (true by default). Returns XhtmlDocument LoadDocument(string?, string?) Loads the XhtmlDocument. public static XhtmlDocument? LoadDocument(string? pathToDocument, string? webPath) Parameters pathToDocument string The path to document. webPath string The public web path. Returns XhtmlDocument WriteDocumentIndex(string?, string?, string?, string?, string?) Writes the index of XHTML documents. public static void WriteDocumentIndex(string? indexFileName, string? indexTitle, string? publicRoot, string? pathToDirectory, string? pathToOutput) Parameters indexFileName string Name of the index file. indexTitle string The index title. publicRoot string The public root. pathToDirectory string The path to the specified directory. pathToOutput string The path to output."
  },
  "latest/Songhay.Xml.XmlUtility.html": {
    "href": "latest/Songhay.Xml.XmlUtility.html",
    "title": "Class XmlUtility | SonghayCore API",
    "keywords": "Class XmlUtility Namespace Songhay.Xml Assembly SonghayCore.dll Static helper members for XML-related routines. public static class XmlUtility Inheritance object XmlUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks These definitions are biased toward emitting XPathDocument documents. However, many accept any input implementing the IXPathNavigable interface. Fields ConventionalHtmlEntities The conventional HTML entities mapped to their respective glyphs. public static readonly Dictionary<string, string> ConventionalHtmlEntities Field Value Dictionary<string, string> Methods CombineNavigableDocuments(IXPathNavigable?, IXPathNavigable?) Combines two IXPathNavigable documents. public static XPathDocument? CombineNavigableDocuments(IXPathNavigable? parentDocument, IXPathNavigable? childDocument) Parameters parentDocument IXPathNavigable The IXPathNavigable “hosting” document. childDocument IXPathNavigable The IXPathNavigable child document. Returns XPathDocument CombineNavigableDocuments(IXPathNavigable?, IXPathNavigable?, string?) Combines two IXPathNavigable documents. public static XPathDocument? CombineNavigableDocuments(IXPathNavigable? parentDocument, IXPathNavigable? childDocument, string? nodeQuery) Parameters parentDocument IXPathNavigable The IXPathNavigable “hosting” document. childDocument IXPathNavigable The IXPathNavigable child document. nodeQuery string The XPath query to the child document location in the “hosting” document. Returns XPathDocument GetInstanceRaw<T>(string?) Deserializes based on the specified raw XML. public static T? GetInstanceRaw<T>(string? xmlFragment) where T : class Parameters xmlFragment string The raw XML. Returns T Type Parameters T The specified type to deserialize. GetInstance<T>(string?) Deserializes based on the specified XML file. public static T? GetInstance<T>(string? xmlPath) where T : class Parameters xmlPath string The XML file path. Returns T Type Parameters T The specified type to deserialize. GetInternalMessage(string) Returns an XML string based on the specified header and lines. public static string GetInternalMessage(string messageHeader) Parameters messageHeader string Message header. Returns string GetInternalMessage(string, ReadOnlyCollection<string>?) Returns an XML string based on the specified header and lines. public static string GetInternalMessage(string messageHeader, ReadOnlyCollection<string>? messageLines) Parameters messageHeader string Message header. messageLines ReadOnlyCollection<string> Message lines. Returns string GetInternalMessage(string?, string?, IEnumerable<string>?) Returns an XML string based on the specified header and lines. public static string GetInternalMessage(string? messageHeader, string? messageCode, IEnumerable<string>? messageLines) Parameters messageHeader string Message header. messageCode string Message code for errors, exceptions or faults. messageLines IEnumerable<string> Message lines. Returns string GetInternalMessage(string?, string?, string[]?, XmlWriter) Gets the conventional, XML <InternalMessage>. public static void GetInternalMessage(string? messageHeader, string? messageCode, string[]? messageLines, XmlWriter xmlDataWriter) Parameters messageHeader string Message header. messageCode string Message code for errors, exceptions or faults. messageLines string[] Message lines. xmlDataWriter XmlWriter The System.Xml.XmlTextWriter. GetInternalMessage(string?, string?, string[]?, XmlWriter?, bool) Gets the conventional, XML <InternalMessage>. public static void GetInternalMessage(string? messageHeader, string? messageCode, string[]? messageLines, XmlWriter? xmlDataWriter, bool isFragment) Parameters messageHeader string Message header. messageCode string Message code for errors, exceptions or faults. messageLines string[] Message lines. xmlDataWriter XmlWriter The XmlWriter. isFragment bool When false a new document is started. GetInternalMessage(string, string[]) Returns an XML string based on the specified header and lines. public static string GetInternalMessage(string messageHeader, string[] messageLines) Parameters messageHeader string Message header. messageLines string[] Message lines. Returns string GetInternalMessage(string?, string[]?, XmlWriter?) Gets the conventional, XML <InternalMessage>. public static void GetInternalMessage(string? messageHeader, string[]? messageLines, XmlWriter? xmlDataWriter) Parameters messageHeader string Message header. messageLines string[] Message lines. xmlDataWriter XmlWriter The XmlWriter. GetInternalMessage(string?, string[]?, XmlWriter?, bool) Gets the conventional, XML <InternalMessage>. public static void GetInternalMessage(string? messageHeader, string[]? messageLines, XmlWriter? xmlDataWriter, bool isFragment) Parameters messageHeader string Message header. messageLines string[] Message lines. xmlDataWriter XmlWriter The XmlWriter. isFragment bool When false a new document is started. GetInternalMessageDocument(string?, string?, string[]?) Returns an XPathDocument based on the specified header and lines. public static XPathDocument? GetInternalMessageDocument(string? messageHeader, string? messageCode, string[]? messageLines) Parameters messageHeader string Message header. messageCode string Message code for errors, exceptions or faults messageLines string[] Message lines. Returns XPathDocument GetInternalMessageDocument(string?, string[]?) Returns an XPathDocument based on the specified header and lines. public static XPathDocument? GetInternalMessageDocument(string? messageHeader, string[]? messageLines) Parameters messageHeader string Message header. messageLines string[] Message lines. Returns XPathDocument GetNamespaceManager(IXPathNavigable?) Returns a XmlNamespaceManager with respect to the document element of the specified IXPathNavigable document. public static XmlNamespaceManager? GetNamespaceManager(IXPathNavigable? navigable) Parameters navigable IXPathNavigable The IXPathNavigable document. Returns XmlNamespaceManager GetNavigableDocument(Stream?) Returns an XPathDocument based on the specified Stream. public static XPathDocument? GetNavigableDocument(Stream? stream) Parameters stream Stream The stream. Returns XPathDocument GetNavigableDocument(string?) Returns an XPathDocument based on the specified string. public static XPathDocument? GetNavigableDocument(string? xmlFragment) Parameters xmlFragment string A well-formed XML string. Returns XPathDocument GetNavigableDocument(IXPathNavigable?) Returns an XPathDocument based on the specified XmlNode. public static XPathDocument? GetNavigableDocument(IXPathNavigable? navigable) Parameters navigable IXPathNavigable The source IXPathNavigable document. Returns XPathDocument Remarks Use this member to convert XmlDocument documents. GetNavigableNode(IXPathNavigable?, string?) Returns an XPathNavigator based on the nodeQuery Expression toward the source document. public static XPathNavigator? GetNavigableNode(IXPathNavigable? navigable, string? nodeQuery) Parameters navigable IXPathNavigable The source IXPathNavigable document. nodeQuery string The value to be compiled into an XPathExpression. Returns XPathNavigator GetNavigableNode(IXPathNavigable?, string?, XmlNamespaceManager?) Returns an XPathNavigator based on the nodeQuery Expression toward the source document. public static XPathNavigator? GetNavigableNode(IXPathNavigable? navigable, string? nodeQuery, XmlNamespaceManager? nsMan) Parameters navigable IXPathNavigable The source IXPathNavigable document. nodeQuery string The value to be compiled into an XPathExpression. nsMan XmlNamespaceManager The XmlNamespaceManager to use to resolve prefixes. Returns XPathNavigator GetNavigableNodes(IXPathNavigable?, string?) Returns an XPathNodeIterator based on the nodeQuery Expression toward the source document. public static XPathNodeIterator? GetNavigableNodes(IXPathNavigable? navigable, string? nodeQuery) Parameters navigable IXPathNavigable The source IXPathNavigable document. nodeQuery string The value to be compiled into an XPathExpression. Returns XPathNodeIterator GetNavigableNodes(IXPathNavigable?, string?, XmlNamespaceManager) Returns an XPathNodeIterator based on the nodeQuery Expression toward the source document. public static XPathNodeIterator? GetNavigableNodes(IXPathNavigable? navigable, string? nodeQuery, XmlNamespaceManager nsMan) Parameters navigable IXPathNavigable The source IXPathNavigable document. nodeQuery string The value to be compiled into an XPathExpression. nsMan XmlNamespaceManager The XmlNamespaceManager to use to resolve prefixes. Returns XPathNodeIterator GetNodeValue(IXPathNavigable?, string?, bool) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true, throw an exception for null nodes. Returns object GetNodeValue(IXPathNavigable?, string?, bool, object?) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException, object? defaultValue) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true, throw an exception for null nodes. defaultValue object Return the specified default value for “zero-length” text nodes. Returns object GetNodeValue(IXPathNavigable?, string?, bool, object?, XmlNamespaceManager?) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException, object? defaultValue, XmlNamespaceManager? nsMan) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true, throw an exception for null nodes. defaultValue object Return the specified default value for “zero-length” text nodes. nsMan XmlNamespaceManager The XmlNamespaceManager to use to resolve prefixes. Returns object GetNodeValueAndParse<T>(IXPathNavigable?, string?, bool, T) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetNodeValueAndParse<T>(IXPathNavigable? node, string? nodeQuery, bool throwException, T defaultValue) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The XPath string. throwException bool When true, throw an exception for null nodes and nodes that do not parse into the specified type. defaultValue T Return a boxing object for “zero-length” text nodes. Returns object Type Parameters T The type to parse from the node value. GetNodeValueAndParse<T>(IXPathNavigable?, string?, bool, T?, XmlNamespaceManager?) Returns an object for parsing and adding to a list of parameters for data access. public static object? GetNodeValueAndParse<T>(IXPathNavigable? node, string? nodeQuery, bool throwException, T? defaultValue, XmlNamespaceManager? nsMan) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The XPath string. throwException bool When true, throw an exception for null nodes and nodes that do not parse into the specified type. defaultValue T Return a boxing object for “zero-length” text nodes. nsMan XmlNamespaceManager The XmlNamespaceManager to use to resolve prefixes. Returns object Type Parameters T The type to parse from the node value. GetText(MemoryStream?) “Cleans” XML data returning in a MemoryStream. public static string? GetText(MemoryStream? ramStream) Parameters ramStream MemoryStream MemoryStream Returns string GetXmlSchema(IXPathNavigable, ValidationEventHandler) Returns an XmlSchema based on the specified navigable set and validation event handler. public static XmlSchema? GetXmlSchema(IXPathNavigable navigable, ValidationEventHandler eventHandler) Parameters navigable IXPathNavigable The source IXPathNavigable document. eventHandler ValidationEventHandler The ValidationEventHandler with signature MyHandler(object sender, ValidationEventArgs args). Returns XmlSchema GetXslResult(IXPathNavigable?, IXPathNavigable?) Returns a XPathDocument for the transformation of the XSLT document and the XML document. public static XPathDocument GetXslResult(IXPathNavigable? navigableXsl, IXPathNavigable? navigableSet) Parameters navigableXsl IXPathNavigable The source IXPathNavigable XSL document. navigableSet IXPathNavigable The source IXPathNavigable XML document. Returns XPathDocument GetXslResult(IXPathNavigable?, XsltArgumentList?, IXPathNavigable?) Returns a XPathDocument for the transformation of the XSLT document and the XML document. public static XPathDocument GetXslResult(IXPathNavigable? navigableXsl, XsltArgumentList? xslArgs, IXPathNavigable? navigableXml) Parameters navigableXsl IXPathNavigable The source IXPathNavigable XSL document. xslArgs XsltArgumentList The XsltArgumentList. navigableXml IXPathNavigable The source IXPathNavigable XML document. Returns XPathDocument GetXslString(IXPathNavigable?, IXPathNavigable?) Returns a string for the transformation of the XSLT document and the XML document. public static string? GetXslString(IXPathNavigable? navigableXsl, IXPathNavigable? navigableSet) Parameters navigableXsl IXPathNavigable The source IXPathNavigable XSL document. navigableSet IXPathNavigable The source IXPathNavigable XML document. Returns string GetXslString(IXPathNavigable?, XsltArgumentList?, IXPathNavigable?) Returns a string for the transformation of the XSLT document and the XML document. public static string? GetXslString(IXPathNavigable? navigableXsl, XsltArgumentList? xslArgs, IXPathNavigable? navigableXml) Parameters navigableXsl IXPathNavigable The source IXPathNavigable XSL document. xslArgs XsltArgumentList The XsltArgumentList. navigableXml IXPathNavigable The source IXPathNavigable XML document. Returns string GetXslString(IXPathNavigable?, XsltArgumentList?, IXPathNavigable?, XmlWriterSettings?) Returns a string for the transformation of the XSLT document and the XML document. public static string? GetXslString(IXPathNavigable? navigableXsl, XsltArgumentList? xslArgs, IXPathNavigable? navigableXml, XmlWriterSettings? settings) Parameters navigableXsl IXPathNavigable The source IXPathNavigable XSL document. xslArgs XsltArgumentList The XsltArgumentList. navigableXml IXPathNavigable The source IXPathNavigable XML document. settings XmlWriterSettings The settings. Returns string InputAs<TIn>(TIn?) Returns an XPathDocument, converted from the specified input. public static XPathDocument? InputAs<TIn>(TIn? input) where TIn : class Parameters input TIn The input. Returns XPathDocument Returns an XPathDocument. Type Parameters TIn The Type of the input. Remarks This member only supports TIn as string, XmlDocument or XPathDocument. IsNoNodeValue(IXPathNavigable?, string?, bool) Returns true when the node has the value “no”. public static bool IsNoNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. Returns bool IsNodeValue(IXPathNavigable?, string?, bool, string?) Returns true when the node has the specified value. public static bool IsNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException, string? testValue) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. testValue string The specified value to test with the node value. Returns bool IsNodeValue(IXPathNavigable?, string?, bool, string?, StringComparison) Returns true when the node has the specified value. public static bool IsNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException, string? testValue, StringComparison comparisonType) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. testValue string The specified value to test with the node value. comparisonType StringComparison The StringComparison type. Returns bool IsNodeValue(IXPathNavigable?, string?, bool, string?, XmlNamespaceManager) Returns true when the node has the specified value. public static bool IsNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException, string? testValue, XmlNamespaceManager nsMan) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. testValue string The specified value to test with the node value. nsMan XmlNamespaceManager The XmlNamespaceManager to use to resolve prefixes. Returns bool IsNodeValue(IXPathNavigable?, string?, bool, string?, XmlNamespaceManager, StringComparison) Returns true when the node has the specified value. public static bool IsNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException, string? testValue, XmlNamespaceManager nsMan, StringComparison comparisonType) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. testValue string The specified value to test with the node value. nsMan XmlNamespaceManager The XmlNamespaceManager to use to resolve prefixes. comparisonType StringComparison The StringComparison type. Returns bool IsXml(string?) Returns true when the fragment is XML-like. public static bool IsXml(string? fragment) Parameters fragment string The fragment to test. Returns bool IsYesNodeValue(IXPathNavigable?, string?, bool) Returns true when the node has the value “yes”. public static bool IsYesNodeValue(IXPathNavigable? node, string? nodeQuery, bool throwException) Parameters node IXPathNavigable The IXPathNavigable node. nodeQuery string The node query string. throwException bool When true , throw an exception for null nodes. Returns bool LoadXmlSchema(string?, ValidationEventHandler?) Loads an XmlSchema based on the specified navigable set and validation event handler. public static XmlSchema? LoadXmlSchema(string? pathToSchema, ValidationEventHandler? eventHandler) Parameters pathToSchema string The valid path to an XML Schema file. eventHandler ValidationEventHandler The ValidationEventHandler with signature MyHandler(object sender, ValidationEventArgs args). Returns XmlSchema LoadXslTransform(string?, string?) Returns a string for the transformation of the XSLT file and the XML file. public static string? LoadXslTransform(string? xslPath, string? xmlPath) Parameters xslPath string Output path to the XSLT file. xmlPath string Output path to the XML file. Returns string LoadXslTransform(string?, string?, string?) Returns a string for the transformation of the XSLT file and the XML file. public static string? LoadXslTransform(string? xslPath, string? commandName, string? xmlPath) Parameters xslPath string Output path to the XSLT file. commandName string The value for the cmd -parameter convention. xmlPath string Output path to the XML file. Returns string LoadXslTransform(string?, XsltArgumentList?, string?) Returns a string for the transformation of the XSLT file and the XML file. public static string? LoadXslTransform(string? xslPath, XsltArgumentList? xslArgs, string? xmlPath) Parameters xslPath string Output path to the XSLT file. xslArgs XsltArgumentList The XsltArgumentList. xmlPath string Output path to the XML file. Returns string LoadXslTransformForMemoryInput(string?, string?, string?) Returns a string for the transformation of the XSLT file and the specified IXPathNavigable in memory. public static string? LoadXslTransformForMemoryInput(string? xslPath, string? commandName, string? xmlFragment) Parameters xslPath string Output path to the XSLT file. commandName string The value for the cmd -parameter convention. xmlFragment string A well-formed XML string. Returns string Remarks This convention is used in ASP.NET Web applications. LoadXslTransformForMemoryInput(string?, string?, IXPathNavigable) Returns a string for the transformation of the XSLT file and the specified IXPathNavigable in memory. public static string? LoadXslTransformForMemoryInput(string? xslPath, string? commandName, IXPathNavigable navigableXml) Parameters xslPath string Output path to the XSLT file. commandName string The value for the cmd -parameter convention. navigableXml IXPathNavigable The IXPathNavigable in memory. Returns string Remarks This convention is used in ASP.NET Web applications. LoadXslTransformForMemoryInput(string?, XsltArgumentList?, string?) Returns a string for the transformation of the XSLT file and the XML in-memory fragment. public static string? LoadXslTransformForMemoryInput(string? xslPath, XsltArgumentList? xslArgs, string? xmlFragment) Parameters xslPath string Output path to the XSLT file. xslArgs XsltArgumentList The XsltArgumentList. xmlFragment string A well-formed XML string. Returns string Remarks This convention is used in ASP.NET Web applications. OutputAs<TOut>(string) Returns strongly typed output, converting the XML fragment. public static TOut? OutputAs<TOut>(string xmlFragment) where TOut : class Parameters xmlFragment string An XML fragment or document as a well-formed string. Returns TOut Returns the specified Type. Type Parameters TOut The Type of output to return (constrained to class). Remarks This member only supports TIn as string, XmlDocument or XPathDocument. OutputAs<TOut>(IXPathNavigable?) Returns strongly typed output, converting the Navigable document. public static TOut? OutputAs<TOut>(IXPathNavigable? navigableDocument) where TOut : class Parameters navigableDocument IXPathNavigable An IXPathNavigable. Returns TOut Returns the specified Type. Type Parameters TOut The Type of output to return (constrained to class). Remarks This member only supports TIn as string, XmlDocument or XPathDocument. StripNamespaces(string) Strip the namespaces from specified string. public static string? StripNamespaces(string xml) Parameters xml string The source string. Returns string Remarks WARNING: Stripping namespaces “flattens” the document and can cause local-name collisions. This routine does not remove namespace prefixes. StripNamespaces(string?, bool) Strip the namespaces from specified string. public static string? StripNamespaces(string? xml, bool removeDocType) Parameters xml string The source string. removeDocType bool When true, removes any DOCTYPE preambles. Returns string Remarks WARNING: Stripping namespaces “flattens” the document and can cause local-name collisions. This routine does not remove namespace prefixes. StripNamespaces(IXPathNavigable?) Strip the namespaces from specified document. public static XPathDocument? StripNamespaces(IXPathNavigable? navigable) Parameters navigable IXPathNavigable The source IXPathNavigable document. Returns XPathDocument Remarks WARNING: Stripping namespaces “flattens” the document and can cause local-name collisions. This routine does not remove namespace prefixes. StripNamespaces(IXPathNavigable?, bool) Strip the namespaces from specified document. public static XPathDocument? StripNamespaces(IXPathNavigable? navigable, bool removeDocType) Parameters navigable IXPathNavigable The source IXPathNavigable document. removeDocType bool When true, removes any DOCTYPE preambles. Returns XPathDocument Remarks WARNING: Stripping namespaces “flattens” the document and can cause local-name collisions. This routine does not remove namespace prefixes. ValidateNavigableNode(IXPathNavigable?, XmlSchema?, ValidationEventHandler?) Validates the specified navigable set with the specified schema and validation event handler. public static void ValidateNavigableNode(IXPathNavigable? navigable, XmlSchema? schema, ValidationEventHandler? eventHandler) Parameters navigable IXPathNavigable The source IXPathNavigable document. schema XmlSchema The XmlSchema. eventHandler ValidationEventHandler The ValidationEventHandler with signature MyHandler(object sender, ValidationEventArgs args). WriteReader(XmlReader?, XmlWriter?) Transfers the data in the Source to the Destination. public static void WriteReader(XmlReader? readerSource, XmlWriter? writerDestination) Parameters readerSource XmlReader The XmlReader. writerDestination XmlWriter The XmlWriter. WriteXslTransform(IXPathNavigable?, IXPathNavigable?, string?) Transforms the specified navigable documents and writes to disk with the specified path. public static void WriteXslTransform(IXPathNavigable? xmlInput, IXPathNavigable? navigableXsl, string? outputPath) Parameters xmlInput IXPathNavigable The specified input. navigableXsl IXPathNavigable The source IXPathNavigable document. outputPath string The file-system, target path. WriteXslTransform(XmlReader?, IXPathNavigable?, string?) Transforms the specified input and writes to disk. public static void WriteXslTransform(XmlReader? xmlInput, IXPathNavigable? navigableXsl, string? outputPath) Parameters xmlInput XmlReader The specified input. navigableXsl IXPathNavigable The source IXPathNavigable document. outputPath string The file-system, target path. Write<T>(T?, string?) Serializes and writes to the specified path. public static void Write<T>(T? instance, string? path) where T : class Parameters instance T The instance. path string The path. Type Parameters T The type of the instance. XmlDecode(string?) Transforms selected HTML entities into their respective glyphs. public static string? XmlDecode(string? value) Parameters value string The value. Returns string See Also Condense(string, bool) XmlEncode(string?) Transforms selected XML glyphs into their respective HTML entities. public static string? XmlEncode(string? value) Parameters value string The value. Returns string Remarks This member will preserve HTML comments. See Also Expand(string, bool)"
  },
  "latest/Songhay.Xml.html": {
    "href": "latest/Songhay.Xml.html",
    "title": "Namespace Songhay.Xml | SonghayCore API",
    "keywords": "Namespace Songhay.Xml Classes HtmlUtility Static members for HTML text processing. LatinGlyphsUtility Condenses and expands Latin glyphs. OpmlUtility Static helpers for OPML. XObjectUtility Static helper members for XML-related routines. XhtmlDocumentUtility Static members for XHTML Documents. XmlUtility Static helper members for XML-related routines."
  },
  "latest/Songhay.html": {
    "href": "latest/Songhay.html",
    "title": "Namespace Songhay | SonghayCore API",
    "keywords": "Namespace Songhay Classes AzureActiveDirectoryUtility Shared routines for Azure Active Directory conventions. AzureBlobStorageRestApiUtility Shared REST routines for Azure BLOB Storage. AzureKeyVaultRestApiUtility Shared REST routines for Azure BLOB Storage. MathUtility Static helpers for Math. ProgramAssemblyUtility Static members related to System.Reflection. ProgramFileUtility A few static helper members for System.IO. ProgramTypeUtility Static members for type handling. ProgramUtility Defines shared routines for Studio programs. TaskUtility Members for Task."
  }
}