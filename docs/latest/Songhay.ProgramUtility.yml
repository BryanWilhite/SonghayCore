### YamlMime:ManagedReference
items:
- uid: Songhay.ProgramUtility
  commentId: T:Songhay.ProgramUtility
  id: ProgramUtility
  parent: Songhay
  children:
  - Songhay.ProgramUtility.GetConsoleCharacters(System.String)
  - Songhay.ProgramUtility.GetConsoleIndentation(System.Int32,System.Int32)
  - Songhay.ProgramUtility.GetCurrentMethodName
  - Songhay.ProgramUtility.GetMethodName(System.Int32)
  - Songhay.ProgramUtility.HandleDebug
  - Songhay.ProgramUtility.InitializeTraceSource(System.Diagnostics.TraceListener)
  - Songhay.ProgramUtility.LoadConfiguration(System.String)
  - Songhay.ProgramUtility.LoadConfiguration(System.String,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.String[])
  - Songhay.ProgramUtility.LoadConfiguration(System.String,System.String[])
  - Songhay.ProgramUtility.StartProcess(System.String)
  - Songhay.ProgramUtility.StartProcess(System.String,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: ProgramUtility
  nameWithType: ProgramUtility
  fullName: Songhay.ProgramUtility
  type: Class
  source:
    remote:
      path: SonghayCore/ProgramUtility._.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ProgramUtility
    path: ../SonghayCore/ProgramUtility._.cs
    startLine: 5
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Defines shared routines for Studio programs.
  example: []
  syntax:
    content: public static class ProgramUtility
    content.vb: Public Module ProgramUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.ProgramUtility.GetConsoleCharacters(System.String)
  commentId: M:Songhay.ProgramUtility.GetConsoleCharacters(System.String)
  id: GetConsoleCharacters(System.String)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: GetConsoleCharacters(string?)
  nameWithType: ProgramUtility.GetConsoleCharacters(string?)
  fullName: Songhay.ProgramUtility.GetConsoleCharacters(string?)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility.Console.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConsoleCharacters
    path: ../SonghayCore/ProgramUtility.Console.cs
    startLine: 9
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Gets the console characters.
  example: []
  syntax:
    content: public static string? GetConsoleCharacters(string? input)
    parameters:
    - id: input
      type: System.String
      description: The input.
    return:
      type: System.String
      description: Returns formatted input.
    content.vb: Public Shared Function GetConsoleCharacters(input As String) As String
  overload: Songhay.ProgramUtility.GetConsoleCharacters*
  nameWithType.vb: ProgramUtility.GetConsoleCharacters(String)
  fullName.vb: Songhay.ProgramUtility.GetConsoleCharacters(String)
  name.vb: GetConsoleCharacters(String)
- uid: Songhay.ProgramUtility.GetConsoleIndentation(System.Int32,System.Int32)
  commentId: M:Songhay.ProgramUtility.GetConsoleIndentation(System.Int32,System.Int32)
  id: GetConsoleIndentation(System.Int32,System.Int32)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: GetConsoleIndentation(int, int)
  nameWithType: ProgramUtility.GetConsoleIndentation(int, int)
  fullName: Songhay.ProgramUtility.GetConsoleIndentation(int, int)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility.Console.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConsoleIndentation
    path: ../SonghayCore/ProgramUtility.Console.cs
    startLine: 98
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Gets the indentation spaces for test display.
  example: []
  syntax:
    content: public static string GetConsoleIndentation(int numberOfSpaces, int indentationLevel)
    parameters:
    - id: numberOfSpaces
      type: System.Int32
      description: ''
    - id: indentationLevel
      type: System.Int32
      description: ''
    return:
      type: System.String
    content.vb: Public Shared Function GetConsoleIndentation(numberOfSpaces As Integer, indentationLevel As Integer) As String
  overload: Songhay.ProgramUtility.GetConsoleIndentation*
  nameWithType.vb: ProgramUtility.GetConsoleIndentation(Integer, Integer)
  fullName.vb: Songhay.ProgramUtility.GetConsoleIndentation(Integer, Integer)
  name.vb: GetConsoleIndentation(Integer, Integer)
- uid: Songhay.ProgramUtility.StartProcess(System.String)
  commentId: M:Songhay.ProgramUtility.StartProcess(System.String)
  id: StartProcess(System.String)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: StartProcess(string?)
  nameWithType: ProgramUtility.StartProcess(string?)
  fullName: Songhay.ProgramUtility.StartProcess(string?)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility.Process.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: StartProcess
    path: ../SonghayCore/ProgramUtility.Process.cs
    startLine: 8
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Starts the process.
  example: []
  syntax:
    content: public static void StartProcess(string? command)
    parameters:
    - id: command
      type: System.String
      description: The command.
    content.vb: Public Shared Sub StartProcess(command As String)
  overload: Songhay.ProgramUtility.StartProcess*
  nameWithType.vb: ProgramUtility.StartProcess(String)
  fullName.vb: Songhay.ProgramUtility.StartProcess(String)
  name.vb: StartProcess(String)
- uid: Songhay.ProgramUtility.StartProcess(System.String,System.String,System.Boolean)
  commentId: M:Songhay.ProgramUtility.StartProcess(System.String,System.String,System.Boolean)
  id: StartProcess(System.String,System.String,System.Boolean)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: StartProcess(string, string, bool)
  nameWithType: ProgramUtility.StartProcess(string, string, bool)
  fullName: Songhay.ProgramUtility.StartProcess(string, string, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility.Process.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: StartProcess
    path: ../SonghayCore/ProgramUtility.Process.cs
    startLine: 62
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Starts the process.
  example: []
  syntax:
    content: public static void StartProcess(string argumentOfExe, string pathToExe, bool useExe)
    parameters:
    - id: argumentOfExe
      type: System.String
      description: The argument of executable.
    - id: pathToExe
      type: System.String
      description: The path to executable.
    - id: useExe
      type: System.Boolean
      description: if set to <code>true</code> use path to executable.
    content.vb: Public Shared Sub StartProcess(argumentOfExe As String, pathToExe As String, useExe As Boolean)
  overload: Songhay.ProgramUtility.StartProcess*
  nameWithType.vb: ProgramUtility.StartProcess(String, String, Boolean)
  fullName.vb: Songhay.ProgramUtility.StartProcess(String, String, Boolean)
  name.vb: StartProcess(String, String, Boolean)
- uid: Songhay.ProgramUtility.GetCurrentMethodName
  commentId: M:Songhay.ProgramUtility.GetCurrentMethodName
  id: GetCurrentMethodName
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: GetCurrentMethodName()
  nameWithType: ProgramUtility.GetCurrentMethodName()
  fullName: Songhay.ProgramUtility.GetCurrentMethodName()
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility.StackTrace.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetCurrentMethodName
    path: ../SonghayCore/ProgramUtility.StackTrace.cs
    startLine: 7
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Gets the name of the current method.
  example: []
  syntax:
    content: public static string? GetCurrentMethodName()
    return:
      type: System.String
    content.vb: Public Shared Function GetCurrentMethodName() As String
  overload: Songhay.ProgramUtility.GetCurrentMethodName*
- uid: Songhay.ProgramUtility.GetMethodName(System.Int32)
  commentId: M:Songhay.ProgramUtility.GetMethodName(System.Int32)
  id: GetMethodName(System.Int32)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: GetMethodName(int)
  nameWithType: ProgramUtility.GetMethodName(int)
  fullName: Songhay.ProgramUtility.GetMethodName(int)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility.StackTrace.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetMethodName
    path: ../SonghayCore/ProgramUtility.StackTrace.cs
    startLine: 14
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Gets the name of the current method.
  example: []
  syntax:
    content: public static string? GetMethodName(int stackFrameIndex)
    parameters:
    - id: stackFrameIndex
      type: System.Int32
      description: Index of the stack frame.
    return:
      type: System.String
    content.vb: Public Shared Function GetMethodName(stackFrameIndex As Integer) As String
  overload: Songhay.ProgramUtility.GetMethodName*
  nameWithType.vb: ProgramUtility.GetMethodName(Integer)
  fullName.vb: Songhay.ProgramUtility.GetMethodName(Integer)
  name.vb: GetMethodName(Integer)
- uid: Songhay.ProgramUtility.InitializeTraceSource(System.Diagnostics.TraceListener)
  commentId: M:Songhay.ProgramUtility.InitializeTraceSource(System.Diagnostics.TraceListener)
  id: InitializeTraceSource(System.Diagnostics.TraceListener)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: InitializeTraceSource(TraceListener?)
  nameWithType: ProgramUtility.InitializeTraceSource(TraceListener?)
  fullName: Songhay.ProgramUtility.InitializeTraceSource(System.Diagnostics.TraceListener?)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility._.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: InitializeTraceSource
    path: ../SonghayCore/ProgramUtility._.cs
    startLine: 11
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Initializes the trace source.
  example: []
  syntax:
    content: public static TraceSource? InitializeTraceSource(TraceListener? listener)
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: The listener.
    return:
      type: System.Diagnostics.TraceSource
    content.vb: Public Shared Function InitializeTraceSource(listener As TraceListener) As TraceSource
  overload: Songhay.ProgramUtility.InitializeTraceSource*
  nameWithType.vb: ProgramUtility.InitializeTraceSource(TraceListener)
  fullName.vb: Songhay.ProgramUtility.InitializeTraceSource(System.Diagnostics.TraceListener)
  name.vb: InitializeTraceSource(TraceListener)
- uid: Songhay.ProgramUtility.LoadConfiguration(System.String)
  commentId: M:Songhay.ProgramUtility.LoadConfiguration(System.String)
  id: LoadConfiguration(System.String)
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: LoadConfiguration(string?)
  nameWithType: ProgramUtility.LoadConfiguration(string?)
  fullName: Songhay.ProgramUtility.LoadConfiguration(string?)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility._.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LoadConfiguration
    path: ../SonghayCore/ProgramUtility._.cs
    startLine: 27
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Loads the configuration.
  example: []
  syntax:
    content: public static IConfigurationRoot LoadConfiguration(string? basePath)
    parameters:
    - id: basePath
      type: System.String
      description: The base path.
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
    content.vb: Public Shared Function LoadConfiguration(basePath As String) As IConfigurationRoot
  overload: Songhay.ProgramUtility.LoadConfiguration*
  nameWithType.vb: ProgramUtility.LoadConfiguration(String)
  fullName.vb: Songhay.ProgramUtility.LoadConfiguration(String)
  name.vb: LoadConfiguration(String)
- uid: Songhay.ProgramUtility.LoadConfiguration(System.String,System.String[])
  commentId: M:Songhay.ProgramUtility.LoadConfiguration(System.String,System.String[])
  id: LoadConfiguration(System.String,System.String[])
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: LoadConfiguration(string?, params string[])
  nameWithType: ProgramUtility.LoadConfiguration(string?, params string[])
  fullName: Songhay.ProgramUtility.LoadConfiguration(string?, params string[])
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility._.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LoadConfiguration
    path: ../SonghayCore/ProgramUtility._.cs
    startLine: 36
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Loads the built configuration.
  example: []
  syntax:
    content: public static IConfigurationRoot LoadConfiguration(string? basePath, params string[] requiredJsonConfigurationFiles)
    parameters:
    - id: basePath
      type: System.String
      description: The base path.
    - id: requiredJsonConfigurationFiles
      type: System.String[]
      description: specify any additional JSON configuration files before build
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
      description: Returns the built configuration.
    content.vb: Public Shared Function LoadConfiguration(basePath As String, ParamArray requiredJsonConfigurationFiles As String()) As IConfigurationRoot
  overload: Songhay.ProgramUtility.LoadConfiguration*
  nameWithType.vb: ProgramUtility.LoadConfiguration(String, ParamArray String())
  fullName.vb: Songhay.ProgramUtility.LoadConfiguration(String, ParamArray String())
  name.vb: LoadConfiguration(String, ParamArray String())
- uid: Songhay.ProgramUtility.LoadConfiguration(System.String,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.String[])
  commentId: M:Songhay.ProgramUtility.LoadConfiguration(System.String,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.String[])
  id: LoadConfiguration(System.String,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.String[])
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: LoadConfiguration(string?, Func<IConfigurationBuilder, IConfigurationBuilder>?, params string[])
  nameWithType: ProgramUtility.LoadConfiguration(string?, Func<IConfigurationBuilder, IConfigurationBuilder>?, params string[])
  fullName: Songhay.ProgramUtility.LoadConfiguration(string?, System.Func<Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.Configuration.IConfigurationBuilder>?, params string[])
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility._.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: LoadConfiguration
    path: ../SonghayCore/ProgramUtility._.cs
    startLine: 47
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Loads the built configuration.
  example: []
  syntax:
    content: public static IConfigurationRoot LoadConfiguration(string? basePath, Func<IConfigurationBuilder, IConfigurationBuilder>? builderModifier, params string[] requiredJsonConfigurationFiles)
    parameters:
    - id: basePath
      type: System.String
      description: The base path.
    - id: builderModifier
      type: System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder}
      description: Allows modification of <xref href="Microsoft.Extensions.Configuration.ConfigurationBuilder" data-throw-if-not-resolved="false"></xref> before build.
    - id: requiredJsonConfigurationFiles
      type: System.String[]
      description: specify any additional JSON configuration files before build
    return:
      type: Microsoft.Extensions.Configuration.IConfigurationRoot
      description: Returns the built configuration.
    content.vb: Public Shared Function LoadConfiguration(basePath As String, builderModifier As Func(Of IConfigurationBuilder, IConfigurationBuilder), ParamArray requiredJsonConfigurationFiles As String()) As IConfigurationRoot
  overload: Songhay.ProgramUtility.LoadConfiguration*
  nameWithType.vb: ProgramUtility.LoadConfiguration(String, Func(Of IConfigurationBuilder, IConfigurationBuilder), ParamArray String())
  fullName.vb: Songhay.ProgramUtility.LoadConfiguration(String, System.Func(Of Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.Configuration.IConfigurationBuilder), ParamArray String())
  name.vb: LoadConfiguration(String, Func(Of IConfigurationBuilder, IConfigurationBuilder), ParamArray String())
- uid: Songhay.ProgramUtility.HandleDebug
  commentId: M:Songhay.ProgramUtility.HandleDebug
  id: HandleDebug
  parent: Songhay.ProgramUtility
  langs:
  - csharp
  - vb
  name: HandleDebug()
  nameWithType: ProgramUtility.HandleDebug()
  fullName: Songhay.ProgramUtility.HandleDebug()
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramUtility._.cs
      branch: dev/version-8.0.1
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: HandleDebug
    path: ../SonghayCore/ProgramUtility._.cs
    startLine: 76
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Pauses the shell Program in <code>DEBUG</code> mode.
  example: []
  syntax:
    content: public static void HandleDebug()
    content.vb: Public Shared Sub HandleDebug()
  overload: Songhay.ProgramUtility.HandleDebug*
references:
- uid: Songhay
  commentId: N:Songhay
  href: Songhay.html
  name: Songhay
  nameWithType: Songhay
  fullName: Songhay
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.ProgramUtility.GetConsoleCharacters*
  commentId: Overload:Songhay.ProgramUtility.GetConsoleCharacters
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_GetConsoleCharacters_System_String_
  name: GetConsoleCharacters
  nameWithType: ProgramUtility.GetConsoleCharacters
  fullName: Songhay.ProgramUtility.GetConsoleCharacters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Songhay.ProgramUtility.GetConsoleIndentation*
  commentId: Overload:Songhay.ProgramUtility.GetConsoleIndentation
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_GetConsoleIndentation_System_Int32_System_Int32_
  name: GetConsoleIndentation
  nameWithType: ProgramUtility.GetConsoleIndentation
  fullName: Songhay.ProgramUtility.GetConsoleIndentation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Songhay.ProgramUtility.StartProcess*
  commentId: Overload:Songhay.ProgramUtility.StartProcess
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_StartProcess_System_String_
  name: StartProcess
  nameWithType: ProgramUtility.StartProcess
  fullName: Songhay.ProgramUtility.StartProcess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.ProgramUtility.GetCurrentMethodName*
  commentId: Overload:Songhay.ProgramUtility.GetCurrentMethodName
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_GetCurrentMethodName
  name: GetCurrentMethodName
  nameWithType: ProgramUtility.GetCurrentMethodName
  fullName: Songhay.ProgramUtility.GetCurrentMethodName
- uid: Songhay.ProgramUtility.GetMethodName*
  commentId: Overload:Songhay.ProgramUtility.GetMethodName
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_GetMethodName_System_Int32_
  name: GetMethodName
  nameWithType: ProgramUtility.GetMethodName
  fullName: Songhay.ProgramUtility.GetMethodName
- uid: Songhay.ProgramUtility.InitializeTraceSource*
  commentId: Overload:Songhay.ProgramUtility.InitializeTraceSource
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_InitializeTraceSource_System_Diagnostics_TraceListener_
  name: InitializeTraceSource
  nameWithType: ProgramUtility.InitializeTraceSource
  fullName: Songhay.ProgramUtility.InitializeTraceSource
- uid: System.Diagnostics.TraceListener
  commentId: T:System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.tracelistener
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.Diagnostics.TraceSource
  commentId: T:System.Diagnostics.TraceSource
  parent: System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.tracesource
  name: TraceSource
  nameWithType: TraceSource
  fullName: System.Diagnostics.TraceSource
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Diagnostics
    name: Diagnostics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Diagnostics
    name: Diagnostics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.diagnostics
- uid: Songhay.ProgramUtility.LoadConfiguration*
  commentId: Overload:Songhay.ProgramUtility.LoadConfiguration
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_LoadConfiguration_System_String_
  name: LoadConfiguration
  nameWithType: ProgramUtility.LoadConfiguration
  fullName: Songhay.ProgramUtility.LoadConfiguration
- uid: Microsoft.Extensions.Configuration.IConfigurationRoot
  commentId: T:Microsoft.Extensions.Configuration.IConfigurationRoot
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationroot
  name: IConfigurationRoot
  nameWithType: IConfigurationRoot
  fullName: Microsoft.Extensions.Configuration.IConfigurationRoot
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Microsoft.Extensions.Configuration.ConfigurationBuilder
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationBuilder
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationbuilder
  name: ConfigurationBuilder
  nameWithType: ConfigurationBuilder
  fullName: Microsoft.Extensions.Configuration.ConfigurationBuilder
- uid: System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder}
  commentId: T:System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IConfigurationBuilder, IConfigurationBuilder>
  nameWithType: Func<IConfigurationBuilder, IConfigurationBuilder>
  fullName: System.Func<Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.Configuration.IConfigurationBuilder>
  nameWithType.vb: Func(Of IConfigurationBuilder, IConfigurationBuilder)
  fullName.vb: System.Func(Of Microsoft.Extensions.Configuration.IConfigurationBuilder, Microsoft.Extensions.Configuration.IConfigurationBuilder)
  name.vb: Func(Of IConfigurationBuilder, IConfigurationBuilder)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  - name: ','
  - name: " "
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfigurationbuilder
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.ProgramUtility.HandleDebug*
  commentId: Overload:Songhay.ProgramUtility.HandleDebug
  href: Songhay.ProgramUtility.html#Songhay_ProgramUtility_HandleDebug
  name: HandleDebug
  nameWithType: ProgramUtility.HandleDebug
  fullName: Songhay.ProgramUtility.HandleDebug
