### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.JsonNodeExtensions
  commentId: T:Songhay.Extensions.JsonNodeExtensions
  id: JsonNodeExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties(System.Text.Json.Nodes.JsonObject,System.Int32)
  - Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind(System.Text.Json.Nodes.JsonNode)
  - Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  - Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull(System.Text.Json.Nodes.JsonObject,System.String,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  - Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  - Songhay.Extensions.JsonNodeExtensions.GetPropertyValue``1(System.Text.Json.Nodes.JsonNode,System.String)
  - Songhay.Extensions.JsonNodeExtensions.HasProperty(System.Text.Json.Nodes.JsonNode,System.String)
  - Songhay.Extensions.JsonNodeExtensions.IsExpectedObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger,System.String[])
  - Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.ToJsonArray(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.ToJsonObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  - Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed(System.Text.Json.Nodes.JsonObject,Microsoft.Extensions.Logging.ILogger,System.ValueTuple{System.String,System.String}[])
  langs:
  - csharp
  - vb
  name: JsonNodeExtensions
  nameWithType: JsonNodeExtensions
  fullName: Songhay.Extensions.JsonNodeExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: JsonNodeExtensions
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 11
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extensions of <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    To prevent passing null instances of <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref> into these methods,

    use <xref href="Songhay.ILoggerUtility.AsInstanceOrNullLogger(Microsoft.Extensions.Logging.ILogger)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class JsonNodeExtensions
    content.vb: Public Module JsonNodeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties(System.Text.Json.Nodes.JsonObject,System.Int32)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties(System.Text.Json.Nodes.JsonObject,System.Int32)
  id: DisplayTopProperties(System.Text.Json.Nodes.JsonObject,System.Int32)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: DisplayTopProperties(JsonObject?, int)
  nameWithType: JsonNodeExtensions.DisplayTopProperties(JsonObject?, int)
  fullName: Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties(System.Text.Json.Nodes.JsonObject?, int)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DisplayTopProperties
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 20
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Displays top-level <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref> properties

    without recursion.
  example: []
  syntax:
    content: public static string DisplayTopProperties(this JsonObject? jObject, int truncationLength = 16)
    parameters:
    - id: jObject
      type: System.Text.Json.Nodes.JsonObject
      description: the <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>
    - id: truncationLength
      type: System.Int32
      description: the number of characters to display for each property
    return:
      type: System.String
    content.vb: Public Shared Function DisplayTopProperties(jObject As JsonObject, truncationLength As Integer = 16) As String
  overload: Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties*
  nameWithType.vb: JsonNodeExtensions.DisplayTopProperties(JsonObject, Integer)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties(System.Text.Json.Nodes.JsonObject, Integer)
  name.vb: DisplayTopProperties(JsonObject, Integer)
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  id: GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyJsonArrayOrNull(JsonNode?, string)
  nameWithType: JsonNodeExtensions.GetPropertyJsonArrayOrNull(JsonNode?, string)
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPropertyJsonArrayOrNull
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 63
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Gets the <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref> of the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    of <xref href="System.Text.Json.JsonValueKind.Array" data-throw-if-not-resolved="false"></xref>

    or defaults to null.
  example: []
  syntax:
    content: public static JsonArray? GetPropertyJsonArrayOrNull(this JsonNode? node, string propertyName)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
    - id: propertyName
      type: System.String
      description: Name of the property.
    return:
      type: System.Text.Json.Nodes.JsonArray
    content.vb: Public Shared Function GetPropertyJsonArrayOrNull(node As JsonNode, propertyName As String) As JsonArray
  overload: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull*
  nameWithType.vb: JsonNodeExtensions.GetPropertyJsonArrayOrNull(JsonNode, String)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode, String)
  name.vb: GetPropertyJsonArrayOrNull(JsonNode, String)
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  id: GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyJsonObjectOrNull(JsonNode?, string)
  nameWithType: JsonNodeExtensions.GetPropertyJsonObjectOrNull(JsonNode?, string)
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPropertyJsonObjectOrNull
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 80
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Gets the <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref> of the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    of <xref href="System.Text.Json.JsonValueKind.Object" data-throw-if-not-resolved="false"></xref>

    or defaults to null.
  example: []
  syntax:
    content: public static JsonObject? GetPropertyJsonObjectOrNull(this JsonNode? node, string propertyName)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
    - id: propertyName
      type: System.String
      description: Name of the property.
    return:
      type: System.Text.Json.Nodes.JsonObject
    content.vb: Public Shared Function GetPropertyJsonObjectOrNull(node As JsonNode, propertyName As String) As JsonObject
  overload: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull*
  nameWithType.vb: JsonNodeExtensions.GetPropertyJsonObjectOrNull(JsonNode, String)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode, String)
  name.vb: GetPropertyJsonObjectOrNull(JsonNode, String)
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull(System.Text.Json.Nodes.JsonObject,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull(System.Text.Json.Nodes.JsonObject,System.String,Microsoft.Extensions.Logging.ILogger)
  id: GetPropertyJsonNodeOrNull(System.Text.Json.Nodes.JsonObject,System.String,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyJsonNodeOrNull(JsonObject?, string, ILogger)
  nameWithType: JsonNodeExtensions.GetPropertyJsonNodeOrNull(JsonObject?, string, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull(System.Text.Json.Nodes.JsonObject?, string, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPropertyJsonNodeOrNull
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 98
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Returns the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    of the specified target property name

    or <code>null</code>.
  example: []
  syntax:
    content: public static JsonNode? GetPropertyJsonNodeOrNull(this JsonObject? jObject, string targetPropertyName, ILogger logger)
    parameters:
    - id: jObject
      type: System.Text.Json.Nodes.JsonObject
      description: the <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>
    - id: targetPropertyName
      type: System.String
      description: the target property name
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Text.Json.Nodes.JsonNode
    content.vb: Public Shared Function GetPropertyJsonNodeOrNull(jObject As JsonObject, targetPropertyName As String, logger As ILogger) As JsonNode
  overload: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull*
  nameWithType.vb: JsonNodeExtensions.GetPropertyJsonNodeOrNull(JsonObject, String, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull(System.Text.Json.Nodes.JsonObject, String, Microsoft.Extensions.Logging.ILogger)
  name.vb: GetPropertyJsonNodeOrNull(JsonObject, String, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  id: GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyJsonValueOrNull(JsonNode?, string)
  nameWithType: JsonNodeExtensions.GetPropertyJsonValueOrNull(JsonNode?, string)
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPropertyJsonValueOrNull
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 133
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Gets the <xref href="System.Text.Json.Nodes.JsonValue" data-throw-if-not-resolved="false"></xref> of the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    or defaults to null.
  remarks: >-
    This member will return <code>null</code> when the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    is not of:

    * <xref href="System.Text.Json.JsonValueKind.String" data-throw-if-not-resolved="false"></xref>

    * <xref href="System.Text.Json.JsonValueKind.Number" data-throw-if-not-resolved="false"></xref>

    * <xref href="System.Text.Json.JsonValueKind.True" data-throw-if-not-resolved="false"></xref>

    * <xref href="System.Text.Json.JsonValueKind.False" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static JsonValue? GetPropertyJsonValueOrNull(this JsonNode? node, string propertyName)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
    - id: propertyName
      type: System.String
      description: Name of the property.
    return:
      type: System.Text.Json.Nodes.JsonValue
    content.vb: Public Shared Function GetPropertyJsonValueOrNull(node As JsonNode, propertyName As String) As JsonValue
  overload: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull*
  nameWithType.vb: JsonNodeExtensions.GetPropertyJsonValueOrNull(JsonNode, String)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode, String)
  name.vb: GetPropertyJsonValueOrNull(JsonNode, String)
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyValue``1(System.Text.Json.Nodes.JsonNode,System.String)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.GetPropertyValue``1(System.Text.Json.Nodes.JsonNode,System.String)
  id: GetPropertyValue``1(System.Text.Json.Nodes.JsonNode,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: GetPropertyValue<T>(JsonNode?, string)
  nameWithType: JsonNodeExtensions.GetPropertyValue<T>(JsonNode?, string)
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyValue<T>(System.Text.Json.Nodes.JsonNode?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPropertyValue
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 149
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the property value of the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("Use `GetPropertyJsonArrayOrNull`, `GetPropertyJsonObjectOrNull` or `GetPropertyJsonValueOrNull` instead.")]

      public static (T? value, bool success) GetPropertyValue<T>(this JsonNode? node, string propertyName)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The node.
    - id: propertyName
      type: System.String
      description: Name of the property.
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.ValueTuple{{T},System.Boolean}
    content.vb: >-
      <Obsolete("Use `GetPropertyJsonArrayOrNull`, `GetPropertyJsonObjectOrNull` or `GetPropertyJsonValueOrNull` instead.")>

      Public Shared Function GetPropertyValue(Of T)(node As JsonNode, propertyName As String) As (value As T, success As Boolean)
  overload: Songhay.Extensions.JsonNodeExtensions.GetPropertyValue*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use `GetPropertyJsonArrayOrNull`, `GetPropertyJsonObjectOrNull` or `GetPropertyJsonValueOrNull` instead.
  nameWithType.vb: JsonNodeExtensions.GetPropertyValue(Of T)(JsonNode, String)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.GetPropertyValue(Of T)(System.Text.Json.Nodes.JsonNode, String)
  name.vb: GetPropertyValue(Of T)(JsonNode, String)
- uid: Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind(System.Text.Json.Nodes.JsonNode)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind(System.Text.Json.Nodes.JsonNode)
  id: GetJsonValueKind(System.Text.Json.Nodes.JsonNode)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: GetJsonValueKind(JsonNode?)
  nameWithType: JsonNodeExtensions.GetJsonValueKind(JsonNode?)
  fullName: Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind(System.Text.Json.Nodes.JsonNode?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetJsonValueKind
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 172
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the <xref href="System.Text.Json.JsonValueKind" data-throw-if-not-resolved="false"></xref> of the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>.
  remarks: This member is needed for .NET 6.0 and earlier.
  example: []
  syntax:
    content: >-
      [Obsolete("For .NET 8 and beyond use `JsonNode.GetValueKind()` instead.")]

      public static JsonValueKind GetJsonValueKind(this JsonNode? node)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The node.
    return:
      type: System.Text.Json.JsonValueKind
    content.vb: >-
      <Obsolete("For .NET 8 and beyond use `JsonNode.GetValueKind()` instead.")>

      Public Shared Function GetJsonValueKind(node As JsonNode) As JsonValueKind
  overload: Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: For .NET 8 and beyond use `JsonNode.GetValueKind()` instead.
  nameWithType.vb: JsonNodeExtensions.GetJsonValueKind(JsonNode)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind(System.Text.Json.Nodes.JsonNode)
  name.vb: GetJsonValueKind(JsonNode)
- uid: Songhay.Extensions.JsonNodeExtensions.HasProperty(System.Text.Json.Nodes.JsonNode,System.String)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.HasProperty(System.Text.Json.Nodes.JsonNode,System.String)
  id: HasProperty(System.Text.Json.Nodes.JsonNode,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: HasProperty(JsonNode?, string?)
  nameWithType: JsonNodeExtensions.HasProperty(JsonNode?, string?)
  fullName: Songhay.Extensions.JsonNodeExtensions.HasProperty(System.Text.Json.Nodes.JsonNode?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: HasProperty
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 189
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Returns <code>false</code> when the specified property name does not exist.
  example: []
  syntax:
    content: public static bool HasProperty(this JsonNode? node, string? propertyName)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>
    - id: propertyName
      type: System.String
      description: the property name
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasProperty(node As JsonNode, propertyName As String) As Boolean
  overload: Songhay.Extensions.JsonNodeExtensions.HasProperty*
  nameWithType.vb: JsonNodeExtensions.HasProperty(JsonNode, String)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.HasProperty(System.Text.Json.Nodes.JsonNode, String)
  name.vb: HasProperty(JsonNode, String)
- uid: Songhay.Extensions.JsonNodeExtensions.IsExpectedObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger,System.String[])
  commentId: M:Songhay.Extensions.JsonNodeExtensions.IsExpectedObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger,System.String[])
  id: IsExpectedObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger,System.String[])
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: IsExpectedObject(JsonNode?, ILogger, params string[])
  nameWithType: JsonNodeExtensions.IsExpectedObject(JsonNode?, ILogger, params string[])
  fullName: Songhay.Extensions.JsonNodeExtensions.IsExpectedObject(System.Text.Json.Nodes.JsonNode?, Microsoft.Extensions.Logging.ILogger, params string[])
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: IsExpectedObject
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 204
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Determines whether the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    is the expected <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool IsExpectedObject(this JsonNode? node, ILogger logger, params string[] properties)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The node.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: properties
      type: System.String[]
      description: The properties.
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsExpectedObject(node As JsonNode, logger As ILogger, ParamArray properties As String()) As Boolean
  overload: Songhay.Extensions.JsonNodeExtensions.IsExpectedObject*
  nameWithType.vb: JsonNodeExtensions.IsExpectedObject(JsonNode, ILogger, ParamArray String())
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.IsExpectedObject(System.Text.Json.Nodes.JsonNode, Microsoft.Extensions.Logging.ILogger, ParamArray String())
  name.vb: IsExpectedObject(JsonNode, ILogger, ParamArray String())
- uid: Songhay.Extensions.JsonNodeExtensions.ToJsonArray(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.ToJsonArray(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  id: ToJsonArray(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: ToJsonArray(JsonNode?, ILogger)
  nameWithType: JsonNodeExtensions.ToJsonArray(JsonNode?, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.ToJsonArray(System.Text.Json.Nodes.JsonNode?, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToJsonArray
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 239
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts to the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    to <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref> or logs failure and returns <code>null</code>.
  example: []
  syntax:
    content: public static JsonArray? ToJsonArray(this JsonNode? node, ILogger logger)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The node.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    return:
      type: System.Text.Json.Nodes.JsonArray
      description: ''
    content.vb: Public Shared Function ToJsonArray(node As JsonNode, logger As ILogger) As JsonArray
  overload: Songhay.Extensions.JsonNodeExtensions.ToJsonArray*
  nameWithType.vb: JsonNodeExtensions.ToJsonArray(JsonNode, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.ToJsonArray(System.Text.Json.Nodes.JsonNode, Microsoft.Extensions.Logging.ILogger)
  name.vb: ToJsonArray(JsonNode, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.ToJsonObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.ToJsonObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  id: ToJsonObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: ToJsonObject(JsonNode?, ILogger)
  nameWithType: JsonNodeExtensions.ToJsonObject(JsonNode?, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.ToJsonObject(System.Text.Json.Nodes.JsonNode?, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToJsonObject
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 264
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts to the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    to <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref> or logs failure and returns <code>null</code>.
  example: []
  syntax:
    content: public static JsonObject? ToJsonObject(this JsonNode? node, ILogger logger)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: The node.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    return:
      type: System.Text.Json.Nodes.JsonObject
    content.vb: Public Shared Function ToJsonObject(node As JsonNode, logger As ILogger) As JsonObject
  overload: Songhay.Extensions.JsonNodeExtensions.ToJsonObject*
  nameWithType.vb: JsonNodeExtensions.ToJsonObject(JsonNode, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.ToJsonObject(System.Text.Json.Nodes.JsonNode, Microsoft.Extensions.Logging.ILogger)
  name.vb: ToJsonObject(JsonNode, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  id: RemoveFromParent(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: RemoveFromParent(JsonNode?, ILogger)
  nameWithType: JsonNodeExtensions.RemoveFromParent(JsonNode?, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode?, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: RemoveFromParent
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 289
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Removes the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    when its parent is <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref> or <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void RemoveFromParent(this JsonNode? node, ILogger logger)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub RemoveFromParent(node As JsonNode, logger As ILogger)
  overload: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent*
  nameWithType.vb: JsonNodeExtensions.RemoveFromParent(JsonNode, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode, Microsoft.Extensions.Logging.ILogger)
  name.vb: RemoveFromParent(JsonNode, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  id: RemoveFromParent(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: RemoveFromParent(JsonNode?, string?, ILogger)
  nameWithType: JsonNodeExtensions.RemoveFromParent(JsonNode?, string?, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode?, string?, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: RemoveFromParent
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 298
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Removes the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    when its parent is <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref> or <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void RemoveFromParent(this JsonNode? node, string? propertyName, ILogger logger)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>
    - id: propertyName
      type: System.String
      description: the name of the property when the specified node is <xref href="System.Text.Json.JsonValueKind.Object" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub RemoveFromParent(node As JsonNode, propertyName As String, logger As ILogger)
  overload: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent*
  nameWithType.vb: JsonNodeExtensions.RemoveFromParent(JsonNode, String, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent(System.Text.Json.Nodes.JsonNode, String, Microsoft.Extensions.Logging.ILogger)
  name.vb: RemoveFromParent(JsonNode, String, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  id: RemoveProperty(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: RemoveProperty(JsonNode?, ILogger)
  nameWithType: JsonNodeExtensions.RemoveProperty(JsonNode?, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode?, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: RemoveProperty
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 345
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Removes the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    when its parent is <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref> or <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void RemoveProperty(this JsonNode? node, ILogger logger)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub RemoveProperty(node As JsonNode, logger As ILogger)
  overload: Songhay.Extensions.JsonNodeExtensions.RemoveProperty*
  nameWithType.vb: JsonNodeExtensions.RemoveProperty(JsonNode, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode, Microsoft.Extensions.Logging.ILogger)
  name.vb: RemoveProperty(JsonNode, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  id: RemoveProperty(System.Text.Json.Nodes.JsonNode,System.String,Microsoft.Extensions.Logging.ILogger)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: RemoveProperty(JsonNode?, string?, ILogger)
  nameWithType: JsonNodeExtensions.RemoveProperty(JsonNode?, string?, ILogger)
  fullName: Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode?, string?, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: RemoveProperty
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 356
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Removes the specified <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>

    with the specified property name

    when the node is <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>

    or <xref href="System.Text.Json.Nodes.JsonArray" data-throw-if-not-resolved="false"></xref> (array of <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref> with a property to remove).
  example: []
  syntax:
    content: public static void RemoveProperty(this JsonNode? node, string? propertyName, ILogger logger)
    parameters:
    - id: node
      type: System.Text.Json.Nodes.JsonNode
      description: the <xref href="System.Text.Json.Nodes.JsonNode" data-throw-if-not-resolved="false"></xref>
    - id: propertyName
      type: System.String
      description: the name of the property when the specified node is <xref href="System.Text.Json.JsonValueKind.Object" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub RemoveProperty(node As JsonNode, propertyName As String, logger As ILogger)
  overload: Songhay.Extensions.JsonNodeExtensions.RemoveProperty*
  nameWithType.vb: JsonNodeExtensions.RemoveProperty(JsonNode, String, ILogger)
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.RemoveProperty(System.Text.Json.Nodes.JsonNode, String, Microsoft.Extensions.Logging.ILogger)
  name.vb: RemoveProperty(JsonNode, String, ILogger)
- uid: Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed(System.Text.Json.Nodes.JsonObject,Microsoft.Extensions.Logging.ILogger,System.ValueTuple{System.String,System.String}[])
  commentId: M:Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed(System.Text.Json.Nodes.JsonObject,Microsoft.Extensions.Logging.ILogger,System.ValueTuple{System.String,System.String}[])
  id: WithPropertiesRenamed(System.Text.Json.Nodes.JsonObject,Microsoft.Extensions.Logging.ILogger,System.ValueTuple{System.String,System.String}[])
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonNodeExtensions
  langs:
  - csharp
  - vb
  name: WithPropertiesRenamed(JsonObject?, ILogger, params (string oldName, string newName)[])
  nameWithType: JsonNodeExtensions.WithPropertiesRenamed(JsonObject?, ILogger, params (string oldName, string newName)[])
  fullName: Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed(System.Text.Json.Nodes.JsonObject?, Microsoft.Extensions.Logging.ILogger, params (string oldName, string newName)[])
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonNodeExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: WithPropertiesRenamed
    path: ../SonghayCore/Extensions/JsonNodeExtensions.cs
    startLine: 395
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Returns the specified <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>

    with its properties renamed.
  example: []
  syntax:
    content: public static JsonObject? WithPropertiesRenamed(this JsonObject? documentData, ILogger logger, params (string oldName, string newName)[] operations)
    parameters:
    - id: documentData
      type: System.Text.Json.Nodes.JsonObject
      description: the <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref>
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: the <xref href="Microsoft.Extensions.Logging.ILogger" data-throw-if-not-resolved="false"></xref>
    - id: operations
      type: System.ValueTuple{System.String,System.String}[]
      description: specifies which <xref href="System.Text.Json.Nodes.JsonObject" data-throw-if-not-resolved="false"></xref> properties to rename
    return:
      type: System.Text.Json.Nodes.JsonObject
    content.vb: Public Shared Function WithPropertiesRenamed(documentData As JsonObject, logger As ILogger, ParamArray operations As (oldName As String, newName As String)()) As JsonObject
  overload: Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed*
  nameWithType.vb: JsonNodeExtensions.WithPropertiesRenamed(JsonObject, ILogger, ParamArray (oldName As String, newName As String)())
  fullName.vb: Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed(System.Text.Json.Nodes.JsonObject, Microsoft.Extensions.Logging.ILogger, ParamArray (oldName As String, newName As String)())
  name.vb: WithPropertiesRenamed(JsonObject, ILogger, ParamArray (oldName As String, newName As String)())
references:
- uid: System.Text.Json.Nodes.JsonNode
  commentId: T:System.Text.Json.Nodes.JsonNode
  parent: System.Text.Json.Nodes
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonnode
  name: JsonNode
  nameWithType: JsonNode
  fullName: System.Text.Json.Nodes.JsonNode
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Songhay.ILoggerUtility.AsInstanceOrNullLogger(Microsoft.Extensions.Logging.ILogger)
  commentId: M:Songhay.ILoggerUtility.AsInstanceOrNullLogger(Microsoft.Extensions.Logging.ILogger)
  isExternal: true
  href: Songhay.ILoggerUtility.html#Songhay_ILoggerUtility_AsInstanceOrNullLogger_Microsoft_Extensions_Logging_ILogger_
  name: AsInstanceOrNullLogger(ILogger)
  nameWithType: ILoggerUtility.AsInstanceOrNullLogger(ILogger)
  fullName: Songhay.ILoggerUtility.AsInstanceOrNullLogger(Microsoft.Extensions.Logging.ILogger)
  spec.csharp:
  - uid: Songhay.ILoggerUtility.AsInstanceOrNullLogger(Microsoft.Extensions.Logging.ILogger)
    name: AsInstanceOrNullLogger
    href: Songhay.ILoggerUtility.html#Songhay_ILoggerUtility_AsInstanceOrNullLogger_Microsoft_Extensions_Logging_ILogger_
  - name: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: )
  spec.vb:
  - uid: Songhay.ILoggerUtility.AsInstanceOrNullLogger(Microsoft.Extensions.Logging.ILogger)
    name: AsInstanceOrNullLogger
    href: Songhay.ILoggerUtility.html#Songhay_ILoggerUtility_AsInstanceOrNullLogger_Microsoft_Extensions_Logging_ILogger_
  - name: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  - name: )
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Text.Json.Nodes
  commentId: N:System.Text.Json.Nodes
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json.Nodes
  nameWithType: System.Text.Json.Nodes
  fullName: System.Text.Json.Nodes
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  - name: .
  - uid: System.Text.Json.Nodes
    name: Nodes
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  - name: .
  - uid: System.Text.Json.Nodes
    name: Nodes
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.Json.Nodes.JsonObject
  commentId: T:System.Text.Json.Nodes.JsonObject
  parent: System.Text.Json.Nodes
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonobject
  name: JsonObject
  nameWithType: JsonObject
  fullName: System.Text.Json.Nodes.JsonObject
- uid: Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_DisplayTopProperties_System_Text_Json_Nodes_JsonObject_System_Int32_
  name: DisplayTopProperties
  nameWithType: JsonNodeExtensions.DisplayTopProperties
  fullName: Songhay.Extensions.JsonNodeExtensions.DisplayTopProperties
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Text.Json.Nodes.JsonValue
  commentId: T:System.Text.Json.Nodes.JsonValue
  parent: System.Text.Json.Nodes
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonvalue
  name: JsonValue
  nameWithType: JsonValue
  fullName: System.Text.Json.Nodes.JsonValue
- uid: System.Text.Json.JsonValueKind.Array
  commentId: F:System.Text.Json.JsonValueKind.Array
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind#system-text-json-jsonvaluekind-array
  name: Array
  nameWithType: JsonValueKind.Array
  fullName: System.Text.Json.JsonValueKind.Array
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_GetPropertyJsonArrayOrNull_System_Text_Json_Nodes_JsonNode_System_String_
  name: GetPropertyJsonArrayOrNull
  nameWithType: JsonNodeExtensions.GetPropertyJsonArrayOrNull
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull
- uid: System.Text.Json.Nodes.JsonArray
  commentId: T:System.Text.Json.Nodes.JsonArray
  parent: System.Text.Json.Nodes
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.nodes.jsonarray
  name: JsonArray
  nameWithType: JsonArray
  fullName: System.Text.Json.Nodes.JsonArray
- uid: System.Text.Json.JsonValueKind.Object
  commentId: F:System.Text.Json.JsonValueKind.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind#system-text-json-jsonvaluekind-object
  name: Object
  nameWithType: JsonValueKind.Object
  fullName: System.Text.Json.JsonValueKind.Object
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_GetPropertyJsonObjectOrNull_System_Text_Json_Nodes_JsonNode_System_String_
  name: GetPropertyJsonObjectOrNull
  nameWithType: JsonNodeExtensions.GetPropertyJsonObjectOrNull
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_GetPropertyJsonNodeOrNull_System_Text_Json_Nodes_JsonObject_System_String_Microsoft_Extensions_Logging_ILogger_
  name: GetPropertyJsonNodeOrNull
  nameWithType: JsonNodeExtensions.GetPropertyJsonNodeOrNull
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonNodeOrNull
- uid: System.Text.Json.JsonValueKind.String
  commentId: F:System.Text.Json.JsonValueKind.String
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind#system-text-json-jsonvaluekind-string
  name: String
  nameWithType: JsonValueKind.String
  fullName: System.Text.Json.JsonValueKind.String
- uid: System.Text.Json.JsonValueKind.Number
  commentId: F:System.Text.Json.JsonValueKind.Number
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind#system-text-json-jsonvaluekind-number
  name: Number
  nameWithType: JsonValueKind.Number
  fullName: System.Text.Json.JsonValueKind.Number
- uid: System.Text.Json.JsonValueKind.True
  commentId: F:System.Text.Json.JsonValueKind.True
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind#system-text-json-jsonvaluekind-true
  name: "True"
  nameWithType: JsonValueKind.True
  fullName: System.Text.Json.JsonValueKind.True
- uid: System.Text.Json.JsonValueKind.False
  commentId: F:System.Text.Json.JsonValueKind.False
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind#system-text-json-jsonvaluekind-false
  name: "False"
  nameWithType: JsonValueKind.False
  fullName: System.Text.Json.JsonValueKind.False
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_GetPropertyJsonValueOrNull_System_Text_Json_Nodes_JsonNode_System_String_
  name: GetPropertyJsonValueOrNull
  nameWithType: JsonNodeExtensions.GetPropertyJsonValueOrNull
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull
- uid: Songhay.Extensions.JsonNodeExtensions.GetPropertyValue*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.GetPropertyValue
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_GetPropertyValue__1_System_Text_Json_Nodes_JsonNode_System_String_
  name: GetPropertyValue
  nameWithType: JsonNodeExtensions.GetPropertyValue
  fullName: Songhay.Extensions.JsonNodeExtensions.GetPropertyValue
- uid: System.ValueTuple{{T},System.Boolean}
  commentId: T:System.ValueTuple{``0,System.Boolean}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.boolean-.value
  name: (T value, bool success)
  nameWithType: (T value, bool success)
  fullName: (T value, bool success)
  nameWithType.vb: (value As T, success As Boolean)
  fullName.vb: (value As T, success As Boolean)
  name.vb: (value As T, success As Boolean)
  spec.csharp:
  - name: (
  - name: T
  - name: " "
  - uid: System.ValueTuple{``0,System.Boolean}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.boolean-.value
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{``0,System.Boolean}.success
    name: success
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.boolean-.success
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{``0,System.Boolean}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.boolean-.value
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.ValueTuple{``0,System.Boolean}.success
    name: success
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple---0,system.boolean-.success
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Text.Json.JsonValueKind
  commentId: T:System.Text.Json.JsonValueKind
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonvaluekind
  name: JsonValueKind
  nameWithType: JsonValueKind
  fullName: System.Text.Json.JsonValueKind
- uid: Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_GetJsonValueKind_System_Text_Json_Nodes_JsonNode_
  name: GetJsonValueKind
  nameWithType: JsonNodeExtensions.GetJsonValueKind
  fullName: Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Songhay.Extensions.JsonNodeExtensions.HasProperty*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.HasProperty
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_HasProperty_System_Text_Json_Nodes_JsonNode_System_String_
  name: HasProperty
  nameWithType: JsonNodeExtensions.HasProperty
  fullName: Songhay.Extensions.JsonNodeExtensions.HasProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.Extensions.JsonNodeExtensions.IsExpectedObject*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.IsExpectedObject
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_IsExpectedObject_System_Text_Json_Nodes_JsonNode_Microsoft_Extensions_Logging_ILogger_System_String___
  name: IsExpectedObject
  nameWithType: JsonNodeExtensions.IsExpectedObject
  fullName: Songhay.Extensions.JsonNodeExtensions.IsExpectedObject
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Songhay.Extensions.JsonNodeExtensions.ToJsonArray*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.ToJsonArray
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_ToJsonArray_System_Text_Json_Nodes_JsonNode_Microsoft_Extensions_Logging_ILogger_
  name: ToJsonArray
  nameWithType: JsonNodeExtensions.ToJsonArray
  fullName: Songhay.Extensions.JsonNodeExtensions.ToJsonArray
- uid: Songhay.Extensions.JsonNodeExtensions.ToJsonObject*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.ToJsonObject
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_ToJsonObject_System_Text_Json_Nodes_JsonNode_Microsoft_Extensions_Logging_ILogger_
  name: ToJsonObject
  nameWithType: JsonNodeExtensions.ToJsonObject
  fullName: Songhay.Extensions.JsonNodeExtensions.ToJsonObject
- uid: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.RemoveFromParent
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_RemoveFromParent_System_Text_Json_Nodes_JsonNode_Microsoft_Extensions_Logging_ILogger_
  name: RemoveFromParent
  nameWithType: JsonNodeExtensions.RemoveFromParent
  fullName: Songhay.Extensions.JsonNodeExtensions.RemoveFromParent
- uid: Songhay.Extensions.JsonNodeExtensions.RemoveProperty*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.RemoveProperty
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_RemoveProperty_System_Text_Json_Nodes_JsonNode_Microsoft_Extensions_Logging_ILogger_
  name: RemoveProperty
  nameWithType: JsonNodeExtensions.RemoveProperty
  fullName: Songhay.Extensions.JsonNodeExtensions.RemoveProperty
- uid: Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed*
  commentId: Overload:Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed
  href: Songhay.Extensions.JsonNodeExtensions.html#Songhay_Extensions_JsonNodeExtensions_WithPropertiesRenamed_System_Text_Json_Nodes_JsonObject_Microsoft_Extensions_Logging_ILogger_System_ValueTuple_System_String_System_String____
  name: WithPropertiesRenamed
  nameWithType: JsonNodeExtensions.WithPropertiesRenamed
  fullName: Songhay.Extensions.JsonNodeExtensions.WithPropertiesRenamed
- uid: System.ValueTuple{System.String,System.String}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: (string oldName, string newName)[]
  nameWithType: (string oldName, string newName)[]
  fullName: (string oldName, string newName)[]
  nameWithType.vb: (oldName As String, newName As String)()
  fullName.vb: (oldName As String, newName As String)()
  name.vb: (oldName As String, newName As String)()
  spec.csharp:
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.oldName
    name: oldName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.oldname
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.newName
    name: newName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.newname
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.oldName
    name: oldName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.oldname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.newName
    name: newName
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.newname
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: (
  - name: )
