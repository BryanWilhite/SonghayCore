### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.JsonElementExtensions
  commentId: T:Songhay.Extensions.JsonElementExtensions
  id: JsonElementExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.JsonElementExtensions.DisplayTopProperties(System.Text.Json.JsonElement,System.Int32)
  - Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Nullable{System.Text.Json.JsonElement},System.String)
  - Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement,System.String)
  - Songhay.Extensions.JsonElementExtensions.HasProperty(System.Nullable{System.Text.Json.JsonElement},System.String)
  - Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement,System.String)
  - Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Nullable{System.Text.Json.JsonElement},Microsoft.Extensions.Logging.ILogger,System.String[])
  - Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement,Microsoft.Extensions.Logging.ILogger,System.String[])
  - Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
  - Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement,System.Boolean)
  - Songhay.Extensions.JsonElementExtensions.ToByte(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToByte(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToDouble(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToDouble(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToGuid(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToGuid(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToInt(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToInt(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToLong(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToLong(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection``1(System.Nullable{System.Text.Json.JsonElement},System.Func{System.Text.Json.JsonElement,``0})
  - Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection``1(System.Text.Json.JsonElement,System.Func{System.Text.Json.JsonElement,``0})
  - Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
  - Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Nullable{System.Text.Json.JsonElement})
  - Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Text.Json.JsonElement)
  langs:
  - csharp
  - vb
  name: JsonElementExtensions
  nameWithType: JsonElementExtensions
  fullName: Songhay.Extensions.JsonElementExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: JsonElementExtensions
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 5
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extensions of <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class JsonElementExtensions
    content.vb: Public Module JsonElementExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.JsonElementExtensions.DisplayTopProperties(System.Text.Json.JsonElement,System.Int32)
  commentId: M:Songhay.Extensions.JsonElementExtensions.DisplayTopProperties(System.Text.Json.JsonElement,System.Int32)
  id: DisplayTopProperties(System.Text.Json.JsonElement,System.Int32)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: DisplayTopProperties(JsonElement, int)
  nameWithType: JsonElementExtensions.DisplayTopProperties(JsonElement, int)
  fullName: Songhay.Extensions.JsonElementExtensions.DisplayTopProperties(System.Text.Json.JsonElement, int)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DisplayTopProperties
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 13
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Displays top-level <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> properties

    without recursion.
  example: []
  syntax:
    content: public static string DisplayTopProperties(this JsonElement element, int truncationLength = 16)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>
    - id: truncationLength
      type: System.Int32
      description: the number of characters to display for each property
    return:
      type: System.String
    content.vb: Public Shared Function DisplayTopProperties(element As JsonElement, truncationLength As Integer = 16) As String
  overload: Songhay.Extensions.JsonElementExtensions.DisplayTopProperties*
  nameWithType.vb: JsonElementExtensions.DisplayTopProperties(JsonElement, Integer)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.DisplayTopProperties(System.Text.Json.JsonElement, Integer)
  name.vb: DisplayTopProperties(JsonElement, Integer)
- uid: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Nullable{System.Text.Json.JsonElement},System.String)
  commentId: M:Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Nullable{System.Text.Json.JsonElement},System.String)
  id: GetJsonPropertyOrNull(System.Nullable{System.Text.Json.JsonElement},System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: GetJsonPropertyOrNull(JsonElement?, string?)
  nameWithType: JsonElementExtensions.GetJsonPropertyOrNull(JsonElement?, string?)
  fullName: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetJsonPropertyOrNull
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 68
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Tries to return the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> property

    of the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static JsonElement? GetJsonPropertyOrNull(this JsonElement? elementOrNull, string? elementName)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    - id: elementName
      type: System.String
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> name.
    return:
      type: System.Nullable{System.Text.Json.JsonElement}
    content.vb: Public Shared Function GetJsonPropertyOrNull(elementOrNull As JsonElement?, elementName As String) As JsonElement?
  overload: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull*
  nameWithType.vb: JsonElementExtensions.GetJsonPropertyOrNull(JsonElement?, String)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement?, String)
  name.vb: GetJsonPropertyOrNull(JsonElement?, String)
- uid: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement,System.String)
  commentId: M:Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement,System.String)
  id: GetJsonPropertyOrNull(System.Text.Json.JsonElement,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: GetJsonPropertyOrNull(JsonElement, string?)
  nameWithType: JsonElementExtensions.GetJsonPropertyOrNull(JsonElement, string?)
  fullName: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetJsonPropertyOrNull
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 77
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Tries to return the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> property

    of the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> object.
  example: []
  syntax:
    content: public static JsonElement? GetJsonPropertyOrNull(this JsonElement element, string? elementName)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    - id: elementName
      type: System.String
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> name.
    return:
      type: System.Nullable{System.Text.Json.JsonElement}
    content.vb: Public Shared Function GetJsonPropertyOrNull(element As JsonElement, elementName As String) As JsonElement?
  overload: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull*
  nameWithType.vb: JsonElementExtensions.GetJsonPropertyOrNull(JsonElement, String)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement, String)
  name.vb: GetJsonPropertyOrNull(JsonElement, String)
- uid: Songhay.Extensions.JsonElementExtensions.HasProperty(System.Nullable{System.Text.Json.JsonElement},System.String)
  commentId: M:Songhay.Extensions.JsonElementExtensions.HasProperty(System.Nullable{System.Text.Json.JsonElement},System.String)
  id: HasProperty(System.Nullable{System.Text.Json.JsonElement},System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: HasProperty(JsonElement?, string?)
  nameWithType: JsonElementExtensions.HasProperty(JsonElement?, string?)
  fullName: Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: HasProperty
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 92
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Returns <code>false</code> when the specified property name does not exist.
  example: []
  syntax:
    content: public static bool HasProperty(this JsonElement? elementOrNull, string? propertyName)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>
    - id: propertyName
      type: System.String
      description: the property name
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasProperty(elementOrNull As JsonElement?, propertyName As String) As Boolean
  overload: Songhay.Extensions.JsonElementExtensions.HasProperty*
  nameWithType.vb: JsonElementExtensions.HasProperty(JsonElement?, String)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement?, String)
  name.vb: HasProperty(JsonElement?, String)
- uid: Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement,System.String)
  commentId: M:Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement,System.String)
  id: HasProperty(System.Text.Json.JsonElement,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: HasProperty(JsonElement, string?)
  nameWithType: JsonElementExtensions.HasProperty(JsonElement, string?)
  fullName: Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: HasProperty
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 100
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Returns <code>false</code> when the specified property name does not exist.
  example: []
  syntax:
    content: public static bool HasProperty(this JsonElement element, string? propertyName)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: the <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>
    - id: propertyName
      type: System.String
      description: the property name
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasProperty(element As JsonElement, propertyName As String) As Boolean
  overload: Songhay.Extensions.JsonElementExtensions.HasProperty*
  nameWithType.vb: JsonElementExtensions.HasProperty(JsonElement, String)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.HasProperty(System.Text.Json.JsonElement, String)
  name.vb: HasProperty(JsonElement, String)
- uid: Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Nullable{System.Text.Json.JsonElement},Microsoft.Extensions.Logging.ILogger,System.String[])
  commentId: M:Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Nullable{System.Text.Json.JsonElement},Microsoft.Extensions.Logging.ILogger,System.String[])
  id: IsExpectedObject(System.Nullable{System.Text.Json.JsonElement},Microsoft.Extensions.Logging.ILogger,System.String[])
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: IsExpectedObject(JsonElement?, ILogger, params string[])
  nameWithType: JsonElementExtensions.IsExpectedObject(JsonElement?, ILogger, params string[])
  fullName: Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement?, Microsoft.Extensions.Logging.ILogger, params string[])
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: IsExpectedObject
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 109
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Determines whether the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>

    has the expected properties.
  example: []
  syntax:
    content: public static bool IsExpectedObject(this JsonElement? elementOrNull, ILogger logger, params string[] properties)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The node.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: properties
      type: System.String[]
      description: The properties.
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsExpectedObject(elementOrNull As JsonElement?, logger As ILogger, ParamArray properties As String()) As Boolean
  overload: Songhay.Extensions.JsonElementExtensions.IsExpectedObject*
  nameWithType.vb: JsonElementExtensions.IsExpectedObject(JsonElement?, ILogger, ParamArray String())
  fullName.vb: Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement?, Microsoft.Extensions.Logging.ILogger, ParamArray String())
  name.vb: IsExpectedObject(JsonElement?, ILogger, ParamArray String())
- uid: Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement,Microsoft.Extensions.Logging.ILogger,System.String[])
  commentId: M:Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement,Microsoft.Extensions.Logging.ILogger,System.String[])
  id: IsExpectedObject(System.Text.Json.JsonElement,Microsoft.Extensions.Logging.ILogger,System.String[])
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: IsExpectedObject(JsonElement, ILogger, params string[])
  nameWithType: JsonElementExtensions.IsExpectedObject(JsonElement, ILogger, params string[])
  fullName: Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement, Microsoft.Extensions.Logging.ILogger, params string[])
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: IsExpectedObject
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 119
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Determines whether the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>

    has the expected properties.
  example: []
  syntax:
    content: public static bool IsExpectedObject(this JsonElement element, ILogger logger, params string[] properties)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The node.
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger.
    - id: properties
      type: System.String[]
      description: The properties.
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsExpectedObject(element As JsonElement, logger As ILogger, ParamArray properties As String()) As Boolean
  overload: Songhay.Extensions.JsonElementExtensions.IsExpectedObject*
  nameWithType.vb: JsonElementExtensions.IsExpectedObject(JsonElement, ILogger, ParamArray String())
  fullName.vb: Songhay.Extensions.JsonElementExtensions.IsExpectedObject(System.Text.Json.JsonElement, Microsoft.Extensions.Logging.ILogger, ParamArray String())
  name.vb: IsExpectedObject(JsonElement, ILogger, ParamArray String())
- uid: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
  id: ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToBoolean(JsonElement?, bool)
  nameWithType: JsonElementExtensions.ToBoolean(JsonElement?, bool)
  fullName: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToBoolean
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 144
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool? ToBoolean(this JsonElement? elementOrNull, bool supportBitStrings)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    - id: supportBitStrings
      type: System.Boolean
      description: When <code>true</code>, support "1" and "0" as Boolean strings.
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Function ToBoolean(elementOrNull As JsonElement?, supportBitStrings As Boolean) As Boolean?
  overload: Songhay.Extensions.JsonElementExtensions.ToBoolean*
  nameWithType.vb: JsonElementExtensions.ToBoolean(JsonElement?, Boolean)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement?, Boolean)
  name.vb: ToBoolean(JsonElement?, Boolean)
- uid: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement,System.Boolean)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement,System.Boolean)
  id: ToBoolean(System.Text.Json.JsonElement,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToBoolean(JsonElement, bool)
  nameWithType: JsonElementExtensions.ToBoolean(JsonElement, bool)
  fullName: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToBoolean
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 151
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool? ToBoolean(this JsonElement element, bool supportBitStrings)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    - id: supportBitStrings
      type: System.Boolean
      description: When <code>true</code>, support "1" and "0" as Boolean strings.
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Shared Function ToBoolean(element As JsonElement, supportBitStrings As Boolean) As Boolean?
  overload: Songhay.Extensions.JsonElementExtensions.ToBoolean*
  nameWithType.vb: JsonElementExtensions.ToBoolean(JsonElement, Boolean)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement, Boolean)
  name.vb: ToBoolean(JsonElement, Boolean)
- uid: Songhay.Extensions.JsonElementExtensions.ToByte(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToByte(System.Nullable{System.Text.Json.JsonElement})
  id: ToByte(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToByte(JsonElement?)
  nameWithType: JsonElementExtensions.ToByte(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToByte(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToByte
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 164
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static byte? ToByte(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Byte}
    content.vb: Public Shared Function ToByte(elementOrNull As JsonElement?) As Byte?
  overload: Songhay.Extensions.JsonElementExtensions.ToByte*
- uid: Songhay.Extensions.JsonElementExtensions.ToByte(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToByte(System.Text.Json.JsonElement)
  id: ToByte(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToByte(JsonElement)
  nameWithType: JsonElementExtensions.ToByte(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToByte(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToByte
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 170
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Byte" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static byte? ToByte(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Byte}
    content.vb: Public Shared Function ToByte(element As JsonElement) As Byte?
  overload: Songhay.Extensions.JsonElementExtensions.ToByte*
- uid: Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Nullable{System.Text.Json.JsonElement})
  id: ToDateTime(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToDateTime(JsonElement?)
  nameWithType: JsonElementExtensions.ToDateTime(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToDateTime
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 182
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DateTime? ToDateTime(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function ToDateTime(elementOrNull As JsonElement?) As Date?
  overload: Songhay.Extensions.JsonElementExtensions.ToDateTime*
- uid: Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Text.Json.JsonElement)
  id: ToDateTime(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToDateTime(JsonElement)
  nameWithType: JsonElementExtensions.ToDateTime(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToDateTime
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 188
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DateTime? ToDateTime(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Shared Function ToDateTime(element As JsonElement) As Date?
  overload: Songhay.Extensions.JsonElementExtensions.ToDateTime*
- uid: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Nullable{System.Text.Json.JsonElement})
  id: ToDecimal(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToDecimal(JsonElement?)
  nameWithType: JsonElementExtensions.ToDecimal(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToDecimal
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 194
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static decimal? ToDecimal(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function ToDecimal(elementOrNull As JsonElement?) As Decimal?
  overload: Songhay.Extensions.JsonElementExtensions.ToDecimal*
- uid: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  id: ToDecimal(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToDecimal(JsonElement)
  nameWithType: JsonElementExtensions.ToDecimal(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToDecimal
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 200
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Decimal" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static decimal? ToDecimal(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Decimal}
    content.vb: Public Shared Function ToDecimal(element As JsonElement) As Decimal?
  overload: Songhay.Extensions.JsonElementExtensions.ToDecimal*
- uid: Songhay.Extensions.JsonElementExtensions.ToDouble(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDouble(System.Nullable{System.Text.Json.JsonElement})
  id: ToDouble(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToDouble(JsonElement?)
  nameWithType: JsonElementExtensions.ToDouble(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDouble(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToDouble
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 206
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Boolean" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static double? ToDouble(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Function ToDouble(elementOrNull As JsonElement?) As Double?
  overload: Songhay.Extensions.JsonElementExtensions.ToDouble*
- uid: Songhay.Extensions.JsonElementExtensions.ToDouble(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDouble(System.Text.Json.JsonElement)
  id: ToDouble(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToDouble(JsonElement)
  nameWithType: JsonElementExtensions.ToDouble(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDouble(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToDouble
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 212
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Double" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static double? ToDouble(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Shared Function ToDouble(element As JsonElement) As Double?
  overload: Songhay.Extensions.JsonElementExtensions.ToDouble*
- uid: Songhay.Extensions.JsonElementExtensions.ToGuid(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToGuid(System.Nullable{System.Text.Json.JsonElement})
  id: ToGuid(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToGuid(JsonElement?)
  nameWithType: JsonElementExtensions.ToGuid(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToGuid(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToGuid
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 218
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Guid? ToGuid(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public Shared Function ToGuid(elementOrNull As JsonElement?) As Guid?
  overload: Songhay.Extensions.JsonElementExtensions.ToGuid*
- uid: Songhay.Extensions.JsonElementExtensions.ToGuid(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToGuid(System.Text.Json.JsonElement)
  id: ToGuid(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToGuid(JsonElement)
  nameWithType: JsonElementExtensions.ToGuid(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToGuid(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToGuid
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 224
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Guid? ToGuid(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public Shared Function ToGuid(element As JsonElement) As Guid?
  overload: Songhay.Extensions.JsonElementExtensions.ToGuid*
- uid: Songhay.Extensions.JsonElementExtensions.ToInt(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToInt(System.Nullable{System.Text.Json.JsonElement})
  id: ToInt(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToInt(JsonElement?)
  nameWithType: JsonElementExtensions.ToInt(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToInt(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToInt
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 236
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static int? ToInt(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function ToInt(elementOrNull As JsonElement?) As Integer?
  overload: Songhay.Extensions.JsonElementExtensions.ToInt*
- uid: Songhay.Extensions.JsonElementExtensions.ToInt(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToInt(System.Text.Json.JsonElement)
  id: ToInt(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToInt(JsonElement)
  nameWithType: JsonElementExtensions.ToInt(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToInt(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToInt
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 242
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static int? ToInt(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Shared Function ToInt(element As JsonElement) As Integer?
  overload: Songhay.Extensions.JsonElementExtensions.ToInt*
- uid: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Nullable{System.Text.Json.JsonElement})
  id: ToJsonElementArray(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToJsonElementArray(JsonElement?)
  nameWithType: JsonElementExtensions.ToJsonElementArray(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToJsonElementArray
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 254
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Enumerates the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> array
  example: []
  syntax:
    content: public static JsonElement[] ToJsonElementArray(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Text.Json.JsonElement[]
    content.vb: Public Shared Function ToJsonElementArray(elementOrNull As JsonElement?) As JsonElement()
  overload: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray*
- uid: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Text.Json.JsonElement)
  id: ToJsonElementArray(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToJsonElementArray(JsonElement)
  nameWithType: JsonElementExtensions.ToJsonElementArray(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToJsonElementArray
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 260
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Enumerates the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> array
  example: []
  syntax:
    content: public static JsonElement[] ToJsonElementArray(this JsonElement elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Text.Json.JsonElement[]
    content.vb: Public Shared Function ToJsonElementArray(elementOrNull As JsonElement) As JsonElement()
  overload: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray*
- uid: Songhay.Extensions.JsonElementExtensions.ToLong(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToLong(System.Nullable{System.Text.Json.JsonElement})
  id: ToLong(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToLong(JsonElement?)
  nameWithType: JsonElementExtensions.ToLong(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToLong(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToLong
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 271
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static long? ToLong(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Function ToLong(elementOrNull As JsonElement?) As Long?
  overload: Songhay.Extensions.JsonElementExtensions.ToLong*
- uid: Songhay.Extensions.JsonElementExtensions.ToLong(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToLong(System.Text.Json.JsonElement)
  id: ToLong(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToLong(JsonElement)
  nameWithType: JsonElementExtensions.ToLong(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToLong(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToLong
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 277
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.Int64" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static long? ToLong(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Nullable{System.Int64}
    content.vb: Public Shared Function ToLong(element As JsonElement) As Long?
  overload: Songhay.Extensions.JsonElementExtensions.ToLong*
- uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
  id: ToObject``1(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToObject<TObject>(JsonElement?)
  nameWithType: JsonElementExtensions.ToObject<TObject>(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToObject<TObject>(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToObject
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 293
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>

    to <code>TObject</code>.
  remarks: To return value types, use <xref href="Songhay.Extensions.JsonElementExtensions.ToScalarValue%60%601(System.Nullable%7bSystem.Text.Json.JsonElement%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static TObject? ToObject<TObject>(this JsonElement? elementOrNull) where TObject : class'
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TObject
      description: the type to convert to
    return:
      type: '{TObject}'
    content.vb: Public Shared Function ToObject(Of TObject As Class)(elementOrNull As JsonElement?) As TObject
  overload: Songhay.Extensions.JsonElementExtensions.ToObject*
  nameWithType.vb: JsonElementExtensions.ToObject(Of TObject)(JsonElement?)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToObject(Of TObject)(System.Text.Json.JsonElement?)
  name.vb: ToObject(Of TObject)(JsonElement?)
- uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
  id: ToObject``1(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToObject<TObject>(JsonElement)
  nameWithType: JsonElementExtensions.ToObject<TObject>(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToObject<TObject>(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToObject
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 305
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>

    to <code>TObject</code>.
  remarks: To return value types, use <xref href="Songhay.Extensions.JsonElementExtensions.ToScalarValue%60%601(System.Text.Json.JsonElement)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static TObject? ToObject<TObject>(this JsonElement element) where TObject : class'
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: TObject
      description: the type to convert to
    return:
      type: '{TObject}'
    content.vb: Public Shared Function ToObject(Of TObject As Class)(element As JsonElement) As TObject
  overload: Songhay.Extensions.JsonElementExtensions.ToObject*
  nameWithType.vb: JsonElementExtensions.ToObject(Of TObject)(JsonElement)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToObject(Of TObject)(System.Text.Json.JsonElement)
  name.vb: ToObject(Of TObject)(JsonElement)
- uid: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Nullable{System.Text.Json.JsonElement})
  id: ToReadOnlyCollection(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnlyCollection(JsonElement?)
  nameWithType: JsonElementExtensions.ToReadOnlyCollection(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToReadOnlyCollection
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 319
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> array

    into a collection of string values.
  example: []
  syntax:
    content: public static IReadOnlyCollection<string?> ToReadOnlyCollection(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: Public Shared Function ToReadOnlyCollection(elementOrNull As JsonElement?) As IReadOnlyCollection(Of String)
  overload: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection*
- uid: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Text.Json.JsonElement)
  id: ToReadOnlyCollection(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnlyCollection(JsonElement)
  nameWithType: JsonElementExtensions.ToReadOnlyCollection(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToReadOnlyCollection
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 326
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> array

    into a collection of string values.
  example: []
  syntax:
    content: public static IReadOnlyCollection<string?> ToReadOnlyCollection(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
    content.vb: Public Shared Function ToReadOnlyCollection(element As JsonElement) As IReadOnlyCollection(Of String)
  overload: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection*
- uid: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection``1(System.Nullable{System.Text.Json.JsonElement},System.Func{System.Text.Json.JsonElement,``0})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection``1(System.Nullable{System.Text.Json.JsonElement},System.Func{System.Text.Json.JsonElement,``0})
  id: ToReadOnlyCollection``1(System.Nullable{System.Text.Json.JsonElement},System.Func{System.Text.Json.JsonElement,``0})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnlyCollection<T>(JsonElement?, Func<JsonElement, T?>)
  nameWithType: JsonElementExtensions.ToReadOnlyCollection<T>(JsonElement?, Func<JsonElement, T?>)
  fullName: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection<T>(System.Text.Json.JsonElement?, System.Func<System.Text.Json.JsonElement, T?>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToReadOnlyCollection
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 340
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> array

    into a collection of type <code>T</code>

    with the specified converter.
  example: []
  syntax:
    content: public static IReadOnlyCollection<T?> ToReadOnlyCollection<T>(this JsonElement? elementOrNull, Func<JsonElement, T?> converter)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    - id: converter
      type: System.Func{System.Text.Json.JsonElement,{T}}
      description: the specified converter
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IReadOnlyCollection{{T}}
    content.vb: Public Shared Function ToReadOnlyCollection(Of T)(elementOrNull As JsonElement?, converter As Func(Of JsonElement, T)) As IReadOnlyCollection(Of T)
  overload: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection*
  nameWithType.vb: JsonElementExtensions.ToReadOnlyCollection(Of T)(JsonElement?, Func(Of JsonElement, T))
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(Of T)(System.Text.Json.JsonElement?, System.Func(Of System.Text.Json.JsonElement, T))
  name.vb: ToReadOnlyCollection(Of T)(JsonElement?, Func(Of JsonElement, T))
- uid: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection``1(System.Text.Json.JsonElement,System.Func{System.Text.Json.JsonElement,``0})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection``1(System.Text.Json.JsonElement,System.Func{System.Text.Json.JsonElement,``0})
  id: ToReadOnlyCollection``1(System.Text.Json.JsonElement,System.Func{System.Text.Json.JsonElement,``0})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToReadOnlyCollection<T>(JsonElement, Func<JsonElement, T?>)
  nameWithType: JsonElementExtensions.ToReadOnlyCollection<T>(JsonElement, Func<JsonElement, T?>)
  fullName: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection<T>(System.Text.Json.JsonElement, System.Func<System.Text.Json.JsonElement, T?>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToReadOnlyCollection
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 349
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> array

    into a collection of type <code>T</code>

    with the specified converter.
  example: []
  syntax:
    content: public static IReadOnlyCollection<T?> ToReadOnlyCollection<T>(this JsonElement element, Func<JsonElement, T?> converter)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    - id: converter
      type: System.Func{System.Text.Json.JsonElement,{T}}
      description: the specified converter
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IReadOnlyCollection{{T}}
    content.vb: Public Shared Function ToReadOnlyCollection(Of T)(element As JsonElement, converter As Func(Of JsonElement, T)) As IReadOnlyCollection(Of T)
  overload: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection*
  nameWithType.vb: JsonElementExtensions.ToReadOnlyCollection(Of T)(JsonElement, Func(Of JsonElement, T))
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(Of T)(System.Text.Json.JsonElement, System.Func(Of System.Text.Json.JsonElement, T))
  name.vb: ToReadOnlyCollection(Of T)(JsonElement, Func(Of JsonElement, T))
- uid: Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Nullable{System.Text.Json.JsonElement})
  id: ToStringValue(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToStringValue(JsonElement?)
  nameWithType: JsonElementExtensions.ToStringValue(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToStringValue
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 360
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string? ToStringValue(this JsonElement? elementOrNull)
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
    content.vb: Public Shared Function ToStringValue(elementOrNull As JsonElement?) As String
  overload: Songhay.Extensions.JsonElementExtensions.ToStringValue*
- uid: Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Text.Json.JsonElement)
  id: ToStringValue(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToStringValue(JsonElement)
  nameWithType: JsonElementExtensions.ToStringValue(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToStringValue
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 366
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string? ToStringValue(this JsonElement element)
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
    content.vb: Public Shared Function ToStringValue(element As JsonElement) As String
  overload: Songhay.Extensions.JsonElementExtensions.ToStringValue*
- uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
  id: ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToScalarValue<T>(JsonElement?)
  nameWithType: JsonElementExtensions.ToScalarValue<T>(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToScalarValue<T>(System.Text.Json.JsonElement?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToScalarValue
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 385
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  remarks: To de-serialize a class, use <xref href="Songhay.Extensions.JsonElementExtensions.ToObject%60%601(System.Nullable%7bSystem.Text.Json.JsonElement%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static T? ToScalarValue<T>(this JsonElement? elementOrNull) where T : struct'
    parameters:
    - id: elementOrNull
      type: System.Nullable{System.Text.Json.JsonElement}
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
    return:
      type: System.Nullable{{T}}
    content.vb: Public Shared Function ToScalarValue(Of T As Structure)(elementOrNull As JsonElement?) As T?
  overload: Songhay.Extensions.JsonElementExtensions.ToScalarValue*
  nameWithType.vb: JsonElementExtensions.ToScalarValue(Of T)(JsonElement?)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToScalarValue(Of T)(System.Text.Json.JsonElement?)
  name.vb: ToScalarValue(Of T)(JsonElement?)
- uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
  id: ToScalarValue``1(System.Text.Json.JsonElement)
  isExtensionMethod: true
  parent: Songhay.Extensions.JsonElementExtensions
  langs:
  - csharp
  - vb
  name: ToScalarValue<T>(JsonElement)
  nameWithType: JsonElementExtensions.ToScalarValue<T>(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToScalarValue<T>(System.Text.Json.JsonElement)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/JsonElementExtensions.cs
      branch: main
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToScalarValue
    path: ../SonghayCore/Extensions/JsonElementExtensions.cs
    startLine: 399
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Converts the specified <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref> into a nullable <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    To de-serialize a class, use <xref href="Songhay.Extensions.JsonElementExtensions.ToObject%60%601(System.Text.Json.JsonElement)" data-throw-if-not-resolved="false"></xref>.


    BTW: I am 98% certain that Microsoft did not design generics to be used with object boxing

    which kind of defeats the fundamental purpose of generics, their use with generic collections.

    For higher performance, use methods like <xref href="Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable%7bSystem.Text.Json.JsonElement%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>

    or <xref href="Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)" data-throw-if-not-resolved="false"></xref> instead.
  example: []
  syntax:
    content: 'public static T? ToScalarValue<T>(this JsonElement element) where T : struct'
    parameters:
    - id: element
      type: System.Text.Json.JsonElement
      description: The <xref href="System.Text.Json.JsonElement" data-throw-if-not-resolved="false"></xref>.
    typeParameters:
    - id: T
    return:
      type: System.Nullable{{T}}
    content.vb: Public Shared Function ToScalarValue(Of T As Structure)(element As JsonElement) As T?
  overload: Songhay.Extensions.JsonElementExtensions.ToScalarValue*
  nameWithType.vb: JsonElementExtensions.ToScalarValue(Of T)(JsonElement)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToScalarValue(Of T)(System.Text.Json.JsonElement)
  name.vb: ToScalarValue(Of T)(JsonElement)
references:
- uid: System.Text.Json.JsonElement
  commentId: T:System.Text.Json.JsonElement
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  name: JsonElement
  nameWithType: JsonElement
  fullName: System.Text.Json.JsonElement
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.Extensions.JsonElementExtensions.DisplayTopProperties*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.DisplayTopProperties
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_DisplayTopProperties_System_Text_Json_JsonElement_System_Int32_
  name: DisplayTopProperties
  nameWithType: JsonElementExtensions.DisplayTopProperties
  fullName: Songhay.Extensions.JsonElementExtensions.DisplayTopProperties
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_GetJsonPropertyOrNull_System_Nullable_System_Text_Json_JsonElement__System_String_
  name: GetJsonPropertyOrNull
  nameWithType: JsonElementExtensions.GetJsonPropertyOrNull
  fullName: Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull
- uid: System.Nullable{System.Text.Json.JsonElement}
  commentId: T:System.Nullable{System.Text.Json.JsonElement}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  name: JsonElement?
  nameWithType: JsonElement?
  fullName: System.Text.Json.JsonElement?
  spec.csharp:
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  spec.vb:
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.HasProperty*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.HasProperty
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_HasProperty_System_Nullable_System_Text_Json_JsonElement__System_String_
  name: HasProperty
  nameWithType: JsonElementExtensions.HasProperty
  fullName: Songhay.Extensions.JsonElementExtensions.HasProperty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.Extensions.JsonElementExtensions.IsExpectedObject*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.IsExpectedObject
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_IsExpectedObject_System_Nullable_System_Text_Json_JsonElement__Microsoft_Extensions_Logging_ILogger_System_String___
  name: IsExpectedObject
  nameWithType: JsonElementExtensions.IsExpectedObject
  fullName: Songhay.Extensions.JsonElementExtensions.IsExpectedObject
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Songhay.Extensions.JsonElementExtensions.ToBoolean*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToBoolean
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToBoolean_System_Nullable_System_Text_Json_JsonElement__System_Boolean_
  name: ToBoolean
  nameWithType: JsonElementExtensions.ToBoolean
  fullName: Songhay.Extensions.JsonElementExtensions.ToBoolean
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: Songhay.Extensions.JsonElementExtensions.ToByte*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToByte
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToByte_System_Nullable_System_Text_Json_JsonElement__
  name: ToByte
  nameWithType: JsonElementExtensions.ToByte
  fullName: Songhay.Extensions.JsonElementExtensions.ToByte
- uid: System.Nullable{System.Byte}
  commentId: T:System.Nullable{System.Byte}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte?
  nameWithType: byte?
  fullName: byte?
  nameWithType.vb: Byte?
  fullName.vb: Byte?
  name.vb: Byte?
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '?'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '?'
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: Songhay.Extensions.JsonElementExtensions.ToDateTime*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToDateTime
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToDateTime_System_Nullable_System_Text_Json_JsonElement__
  name: ToDateTime
  nameWithType: JsonElementExtensions.ToDateTime
  fullName: Songhay.Extensions.JsonElementExtensions.ToDateTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: Songhay.Extensions.JsonElementExtensions.ToDecimal*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToDecimal
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToDecimal_System_Nullable_System_Text_Json_JsonElement__
  name: ToDecimal
  nameWithType: JsonElementExtensions.ToDecimal
  fullName: Songhay.Extensions.JsonElementExtensions.ToDecimal
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: Songhay.Extensions.JsonElementExtensions.ToDouble*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToDouble
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToDouble_System_Nullable_System_Text_Json_JsonElement__
  name: ToDouble
  nameWithType: JsonElementExtensions.ToDouble
  fullName: Songhay.Extensions.JsonElementExtensions.ToDouble
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double?
  nameWithType: double?
  fullName: double?
  nameWithType.vb: Double?
  fullName.vb: Double?
  name.vb: Double?
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '?'
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Guid
  commentId: T:System.Guid
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Songhay.Extensions.JsonElementExtensions.ToGuid*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToGuid
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToGuid_System_Nullable_System_Text_Json_JsonElement__
  name: ToGuid
  nameWithType: JsonElementExtensions.ToGuid
  fullName: Songhay.Extensions.JsonElementExtensions.ToGuid
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid?
  nameWithType: Guid?
  fullName: System.Guid?
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '?'
- uid: Songhay.Extensions.JsonElementExtensions.ToInt*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToInt
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToInt_System_Nullable_System_Text_Json_JsonElement__
  name: ToInt
  nameWithType: JsonElementExtensions.ToInt
  fullName: Songhay.Extensions.JsonElementExtensions.ToInt
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToJsonElementArray
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToJsonElementArray_System_Nullable_System_Text_Json_JsonElement__
  name: ToJsonElementArray
  nameWithType: JsonElementExtensions.ToJsonElementArray
  fullName: Songhay.Extensions.JsonElementExtensions.ToJsonElementArray
- uid: System.Text.Json.JsonElement[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  name: JsonElement[]
  nameWithType: JsonElement[]
  fullName: System.Text.Json.JsonElement[]
  nameWithType.vb: JsonElement()
  fullName.vb: System.Text.Json.JsonElement()
  name.vb: JsonElement()
  spec.csharp:
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: (
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Songhay.Extensions.JsonElementExtensions.ToLong*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToLong
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToLong_System_Nullable_System_Text_Json_JsonElement__
  name: ToLong
  nameWithType: JsonElementExtensions.ToLong
  fullName: Songhay.Extensions.JsonElementExtensions.ToLong
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long?
  nameWithType: long?
  fullName: long?
  nameWithType.vb: Long?
  fullName.vb: Long?
  name.vb: Long?
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '?'
- uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
  isExternal: true
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Nullable_System_Text_Json_JsonElement__
  name: ToScalarValue<T>(JsonElement?)
  nameWithType: JsonElementExtensions.ToScalarValue<T>(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToScalarValue<T>(System.Text.Json.JsonElement?)
  nameWithType.vb: JsonElementExtensions.ToScalarValue(Of T)(JsonElement?)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToScalarValue(Of T)(System.Text.Json.JsonElement?)
  name.vb: ToScalarValue(Of T)(JsonElement?)
  spec.csharp:
  - uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
    name: ToScalarValue
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Nullable_System_Text_Json_JsonElement__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})
    name: ToScalarValue
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Nullable_System_Text_Json_JsonElement__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.ToObject*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToObject
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Nullable_System_Text_Json_JsonElement__
  name: ToObject
  nameWithType: JsonElementExtensions.ToObject
  fullName: Songhay.Extensions.JsonElementExtensions.ToObject
- uid: '{TObject}'
  commentId: '!:TObject'
  definition: TObject
  name: TObject
  nameWithType: TObject
  fullName: TObject
- uid: TObject
  name: TObject
  nameWithType: TObject
  fullName: TObject
- uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
  isExternal: true
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Text_Json_JsonElement_
  name: ToScalarValue<T>(JsonElement)
  nameWithType: JsonElementExtensions.ToScalarValue<T>(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToScalarValue<T>(System.Text.Json.JsonElement)
  nameWithType.vb: JsonElementExtensions.ToScalarValue(Of T)(JsonElement)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToScalarValue(Of T)(System.Text.Json.JsonElement)
  name.vb: ToScalarValue(Of T)(JsonElement)
  spec.csharp:
  - uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
    name: ToScalarValue
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Text_Json_JsonElement_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)
    name: ToScalarValue
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Text_Json_JsonElement_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToReadOnlyCollection_System_Nullable_System_Text_Json_JsonElement__
  name: ToReadOnlyCollection
  nameWithType: JsonElementExtensions.ToReadOnlyCollection
  fullName: Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<string>
  nameWithType: IReadOnlyCollection<string>
  fullName: System.Collections.Generic.IReadOnlyCollection<string>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Func{System.Text.Json.JsonElement,{T}}
  commentId: T:System.Func{System.Text.Json.JsonElement,``0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<JsonElement, T>
  nameWithType: Func<JsonElement, T>
  fullName: System.Func<System.Text.Json.JsonElement, T>
  nameWithType.vb: Func(Of JsonElement, T)
  fullName.vb: System.Func(Of System.Text.Json.JsonElement, T)
  name.vb: Func(Of JsonElement, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{{T}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.ToStringValue*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToStringValue
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToStringValue_System_Nullable_System_Text_Json_JsonElement__
  name: ToStringValue
  nameWithType: JsonElementExtensions.ToStringValue
  fullName: Songhay.Extensions.JsonElementExtensions.ToStringValue
- uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
  isExternal: true
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Nullable_System_Text_Json_JsonElement__
  name: ToObject<TObject>(JsonElement?)
  nameWithType: JsonElementExtensions.ToObject<TObject>(JsonElement?)
  fullName: Songhay.Extensions.JsonElementExtensions.ToObject<TObject>(System.Text.Json.JsonElement?)
  nameWithType.vb: JsonElementExtensions.ToObject(Of TObject)(JsonElement?)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToObject(Of TObject)(System.Text.Json.JsonElement?)
  name.vb: ToObject(Of TObject)(JsonElement?)
  spec.csharp:
  - uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
    name: ToObject
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Nullable_System_Text_Json_JsonElement__
  - name: <
  - name: TObject
  - name: '>'
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Nullable{System.Text.Json.JsonElement})
    name: ToObject
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Nullable_System_Text_Json_JsonElement__
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: )
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.ToScalarValue*
  commentId: Overload:Songhay.Extensions.JsonElementExtensions.ToScalarValue
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToScalarValue__1_System_Nullable_System_Text_Json_JsonElement__
  name: ToScalarValue
  nameWithType: JsonElementExtensions.ToScalarValue
  fullName: Songhay.Extensions.JsonElementExtensions.ToScalarValue
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: T?
  nameWithType: T?
  fullName: T?
  spec.csharp:
  - name: T
  - name: '?'
  spec.vb:
  - name: T
  - name: '?'
- uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
  isExternal: true
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Text_Json_JsonElement_
  name: ToObject<TObject>(JsonElement)
  nameWithType: JsonElementExtensions.ToObject<TObject>(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToObject<TObject>(System.Text.Json.JsonElement)
  nameWithType.vb: JsonElementExtensions.ToObject(Of TObject)(JsonElement)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToObject(Of TObject)(System.Text.Json.JsonElement)
  name.vb: ToObject(Of TObject)(JsonElement)
  spec.csharp:
  - uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
    name: ToObject
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Text_Json_JsonElement_
  - name: <
  - name: TObject
  - name: '>'
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.JsonElementExtensions.ToObject``1(System.Text.Json.JsonElement)
    name: ToObject
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToObject__1_System_Text_Json_JsonElement_
  - name: (
  - name: Of
  - name: " "
  - name: TObject
  - name: )
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
  isExternal: true
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToBoolean_System_Nullable_System_Text_Json_JsonElement__System_Boolean_
  name: ToBoolean(JsonElement?, bool)
  nameWithType: JsonElementExtensions.ToBoolean(JsonElement?, bool)
  fullName: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement?, bool)
  nameWithType.vb: JsonElementExtensions.ToBoolean(JsonElement?, Boolean)
  fullName.vb: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement?, Boolean)
  name.vb: ToBoolean(JsonElement?, Boolean)
  spec.csharp:
  - uid: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
    name: ToBoolean
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToBoolean_System_Nullable_System_Text_Json_JsonElement__System_Boolean_
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)
    name: ToBoolean
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToBoolean_System_Nullable_System_Text_Json_JsonElement__System_Boolean_
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  commentId: M:Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  isExternal: true
  href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToDecimal_System_Text_Json_JsonElement_
  name: ToDecimal(JsonElement)
  nameWithType: JsonElementExtensions.ToDecimal(JsonElement)
  fullName: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
  spec.csharp:
  - uid: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
    name: ToDecimal
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToDecimal_System_Text_Json_JsonElement_
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: )
  spec.vb:
  - uid: Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)
    name: ToDecimal
    href: Songhay.Extensions.JsonElementExtensions.html#Songhay_Extensions_JsonElementExtensions_ToDecimal_System_Text_Json_JsonElement_
  - name: (
  - uid: System.Text.Json.JsonElement
    name: JsonElement
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonelement
  - name: )
