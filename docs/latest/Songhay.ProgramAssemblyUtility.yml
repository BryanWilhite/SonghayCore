### YamlMime:ManagedReference
items:
- uid: Songhay.ProgramAssemblyUtility
  commentId: T:Songhay.ProgramAssemblyUtility
  id: ProgramAssemblyUtility
  parent: Songhay
  children:
  - Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly)
  - Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly,System.Boolean)
  - Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly)
  - Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
  langs:
  - csharp
  - vb
  name: ProgramAssemblyUtility
  nameWithType: ProgramAssemblyUtility
  fullName: Songhay.ProgramAssemblyUtility
  type: Class
  source:
    remote:
      path: SonghayCore/ProgramAssemblyUtility.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ProgramAssemblyUtility
    path: ../SonghayCore/ProgramAssemblyUtility.cs
    startLine: 5
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Static members related to <xref href="System.Reflection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class ProgramAssemblyUtility
    content.vb: Public Module ProgramAssemblyUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly)
  commentId: M:Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly)
  id: GetAssemblyInfo(System.Reflection.Assembly)
  parent: Songhay.ProgramAssemblyUtility
  langs:
  - csharp
  - vb
  name: GetAssemblyInfo(Assembly)
  nameWithType: ProgramAssemblyUtility.GetAssemblyInfo(Assembly)
  fullName: Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramAssemblyUtility.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetAssemblyInfo
    path: ../SonghayCore/ProgramAssemblyUtility.cs
    startLine: 15
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref>

    about the executing assembly.
  example: []
  syntax:
    content: public static string? GetAssemblyInfo(Assembly targetAssembly)
    parameters:
    - id: targetAssembly
      type: System.Reflection.Assembly
      description: The executing <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetAssemblyInfo(targetAssembly As Assembly) As String
  overload: Songhay.ProgramAssemblyUtility.GetAssemblyInfo*
- uid: Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly,System.Boolean)
  commentId: M:Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly,System.Boolean)
  id: GetAssemblyInfo(System.Reflection.Assembly,System.Boolean)
  parent: Songhay.ProgramAssemblyUtility
  langs:
  - csharp
  - vb
  name: GetAssemblyInfo(Assembly?, bool)
  nameWithType: ProgramAssemblyUtility.GetAssemblyInfo(Assembly?, bool)
  fullName: Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramAssemblyUtility.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetAssemblyInfo
    path: ../SonghayCore/ProgramAssemblyUtility.cs
    startLine: 28
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: >-
    Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref>

    about the executing assembly.
  example: []
  syntax:
    content: public static string? GetAssemblyInfo(Assembly? targetAssembly, bool useConsoleChars)
    parameters:
    - id: targetAssembly
      type: System.Reflection.Assembly
      description: The executing <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>.
    - id: useConsoleChars
      type: System.Boolean
      description: When <code>true</code> selected “special” characters are formatted for the Windows Console.
    return:
      type: System.String
      description: Returns <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetAssemblyInfo(targetAssembly As Assembly, useConsoleChars As Boolean) As String
  overload: Songhay.ProgramAssemblyUtility.GetAssemblyInfo*
  nameWithType.vb: ProgramAssemblyUtility.GetAssemblyInfo(Assembly, Boolean)
  fullName.vb: Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly, Boolean)
  name.vb: GetAssemblyInfo(Assembly, Boolean)
- uid: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly)
  commentId: M:Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly)
  id: GetPathFromAssembly(System.Reflection.Assembly)
  parent: Songhay.ProgramAssemblyUtility
  langs:
  - csharp
  - vb
  name: GetPathFromAssembly(Assembly?)
  nameWithType: ProgramAssemblyUtility.GetPathFromAssembly(Assembly?)
  fullName: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly?)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramAssemblyUtility.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPathFromAssembly
    path: ../SonghayCore/ProgramAssemblyUtility.cs
    startLine: 47
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Gets the directory name from assembly.
  example: []
  syntax:
    content: public static string? GetPathFromAssembly(Assembly? assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    return:
      type: System.String
    content.vb: Public Shared Function GetPathFromAssembly(assembly As Assembly) As String
  overload: Songhay.ProgramAssemblyUtility.GetPathFromAssembly*
  nameWithType.vb: ProgramAssemblyUtility.GetPathFromAssembly(Assembly)
  fullName.vb: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly)
  name.vb: GetPathFromAssembly(Assembly)
- uid: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
  commentId: M:Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
  id: GetPathFromAssembly(System.Reflection.Assembly,System.String)
  parent: Songhay.ProgramAssemblyUtility
  langs:
  - csharp
  - vb
  name: GetPathFromAssembly(Assembly?, string?)
  nameWithType: ProgramAssemblyUtility.GetPathFromAssembly(Assembly?, string?)
  fullName: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/ProgramAssemblyUtility.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetPathFromAssembly
    path: ../SonghayCore/ProgramAssemblyUtility.cs
    startLine: 61
  assemblies:
  - SonghayCore
  namespace: Songhay
  summary: Gets the path from assembly.
  example: []
  syntax:
    content: public static string GetPathFromAssembly(Assembly? assembly, string? fileSegment)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: The assembly.
    - id: fileSegment
      type: System.String
      description: The file segment.
    return:
      type: System.String
    content.vb: Public Shared Function GetPathFromAssembly(assembly As Assembly, fileSegment As String) As String
  overload: Songhay.ProgramAssemblyUtility.GetPathFromAssembly*
  nameWithType.vb: ProgramAssemblyUtility.GetPathFromAssembly(Assembly, String)
  fullName.vb: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly, String)
  name.vb: GetPathFromAssembly(Assembly, String)
references:
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: Songhay
  commentId: N:Songhay
  href: Songhay.html
  name: Songhay
  nameWithType: Songhay
  fullName: Songhay
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Songhay.ProgramAssemblyUtility.GetAssemblyInfo*
  commentId: Overload:Songhay.ProgramAssemblyUtility.GetAssemblyInfo
  href: Songhay.ProgramAssemblyUtility.html#Songhay_ProgramAssemblyUtility_GetAssemblyInfo_System_Reflection_Assembly_
  name: GetAssemblyInfo
  nameWithType: ProgramAssemblyUtility.GetAssemblyInfo
  fullName: Songhay.ProgramAssemblyUtility.GetAssemblyInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.ProgramAssemblyUtility.GetPathFromAssembly*
  commentId: Overload:Songhay.ProgramAssemblyUtility.GetPathFromAssembly
  href: Songhay.ProgramAssemblyUtility.html#Songhay_ProgramAssemblyUtility_GetPathFromAssembly_System_Reflection_Assembly_
  name: GetPathFromAssembly
  nameWithType: ProgramAssemblyUtility.GetPathFromAssembly
  fullName: Songhay.ProgramAssemblyUtility.GetPathFromAssembly
