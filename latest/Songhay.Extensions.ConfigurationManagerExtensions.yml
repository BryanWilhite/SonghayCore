### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.ConfigurationManagerExtensions
  commentId: T:Songhay.Extensions.ConfigurationManagerExtensions
  id: ConfigurationManagerExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean)
  - Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean,System.Func{System.String,System.String})
  - Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings(System.Xml.Linq.XDocument)
  - Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument)
  - Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings(System.Configuration.KeyValueConfigurationCollection,System.Xml.Linq.XDocument)
  - Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection,System.Xml.Linq.XDocument)
  langs:
  - csharp
  - vb
  name: ConfigurationManagerExtensions
  nameWithType: ConfigurationManagerExtensions
  fullName: Songhay.Extensions.ConfigurationManagerExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ConfigurationManagerExtensions
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 10
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extensions of <xref href="Microsoft.Extensions.Configuration.ConfigurationManager" data-throw-if-not-resolved="false"></xref>
  remarks: Several members in this class depend on <xref href="Songhay.Models.DeploymentEnvironment" data-throw-if-not-resolved="false"></xref> constants.
  example: []
  syntax:
    content: public static class ConfigurationManagerExtensions
    content.vb: Public Module ConfigurationManagerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String)
  id: GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?)
  nameWithType: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection?, string?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConnectionNameFromEnvironment
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 18
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the connection name from environment.
  example: []
  syntax:
    content: public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    return:
      type: System.String
    content.vb: Public Shared Function GetConnectionNameFromEnvironment(collection As ConnectionStringSettingsCollection, unqualifiedKey As String, environmentName As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment*
  nameWithType.vb: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection, String, String)
  name.vb: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String)
  id: GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, string?)
  nameWithType: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection?, string?, string?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConnectionNameFromEnvironment
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 30
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the connection name from environment.
  example: []
  syntax:
    content: public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName, string? delimiter)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    - id: delimiter
      type: System.String
      description: The delimiter.
    return:
      type: System.String
    content.vb: Public Shared Function GetConnectionNameFromEnvironment(collection As ConnectionStringSettingsCollection, unqualifiedKey As String, environmentName As String, delimiter As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment*
  nameWithType.vb: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection, String, String, String)
  name.vb: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.Boolean)
  id: GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, bool)
  nameWithType: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection?, string?, string?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConnectionNameFromEnvironment
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 42
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the connection name from environment.
  example: []
  syntax:
    content: public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName, bool throwConfigurationErrorsException)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    return:
      type: System.String
    content.vb: Public Shared Function GetConnectionNameFromEnvironment(collection As ConnectionStringSettingsCollection, unqualifiedKey As String, environmentName As String, throwConfigurationErrorsException As Boolean) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment*
  nameWithType.vb: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection, String, String, Boolean)
  name.vb: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String,System.Boolean)
  id: GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, string?, bool)
  nameWithType: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection?, string?, string?, string?, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection?, string?, string?, string?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConnectionNameFromEnvironment
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 57
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the connection name from environment.
  example: []
  syntax:
    content: public static string? GetConnectionNameFromEnvironment(this ConnectionStringSettingsCollection? collection, string? unqualifiedKey, string? environmentName, string? delimiter, bool throwConfigurationErrorsException)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    - id: delimiter
      type: System.String
      description: The delimiter.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    return:
      type: System.String
    content.vb: Public Shared Function GetConnectionNameFromEnvironment(collection As ConnectionStringSettingsCollection, unqualifiedKey As String, environmentName As String, delimiter As String, throwConfigurationErrorsException As Boolean) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment*
  nameWithType.vb: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection, String, String, String, Boolean)
  name.vb: GetConnectionNameFromEnvironment(ConnectionStringSettingsCollection, String, String, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String)
  id: GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetConnectionStringSettings(ConnectionStringSettingsCollection?, string?)
  nameWithType: ConfigurationManagerExtensions.GetConnectionStringSettings(ConnectionStringSettingsCollection?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConnectionStringSettings
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 82
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the connection string settings.
  example: []
  syntax:
    content: public static ConnectionStringSettings? GetConnectionStringSettings(this ConnectionStringSettingsCollection? collection, string? connectionName)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: connectionName
      type: System.String
      description: Name of the connection.
    return:
      type: System.Configuration.ConnectionStringSettings
    content.vb: Public Shared Function GetConnectionStringSettings(collection As ConnectionStringSettingsCollection, connectionName As String) As ConnectionStringSettings
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings*
  nameWithType.vb: ConfigurationManagerExtensions.GetConnectionStringSettings(ConnectionStringSettingsCollection, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection, String)
  name.vb: GetConnectionStringSettings(ConnectionStringSettingsCollection, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String,System.Boolean)
  id: GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetConnectionStringSettings(ConnectionStringSettingsCollection?, string?, bool)
  nameWithType: ConfigurationManagerExtensions.GetConnectionStringSettings(ConnectionStringSettingsCollection?, string?, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection?, string?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConnectionStringSettings
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 92
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the connection string settings.
  example: []
  syntax:
    content: public static ConnectionStringSettings? GetConnectionStringSettings(this ConnectionStringSettingsCollection? collection, string? connectionName, bool throwConfigurationErrorsException)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: connectionName
      type: System.String
      description: Name of the connection.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    return:
      type: System.Configuration.ConnectionStringSettings
    content.vb: Public Shared Function GetConnectionStringSettings(collection As ConnectionStringSettingsCollection, connectionName As String, throwConfigurationErrorsException As Boolean) As ConnectionStringSettings
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings*
  nameWithType.vb: ConfigurationManagerExtensions.GetConnectionStringSettings(ConnectionStringSettingsCollection, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection, String, Boolean)
  name.vb: GetConnectionStringSettings(ConnectionStringSettingsCollection, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection)
  id: GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetEnvironmentName(KeyValueConfigurationCollection?)
  nameWithType: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 111
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the name of the conventional deployment environment.
  example: []
  syntax:
    content: public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    return:
      type: System.String
    content.vb: Public Shared Function GetEnvironmentName(settings As KeyValueConfigurationCollection) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection)
  name.vb: GetEnvironmentName(KeyValueConfigurationCollection)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String)
  id: GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetEnvironmentName(KeyValueConfigurationCollection?, string?)
  nameWithType: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 122
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the name of the conventional deployment environment.
  example: []
  syntax:
    content: public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings, string? environmentKey)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: environmentKey
      type: System.String
      description: The environment key.
    return:
      type: System.String
    content.vb: Public Shared Function GetEnvironmentName(settings As KeyValueConfigurationCollection, environmentKey As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String)
  name.vb: GetEnvironmentName(KeyValueConfigurationCollection, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  id: GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetEnvironmentName(KeyValueConfigurationCollection?, string?, string)
  nameWithType: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection?, string?, string)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 134
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the name of the conventional deployment environment.
  example: []
  syntax:
    content: public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings, string? environmentKey, string defaultEnvironmentName)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: environmentKey
      type: System.String
      description: The environment key.
    - id: defaultEnvironmentName
      type: System.String
      description: Default name of the environment.
    return:
      type: System.String
    content.vb: Public Shared Function GetEnvironmentName(settings As KeyValueConfigurationCollection, environmentKey As String, defaultEnvironmentName As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection, String, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String, String)
  name.vb: GetEnvironmentName(KeyValueConfigurationCollection, String, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  id: GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetEnvironmentName(KeyValueConfigurationCollection?, string?, string, bool)
  nameWithType: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection?, string?, string, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?, string, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 148
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the name of the conventional deployment environment.
  example: []
  syntax:
    content: public static string? GetEnvironmentName(this KeyValueConfigurationCollection? settings, string? environmentKey, string defaultEnvironmentName, bool throwConfigurationErrorsException)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: environmentKey
      type: System.String
      description: The environment key.
    - id: defaultEnvironmentName
      type: System.String
      description: Default name of the environment.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    return:
      type: System.String
    content.vb: Public Shared Function GetEnvironmentName(settings As KeyValueConfigurationCollection, environmentKey As String, defaultEnvironmentName As String, throwConfigurationErrorsException As Boolean) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetEnvironmentName(KeyValueConfigurationCollection, String, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String, String, Boolean)
  name.vb: GetEnvironmentName(KeyValueConfigurationCollection, String, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  id: GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?)
  nameWithType: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetKeyWithEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 174
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the name of the key with environment.
  example: []
  syntax:
    content: public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    return:
      type: System.String
    content.vb: Public Shared Function GetKeyWithEnvironmentName(settings As KeyValueConfigurationCollection, unqualifiedKey As String, environmentName As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String, String)
  name.vb: GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String)
  id: GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, string?)
  nameWithType: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?, string?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetKeyWithEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 188
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the key with environment name.
  example: []
  syntax:
    content: public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName, string? delimiter)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    - id: delimiter
      type: System.String
      description: The delimiter.
    return:
      type: System.String
    content.vb: Public Shared Function GetKeyWithEnvironmentName(settings As KeyValueConfigurationCollection, unqualifiedKey As String, environmentName As String, delimiter As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String, String, String)
  name.vb: GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  id: GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, bool)
  nameWithType: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?, string?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetKeyWithEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 202
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the name of the key with environment.
  example: []
  syntax:
    content: public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName, bool throwConfigurationErrorsException)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> [throw configuration errors exception].
    return:
      type: System.String
    content.vb: Public Shared Function GetKeyWithEnvironmentName(settings As KeyValueConfigurationCollection, unqualifiedKey As String, environmentName As String, throwConfigurationErrorsException As Boolean) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String, String, Boolean)
  name.vb: GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String,System.Boolean)
  id: GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, string?, bool)
  nameWithType: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection?, string?, string?, string?, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection?, string?, string?, string?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetKeyWithEnvironmentName
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 217
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the key with environment name.
  example: []
  syntax:
    content: public static string? GetKeyWithEnvironmentName(this KeyValueConfigurationCollection? settings, string? unqualifiedKey, string? environmentName, string? delimiter, bool throwConfigurationErrorsException)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: unqualifiedKey
      type: System.String
      description: The unqualified key.
    - id: environmentName
      type: System.String
      description: Name of the environment.
    - id: delimiter
      type: System.String
      description: The delimiter.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    return:
      type: System.String
    content.vb: Public Shared Function GetKeyWithEnvironmentName(settings As KeyValueConfigurationCollection, unqualifiedKey As String, environmentName As String, delimiter As String, throwConfigurationErrorsException As Boolean) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName*
  nameWithType.vb: ConfigurationManagerExtensions.GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection, String, String, String, Boolean)
  name.vb: GetKeyWithEnvironmentName(KeyValueConfigurationCollection, String, String, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String)
  id: GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetSetting(KeyValueConfigurationCollection?, string?)
  nameWithType: ConfigurationManagerExtensions.GetSetting(KeyValueConfigurationCollection?, string?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetSetting
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 241
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the setting from the current <xref href="System.Configuration.KeyValueConfigurationCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string? GetSetting(this KeyValueConfigurationCollection? settings, string? key)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: key
      type: System.String
      description: The key.
    return:
      type: System.String
    content.vb: Public Shared Function GetSetting(settings As KeyValueConfigurationCollection, key As String) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting*
  nameWithType.vb: ConfigurationManagerExtensions.GetSetting(KeyValueConfigurationCollection, String)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection, String)
  name.vb: GetSetting(KeyValueConfigurationCollection, String)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean)
  id: GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetSetting(KeyValueConfigurationCollection?, string?, bool)
  nameWithType: ConfigurationManagerExtensions.GetSetting(KeyValueConfigurationCollection?, string?, bool)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection?, string?, bool)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetSetting
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 250
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the setting from the current <xref href="System.Configuration.KeyValueConfigurationCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string? GetSetting(this KeyValueConfigurationCollection? settings, string? key, bool throwConfigurationErrorsException)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: key
      type: System.String
      description: The key.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    return:
      type: System.String
    content.vb: Public Shared Function GetSetting(settings As KeyValueConfigurationCollection, key As String, throwConfigurationErrorsException As Boolean) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting*
  nameWithType.vb: ConfigurationManagerExtensions.GetSetting(KeyValueConfigurationCollection, String, Boolean)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection, String, Boolean)
  name.vb: GetSetting(KeyValueConfigurationCollection, String, Boolean)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean,System.Func{System.String,System.String})
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean,System.Func{System.String,System.String})
  id: GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean,System.Func{System.String,System.String})
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: GetSetting(KeyValueConfigurationCollection?, string?, bool, Func<string?, string>?)
  nameWithType: ConfigurationManagerExtensions.GetSetting(KeyValueConfigurationCollection?, string?, bool, Func<string?, string>?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection?, string?, bool, System.Func<string?, string>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetSetting
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 271
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Gets the setting from the current <xref href="System.Configuration.KeyValueConfigurationCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string? GetSetting(this KeyValueConfigurationCollection? settings, string? key, bool throwConfigurationErrorsException, Func<string?, string>? settingModifier)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: key
      type: System.String
      description: The key.
    - id: throwConfigurationErrorsException
      type: System.Boolean
      description: if set to <code>true</code> throw configuration errors exception.
    - id: settingModifier
      type: System.Func{System.String,System.String}
      description: The setting modifier.
    return:
      type: System.String
    content.vb: Public Shared Function GetSetting(settings As KeyValueConfigurationCollection, key As String, throwConfigurationErrorsException As Boolean, settingModifier As Func(Of String, String)) As String
  overload: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting*
  nameWithType.vb: ConfigurationManagerExtensions.GetSetting(KeyValueConfigurationCollection, String, Boolean, Func(Of String, String))
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection, String, Boolean, System.Func(Of String, String))
  name.vb: GetSetting(KeyValueConfigurationCollection, String, Boolean, Func(Of String, String))
- uid: Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings(System.Xml.Linq.XDocument)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings(System.Xml.Linq.XDocument)
  id: ToAppSettings(System.Xml.Linq.XDocument)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: ToAppSettings(XDocument?)
  nameWithType: ConfigurationManagerExtensions.ToAppSettings(XDocument?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings(System.Xml.Linq.XDocument?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToAppSettings
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 284
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the external configuration file

    to the application settings <xref href="System.Configuration.KeyValueConfigurationCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static KeyValueConfigurationCollection? ToAppSettings(this XDocument? externalConfigurationDoc)
    parameters:
    - id: externalConfigurationDoc
      type: System.Xml.Linq.XDocument
      description: The external configuration document.
    return:
      type: System.Configuration.KeyValueConfigurationCollection
    content.vb: Public Shared Function ToAppSettings(externalConfigurationDoc As XDocument) As KeyValueConfigurationCollection
  overload: Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings*
  nameWithType.vb: ConfigurationManagerExtensions.ToAppSettings(XDocument)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings(System.Xml.Linq.XDocument)
  name.vb: ToAppSettings(XDocument)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument)
  id: ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: ToConnectionStringSettingsCollection(XDocument?)
  nameWithType: ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(XDocument?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToConnectionStringSettingsCollection
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 303
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Converts the external configuration file

    to the application settings <xref href="System.Configuration.ConnectionStringSettingsCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ConnectionStringSettingsCollection? ToConnectionStringSettingsCollection(this XDocument? externalConfigurationDoc)
    parameters:
    - id: externalConfigurationDoc
      type: System.Xml.Linq.XDocument
      description: The external configuration document.
    return:
      type: System.Configuration.ConnectionStringSettingsCollection
    content.vb: Public Shared Function ToConnectionStringSettingsCollection(externalConfigurationDoc As XDocument) As ConnectionStringSettingsCollection
  overload: Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection*
  nameWithType.vb: ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(XDocument)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument)
  name.vb: ToConnectionStringSettingsCollection(XDocument)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings(System.Configuration.KeyValueConfigurationCollection,System.Xml.Linq.XDocument)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings(System.Configuration.KeyValueConfigurationCollection,System.Xml.Linq.XDocument)
  id: WithAppSettings(System.Configuration.KeyValueConfigurationCollection,System.Xml.Linq.XDocument)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: WithAppSettings(KeyValueConfigurationCollection?, XDocument?)
  nameWithType: ConfigurationManagerExtensions.WithAppSettings(KeyValueConfigurationCollection?, XDocument?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings(System.Configuration.KeyValueConfigurationCollection?, System.Xml.Linq.XDocument?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: WithAppSettings
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 331
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Returns <xref href="System.Configuration.KeyValueConfigurationCollection" data-throw-if-not-resolved="false"></xref>

    with the application settings

    of the specified external configuration <xref href="System.Xml.Linq.XDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static KeyValueConfigurationCollection? WithAppSettings(this KeyValueConfigurationCollection? settings, XDocument? externalConfigurationDoc)
    parameters:
    - id: settings
      type: System.Configuration.KeyValueConfigurationCollection
      description: The settings.
    - id: externalConfigurationDoc
      type: System.Xml.Linq.XDocument
      description: The external configuration document.
    return:
      type: System.Configuration.KeyValueConfigurationCollection
    content.vb: Public Shared Function WithAppSettings(settings As KeyValueConfigurationCollection, externalConfigurationDoc As XDocument) As KeyValueConfigurationCollection
  overload: Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings*
  nameWithType.vb: ConfigurationManagerExtensions.WithAppSettings(KeyValueConfigurationCollection, XDocument)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings(System.Configuration.KeyValueConfigurationCollection, System.Xml.Linq.XDocument)
  name.vb: WithAppSettings(KeyValueConfigurationCollection, XDocument)
- uid: Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection,System.Xml.Linq.XDocument)
  commentId: M:Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection,System.Xml.Linq.XDocument)
  id: WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection,System.Xml.Linq.XDocument)
  isExtensionMethod: true
  parent: Songhay.Extensions.ConfigurationManagerExtensions
  langs:
  - csharp
  - vb
  name: WithConnectionStringSettingsCollection(ConnectionStringSettingsCollection?, XDocument?)
  nameWithType: ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(ConnectionStringSettingsCollection?, XDocument?)
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection?, System.Xml.Linq.XDocument?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: WithConnectionStringSettingsCollection
    path: SonghayCore/Extensions/ConfigurationManagerExtensions.cs
    startLine: 350
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Returns <xref href="System.Configuration.ConnectionStringSettingsCollection" data-throw-if-not-resolved="false"></xref>

    with the application settings

    of the specified external configuration <xref href="System.Xml.Linq.XDocument" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static ConnectionStringSettingsCollection? WithConnectionStringSettingsCollection(this ConnectionStringSettingsCollection? collection, XDocument? externalConfigurationDoc)
    parameters:
    - id: collection
      type: System.Configuration.ConnectionStringSettingsCollection
      description: The collection.
    - id: externalConfigurationDoc
      type: System.Xml.Linq.XDocument
      description: The external configuration document.
    return:
      type: System.Configuration.ConnectionStringSettingsCollection
    content.vb: Public Shared Function WithConnectionStringSettingsCollection(collection As ConnectionStringSettingsCollection, externalConfigurationDoc As XDocument) As ConnectionStringSettingsCollection
  overload: Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection*
  nameWithType.vb: ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(ConnectionStringSettingsCollection, XDocument)
  fullName.vb: Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection, System.Xml.Linq.XDocument)
  name.vb: WithConnectionStringSettingsCollection(ConnectionStringSettingsCollection, XDocument)
references:
- uid: Microsoft.Extensions.Configuration.ConfigurationManager
  commentId: T:Microsoft.Extensions.Configuration.ConfigurationManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.configurationmanager
  name: ConfigurationManager
  nameWithType: ConfigurationManager
  fullName: Microsoft.Extensions.Configuration.ConfigurationManager
- uid: Songhay.Models.DeploymentEnvironment
  commentId: T:Songhay.Models.DeploymentEnvironment
  href: Songhay.Models.DeploymentEnvironment.html
  name: DeploymentEnvironment
  nameWithType: DeploymentEnvironment
  fullName: Songhay.Models.DeploymentEnvironment
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_GetConnectionNameFromEnvironment_System_Configuration_ConnectionStringSettingsCollection_System_String_System_String_
  name: GetConnectionNameFromEnvironment
  nameWithType: ConfigurationManagerExtensions.GetConnectionNameFromEnvironment
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment
- uid: System.Configuration.ConnectionStringSettingsCollection
  commentId: T:System.Configuration.ConnectionStringSettingsCollection
  parent: System.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.configuration.connectionstringsettingscollection
  name: ConnectionStringSettingsCollection
  nameWithType: ConnectionStringSettingsCollection
  fullName: System.Configuration.ConnectionStringSettingsCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Configuration
  commentId: N:System.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Configuration
  nameWithType: System.Configuration
  fullName: System.Configuration
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.configuration
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.configuration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_GetConnectionStringSettings_System_Configuration_ConnectionStringSettingsCollection_System_String_
  name: GetConnectionStringSettings
  nameWithType: ConfigurationManagerExtensions.GetConnectionStringSettings
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings
- uid: System.Configuration.ConnectionStringSettings
  commentId: T:System.Configuration.ConnectionStringSettings
  parent: System.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.configuration.connectionstringsettings
  name: ConnectionStringSettings
  nameWithType: ConnectionStringSettings
  fullName: System.Configuration.ConnectionStringSettings
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_GetEnvironmentName_System_Configuration_KeyValueConfigurationCollection_
  name: GetEnvironmentName
  nameWithType: ConfigurationManagerExtensions.GetEnvironmentName
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName
- uid: System.Configuration.KeyValueConfigurationCollection
  commentId: T:System.Configuration.KeyValueConfigurationCollection
  parent: System.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.configuration.keyvalueconfigurationcollection
  name: KeyValueConfigurationCollection
  nameWithType: KeyValueConfigurationCollection
  fullName: System.Configuration.KeyValueConfigurationCollection
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_GetKeyWithEnvironmentName_System_Configuration_KeyValueConfigurationCollection_System_String_System_String_
  name: GetKeyWithEnvironmentName
  nameWithType: ConfigurationManagerExtensions.GetKeyWithEnvironmentName
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName
- uid: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_GetSetting_System_Configuration_KeyValueConfigurationCollection_System_String_
  name: GetSetting
  nameWithType: ConfigurationManagerExtensions.GetSetting
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.GetSetting
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<string, string>
  nameWithType: Func<string, string>
  fullName: System.Func<string, string>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of String, String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_ToAppSettings_System_Xml_Linq_XDocument_
  name: ToAppSettings
  nameWithType: ConfigurationManagerExtensions.ToAppSettings
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings
- uid: System.Xml.Linq.XDocument
  commentId: T:System.Xml.Linq.XDocument
  parent: System.Xml.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.xml.linq.xdocument
  name: XDocument
  nameWithType: XDocument
  fullName: System.Xml.Linq.XDocument
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml
  - name: .
  - uid: System.Xml.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.xml.linq
- uid: Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_ToConnectionStringSettingsCollection_System_Xml_Linq_XDocument_
  name: ToConnectionStringSettingsCollection
  nameWithType: ConfigurationManagerExtensions.ToConnectionStringSettingsCollection
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection
- uid: Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_WithAppSettings_System_Configuration_KeyValueConfigurationCollection_System_Xml_Linq_XDocument_
  name: WithAppSettings
  nameWithType: ConfigurationManagerExtensions.WithAppSettings
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings
- uid: Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection*
  commentId: Overload:Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection
  href: Songhay.Extensions.ConfigurationManagerExtensions.html#Songhay_Extensions_ConfigurationManagerExtensions_WithConnectionStringSettingsCollection_System_Configuration_ConnectionStringSettingsCollection_System_Xml_Linq_XDocument_
  name: WithConnectionStringSettingsCollection
  nameWithType: ConfigurationManagerExtensions.WithConnectionStringSettingsCollection
  fullName: Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection
