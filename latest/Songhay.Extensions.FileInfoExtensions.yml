### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.FileInfoExtensions
  commentId: T:Songhay.Extensions.FileInfoExtensions
  id: FileInfoExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String})
  - Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  - Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String})
  - Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  - Songhay.Extensions.FileInfoExtensions.UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive})
  - Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  - Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  - Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo)
  - Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo,System.IO.Compression.CompressionLevel)
  langs:
  - csharp
  - vb
  name: FileInfoExtensions
  nameWithType: FileInfoExtensions
  fullName: Songhay.Extensions.FileInfoExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: FileInfoExtensions
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 5
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extension of <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class FileInfoExtensions
    content.vb: Public Module FileInfoExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String})
  commentId: M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String})
  id: ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: ReadZipArchiveEntries(FileInfo, Action<string>)
  nameWithType: FileInfoExtensions.ReadZipArchiveEntries(FileInfo, Action<string>)
  fullName: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo, System.Action<string>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ReadZipArchiveEntries
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 15
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Read zip archive entries.
  remarks: Use <code>entriesProjector</code> for any filtering or sorting.
  example: []
  syntax:
    content: public static void ReadZipArchiveEntries(this FileInfo archiveInfo, Action<string> fileAction)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: The <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref>.
    - id: fileAction
      type: System.Action{System.String}
      description: The file action.
    content.vb: Public Shared Sub ReadZipArchiveEntries(archiveInfo As FileInfo, fileAction As Action(Of String))
  overload: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries*
  nameWithType.vb: FileInfoExtensions.ReadZipArchiveEntries(FileInfo, Action(Of String))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo, System.Action(Of String))
  name.vb: ReadZipArchiveEntries(FileInfo, Action(Of String))
- uid: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  commentId: M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  id: ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: ReadZipArchiveEntries(FileInfo, Action<string>, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>)
  nameWithType: FileInfoExtensions.ReadZipArchiveEntries(FileInfo, Action<string>, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>)
  fullName: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo, System.Action<string>, System.Func<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>, System.Collections.Generic.IEnumerable<System.IO.Compression.ZipArchiveEntry>>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ReadZipArchiveEntries
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 27
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Read zip archive entries.
  remarks: Use <code>entriesProjector</code> for any filtering or sorting.
  example: []
  syntax:
    content: public static void ReadZipArchiveEntries(this FileInfo archiveInfo, Action<string> fileAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> entriesProjector)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: The <xref href="System.IO.FileInfo" data-throw-if-not-resolved="false"></xref>.
    - id: fileAction
      type: System.Action{System.String}
      description: The file action.
    - id: entriesProjector
      type: System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}}
      description: The entries projector.
    content.vb: Public Shared Sub ReadZipArchiveEntries(archiveInfo As FileInfo, fileAction As Action(Of String), entriesProjector As Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry)))
  overload: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries*
  nameWithType.vb: FileInfoExtensions.ReadZipArchiveEntries(FileInfo, Action(Of String), Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry)))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo, System.Action(Of String), System.Func(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry), System.Collections.Generic.IEnumerable(Of System.IO.Compression.ZipArchiveEntry)))
  name.vb: ReadZipArchiveEntries(FileInfo, Action(Of String), Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry)))
- uid: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String})
  commentId: M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String})
  id: ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: ReadZipArchiveEntriesByLine(FileInfo, Action<int, string>)
  nameWithType: FileInfoExtensions.ReadZipArchiveEntriesByLine(FileInfo, Action<int, string>)
  fullName: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo, System.Action<int, string>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ReadZipArchiveEntriesByLine
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 40
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Read zip archive entries as strings, line by line.
  remarks: >-
    This member is designed for compressed text documents that are too large to load into memory.

    The <code>fileAction</code> includes the line number and the current line.
  example: []
  syntax:
    content: public static void ReadZipArchiveEntriesByLine(this FileInfo archiveInfo, Action<int, string> lineAction)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: The file and/or directory info.
    - id: lineAction
      type: System.Action{System.Int32,System.String}
      description: The line action.
    content.vb: Public Shared Sub ReadZipArchiveEntriesByLine(archiveInfo As FileInfo, lineAction As Action(Of Integer, String))
  overload: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine*
  nameWithType.vb: FileInfoExtensions.ReadZipArchiveEntriesByLine(FileInfo, Action(Of Integer, String))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo, System.Action(Of Integer, String))
  name.vb: ReadZipArchiveEntriesByLine(FileInfo, Action(Of Integer, String))
- uid: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  commentId: M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  id: ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: ReadZipArchiveEntriesByLine(FileInfo, Action<int, string>, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>)
  nameWithType: FileInfoExtensions.ReadZipArchiveEntriesByLine(FileInfo, Action<int, string>, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>)
  fullName: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo, System.Action<int, string>, System.Func<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>, System.Collections.Generic.IEnumerable<System.IO.Compression.ZipArchiveEntry>>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ReadZipArchiveEntriesByLine
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 53
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Read zip archive entries as strings, line by line.
  remarks: >-
    This member is designed for compressed text documents that are too large to load into memory.

    The <code>fileAction</code> includes the line number and the current line.
  example: []
  syntax:
    content: public static void ReadZipArchiveEntriesByLine(this FileInfo archiveInfo, Action<int, string> lineAction, Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>> entriesProjector)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: The file and/or directory info.
    - id: lineAction
      type: System.Action{System.Int32,System.String}
      description: The line action.
    - id: entriesProjector
      type: System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}}
      description: The filter zip archive entries.
    content.vb: Public Shared Sub ReadZipArchiveEntriesByLine(archiveInfo As FileInfo, lineAction As Action(Of Integer, String), entriesProjector As Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry)))
  overload: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine*
  nameWithType.vb: FileInfoExtensions.ReadZipArchiveEntriesByLine(FileInfo, Action(Of Integer, String), Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry)))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo, System.Action(Of Integer, String), System.Func(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry), System.Collections.Generic.IEnumerable(Of System.IO.Compression.ZipArchiveEntry)))
  name.vb: ReadZipArchiveEntriesByLine(FileInfo, Action(Of Integer, String), Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry)))
- uid: Songhay.Extensions.FileInfoExtensions.UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive})
  commentId: M:Songhay.Extensions.FileInfoExtensions.UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive})
  id: UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: UseZipArchive(FileInfo, Action<ZipArchive?>)
  nameWithType: FileInfoExtensions.UseZipArchive(FileInfo, Action<ZipArchive?>)
  fullName: Songhay.Extensions.FileInfoExtensions.UseZipArchive(System.IO.FileInfo, System.Action<System.IO.Compression.ZipArchive?>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: UseZipArchive
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 62
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Centralizes the use of <xref href="System.IO.Compression.ZipArchive" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static void UseZipArchive(this FileInfo archiveInfo, Action<ZipArchive?> archiveAction)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: ''
    - id: archiveAction
      type: System.Action{System.IO.Compression.ZipArchive}
      description: ''
    content.vb: Public Shared Sub UseZipArchive(archiveInfo As FileInfo, archiveAction As Action(Of ZipArchive))
  overload: Songhay.Extensions.FileInfoExtensions.UseZipArchive*
  nameWithType.vb: FileInfoExtensions.UseZipArchive(FileInfo, Action(Of ZipArchive))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.UseZipArchive(System.IO.FileInfo, System.Action(Of System.IO.Compression.ZipArchive))
  name.vb: UseZipArchive(FileInfo, Action(Of ZipArchive))
- uid: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  commentId: M:Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  id: UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: UseZipArchiveEntries(FileInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>)
  nameWithType: FileInfoExtensions.UseZipArchiveEntries(FileInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>)
  fullName: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo, System.Action<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: UseZipArchiveEntries
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 70
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Centralizes the use of <xref href="System.Collections.ObjectModel.ReadOnlyCollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void UseZipArchiveEntries(this FileInfo archiveInfo, Action<ReadOnlyCollection<ZipArchiveEntry>> entriesAction)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: ''
    - id: entriesAction
      type: System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
      description: ''
    content.vb: Public Shared Sub UseZipArchiveEntries(archiveInfo As FileInfo, entriesAction As Action(Of ReadOnlyCollection(Of ZipArchiveEntry)))
  overload: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries*
  nameWithType.vb: FileInfoExtensions.UseZipArchiveEntries(FileInfo, Action(Of ReadOnlyCollection(Of ZipArchiveEntry)))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo, System.Action(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry)))
  name.vb: UseZipArchiveEntries(FileInfo, Action(Of ReadOnlyCollection(Of ZipArchiveEntry)))
- uid: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  commentId: M:Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  id: UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: UseZipArchiveEntries(FileInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>, Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>>)
  nameWithType: FileInfoExtensions.UseZipArchiveEntries(FileInfo, Action<ReadOnlyCollection<ZipArchiveEntry>>, Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>>)
  fullName: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo, System.Action<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>>, System.Func<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>, System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>>)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: UseZipArchiveEntries
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 80
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Centralizes the use of <xref href="System.Collections.ObjectModel.ReadOnlyCollection%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void UseZipArchiveEntries(this FileInfo archiveInfo, Action<ReadOnlyCollection<ZipArchiveEntry>> entriesAction, Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>> entriesProjector)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: ''
    - id: entriesAction
      type: System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
      description: ''
    - id: entriesProjector
      type: System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
      description: ''
    content.vb: Public Shared Sub UseZipArchiveEntries(archiveInfo As FileInfo, entriesAction As Action(Of ReadOnlyCollection(Of ZipArchiveEntry)), entriesProjector As Func(Of ReadOnlyCollection(Of ZipArchiveEntry), ReadOnlyCollection(Of ZipArchiveEntry)))
  overload: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries*
  nameWithType.vb: FileInfoExtensions.UseZipArchiveEntries(FileInfo, Action(Of ReadOnlyCollection(Of ZipArchiveEntry)), Func(Of ReadOnlyCollection(Of ZipArchiveEntry), ReadOnlyCollection(Of ZipArchiveEntry)))
  fullName.vb: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo, System.Action(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry)), System.Func(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry), System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry)))
  name.vb: UseZipArchiveEntries(FileInfo, Action(Of ReadOnlyCollection(Of ZipArchiveEntry)), Func(Of ReadOnlyCollection(Of ZipArchiveEntry), ReadOnlyCollection(Of ZipArchiveEntry)))
- uid: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo)
  commentId: M:Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo)
  id: WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo)
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: WriteZipArchiveEntry(FileInfo, FileInfo)
  nameWithType: FileInfoExtensions.WriteZipArchiveEntry(FileInfo, FileInfo)
  fullName: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo, System.IO.FileInfo)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: WriteZipArchiveEntry
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 90
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Write zip archive entry with <xref href="System.IO.Compression.CompressionLevel.Optimal" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void WriteZipArchiveEntry(this FileInfo archiveInfo, FileInfo fileInfo)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: The file and/or directory info.
    - id: fileInfo
      type: System.IO.FileInfo
      description: The file information.
    content.vb: Public Shared Sub WriteZipArchiveEntry(archiveInfo As FileInfo, fileInfo As FileInfo)
  overload: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry*
- uid: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo,System.IO.Compression.CompressionLevel)
  commentId: M:Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo,System.IO.Compression.CompressionLevel)
  id: WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo,System.IO.Compression.CompressionLevel)
  isExtensionMethod: true
  parent: Songhay.Extensions.FileInfoExtensions
  langs:
  - csharp
  - vb
  name: WriteZipArchiveEntry(FileInfo, FileInfo, CompressionLevel)
  nameWithType: FileInfoExtensions.WriteZipArchiveEntry(FileInfo, FileInfo, CompressionLevel)
  fullName: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo, System.IO.FileInfo, System.IO.Compression.CompressionLevel)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/FileInfoExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: WriteZipArchiveEntry
    path: SonghayCore/Extensions/FileInfoExtensions.cs
    startLine: 99
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Write zip archive entry.
  example: []
  syntax:
    content: public static void WriteZipArchiveEntry(this FileInfo archiveInfo, FileInfo fileInfo, CompressionLevel compressionLevel)
    parameters:
    - id: archiveInfo
      type: System.IO.FileInfo
      description: The file and/or directory info.
    - id: fileInfo
      type: System.IO.FileInfo
      description: The file information.
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: The <xref href="System.IO.Compression.CompressionLevel" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub WriteZipArchiveEntry(archiveInfo As FileInfo, fileInfo As FileInfo, compressionLevel As CompressionLevel)
  overload: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry*
references:
- uid: System.IO.FileInfo
  commentId: T:System.IO.FileInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.fileinfo
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries*
  commentId: Overload:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries
  href: Songhay.Extensions.FileInfoExtensions.html#Songhay_Extensions_FileInfoExtensions_ReadZipArchiveEntries_System_IO_FileInfo_System_Action_System_String__
  name: ReadZipArchiveEntries
  nameWithType: FileInfoExtensions.ReadZipArchiveEntries
  fullName: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries
- uid: System.Action{System.String}
  commentId: T:System.Action{System.String}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<string>
  nameWithType: Action<string>
  fullName: System.Action<string>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}}
  commentId: T:System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>
  nameWithType: Func<ReadOnlyCollection<ZipArchiveEntry>, IEnumerable<ZipArchiveEntry>>
  fullName: System.Func<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>, System.Collections.Generic.IEnumerable<System.IO.Compression.ZipArchiveEntry>>
  nameWithType.vb: Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry))
  fullName.vb: System.Func(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry), System.Collections.Generic.IEnumerable(Of System.IO.Compression.ZipArchiveEntry))
  name.vb: Func(Of ReadOnlyCollection(Of ZipArchiveEntry), IEnumerable(Of ZipArchiveEntry))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine*
  commentId: Overload:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine
  href: Songhay.Extensions.FileInfoExtensions.html#Songhay_Extensions_FileInfoExtensions_ReadZipArchiveEntriesByLine_System_IO_FileInfo_System_Action_System_Int32_System_String__
  name: ReadZipArchiveEntriesByLine
  nameWithType: FileInfoExtensions.ReadZipArchiveEntriesByLine
  fullName: Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine
- uid: System.Action{System.Int32,System.String}
  commentId: T:System.Action{System.Int32,System.String}
  parent: System
  definition: System.Action`2
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<int, string>
  nameWithType: Action<int, string>
  fullName: System.Action<int, string>
  nameWithType.vb: Action(Of Integer, String)
  fullName.vb: System.Action(Of Integer, String)
  name.vb: Action(Of Integer, String)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Action`2
  commentId: T:System.Action`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-2
  name: Action<T1, T2>
  nameWithType: Action<T1, T2>
  fullName: System.Action<T1, T2>
  nameWithType.vb: Action(Of T1, T2)
  fullName.vb: System.Action(Of T1, T2)
  name.vb: Action(Of T1, T2)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.IO.Compression.ZipArchive
  commentId: T:System.IO.Compression.ZipArchive
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchive
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: Songhay.Extensions.FileInfoExtensions.UseZipArchive*
  commentId: Overload:Songhay.Extensions.FileInfoExtensions.UseZipArchive
  href: Songhay.Extensions.FileInfoExtensions.html#Songhay_Extensions_FileInfoExtensions_UseZipArchive_System_IO_FileInfo_System_Action_System_IO_Compression_ZipArchive__
  name: UseZipArchive
  nameWithType: FileInfoExtensions.UseZipArchive
  fullName: Songhay.Extensions.FileInfoExtensions.UseZipArchive
- uid: System.Action{System.IO.Compression.ZipArchive}
  commentId: T:System.Action{System.IO.Compression.ZipArchive}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ZipArchive>
  nameWithType: Action<ZipArchive>
  fullName: System.Action<System.IO.Compression.ZipArchive>
  nameWithType.vb: Action(Of ZipArchive)
  fullName.vb: System.Action(Of System.IO.Compression.ZipArchive)
  name.vb: Action(Of ZipArchive)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.IO.Compression.ZipArchive
    name: ZipArchive
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchive
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Compression.ZipArchive
    name: ZipArchive
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchive
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  commentId: T:System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  nameWithType.vb: ReadOnlyCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  name.vb: ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries*
  commentId: Overload:Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries
  href: Songhay.Extensions.FileInfoExtensions.html#Songhay_Extensions_FileInfoExtensions_UseZipArchiveEntries_System_IO_FileInfo_System_Action_System_Collections_ObjectModel_ReadOnlyCollection_System_IO_Compression_ZipArchiveEntry___
  name: UseZipArchiveEntries
  nameWithType: FileInfoExtensions.UseZipArchiveEntries
  fullName: Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries
- uid: System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
  commentId: T:System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<ReadOnlyCollection<ZipArchiveEntry>>
  nameWithType: Action<ReadOnlyCollection<ZipArchiveEntry>>
  fullName: System.Action<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>>
  nameWithType.vb: Action(Of ReadOnlyCollection(Of ZipArchiveEntry))
  fullName.vb: System.Action(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry))
  name.vb: Action(Of ReadOnlyCollection(Of ZipArchiveEntry))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: )
  - name: )
- uid: System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
  commentId: T:System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>>
  nameWithType: Func<ReadOnlyCollection<ZipArchiveEntry>, ReadOnlyCollection<ZipArchiveEntry>>
  fullName: System.Func<System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>, System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>>
  nameWithType.vb: Func(Of ReadOnlyCollection(Of ZipArchiveEntry), ReadOnlyCollection(Of ZipArchiveEntry))
  fullName.vb: System.Func(Of System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry), System.Collections.ObjectModel.ReadOnlyCollection(Of System.IO.Compression.ZipArchiveEntry))
  name.vb: Func(Of ReadOnlyCollection(Of ZipArchiveEntry), ReadOnlyCollection(Of ZipArchiveEntry))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression.ziparchiveentry
  - name: )
  - name: )
- uid: System.IO.Compression.CompressionLevel.Optimal
  commentId: F:System.IO.Compression.CompressionLevel.Optimal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.compression.compressionlevel#system-io-compression-compressionlevel-optimal
  name: Optimal
  nameWithType: CompressionLevel.Optimal
  fullName: System.IO.Compression.CompressionLevel.Optimal
- uid: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry*
  commentId: Overload:Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry
  href: Songhay.Extensions.FileInfoExtensions.html#Songhay_Extensions_FileInfoExtensions_WriteZipArchiveEntry_System_IO_FileInfo_System_IO_FileInfo_
  name: WriteZipArchiveEntry
  nameWithType: FileInfoExtensions.WriteZipArchiveEntry
  fullName: Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry
- uid: System.IO.Compression.CompressionLevel
  commentId: T:System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.compression.compressionlevel
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression
  commentId: N:System.IO.Compression
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO.Compression
  nameWithType: System.IO.Compression
  fullName: System.IO.Compression
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  - name: .
  - uid: System.IO.Compression
    name: Compression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  - name: .
  - uid: System.IO.Compression
    name: Compression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.compression
