### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.HttpClientExtensions
  commentId: T:Songhay.Extensions.HttpClientExtensions
  id: HttpClientExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  - Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri)
  - Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable)
  - Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  - Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  - Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  - Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  - Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.Action{System.Net.Http.HttpRequestMessage})
  - Songhay.Extensions.HttpClientExtensions.SendBodyAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  langs:
  - csharp
  - vb
  name: HttpClientExtensions
  nameWithType: HttpClientExtensions
  fullName: Songhay.Extensions.HttpClientExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: HttpClientExtensions
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 5
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extensions of <xref href="System.Net.Http.HttpClient" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class HttpClientExtensions
    content.vb: Public Module HttpClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  id: DeleteAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.DeleteAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient?, System.Uri?, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DeleteAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 14
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Sends a <xref href="System.Net.Http.HttpMethod.Delete" data-throw-if-not-resolved="false"></xref><xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> DeleteAsync(this HttpClient? client, Uri? uri, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function DeleteAsync(client As HttpClient, uri As Uri, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.DeleteAsync*
  nameWithType.vb: HttpClientExtensions.DeleteAsync(HttpClient, Uri, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient, System.Uri, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: DeleteAsync(HttpClient, Uri, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  id: DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.DownloadToFileAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient?, System.Uri?, string, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DownloadToFileAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 25
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Downloads resource at URI to the specified path.
  example: []
  syntax:
    content: public static Task DownloadToFileAsync(this HttpClient? client, Uri? uri, string path, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The request.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: path
      type: System.String
      description: The path.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function DownloadToFileAsync(client As HttpClient, uri As Uri, path As String, requestMessageAction As Action(Of HttpRequestMessage)) As Task
  overload: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync*
  nameWithType.vb: HttpClientExtensions.DownloadToFileAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient, System.Uri, String, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: DownloadToFileAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  commentId: M:Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  id: DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DownloadToFileAsync(HttpClient?, Uri?, string)
  nameWithType: HttpClientExtensions.DownloadToFileAsync(HttpClient?, Uri?, string)
  fullName: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient?, System.Uri?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DownloadToFileAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 59
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Downloads resource at URI to the specified path.
  example: []
  syntax:
    content: public static Task DownloadToFileAsync(this HttpClient? client, Uri? uri, string path)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The request.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: path
      type: System.String
      description: The path.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function DownloadToFileAsync(client As HttpClient, uri As Uri, path As String) As Task
  overload: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync*
  nameWithType.vb: HttpClientExtensions.DownloadToFileAsync(HttpClient, Uri, String)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient, System.Uri, String)
  name.vb: DownloadToFileAsync(HttpClient, Uri, String)
- uid: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri)
  commentId: M:Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri)
  id: DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DownloadToStringAsync(HttpClient?, Uri?)
  nameWithType: HttpClientExtensions.DownloadToStringAsync(HttpClient?, Uri?)
  fullName: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient?, System.Uri?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DownloadToStringAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 67
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Downloads resource at URI to <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<string?> DownloadToStringAsync(this HttpClient? client, Uri? uri)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The request.
    - id: uri
      type: System.Uri
      description: The URI.
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function DownloadToStringAsync(client As HttpClient, uri As Uri) As Task(Of String)
  overload: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync*
  nameWithType.vb: HttpClientExtensions.DownloadToStringAsync(HttpClient, Uri)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient, System.Uri)
  name.vb: DownloadToStringAsync(HttpClient, Uri)
- uid: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  id: DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: DownloadToStringAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.DownloadToStringAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient?, System.Uri?, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: DownloadToStringAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 84
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Downloads resource at URI to <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<string?> DownloadToStringAsync(this HttpClient? client, Uri? uri, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The request.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function DownloadToStringAsync(client As HttpClient, uri As Uri, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of String)
  overload: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync*
  nameWithType.vb: HttpClientExtensions.DownloadToStringAsync(HttpClient, Uri, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient, System.Uri, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: DownloadToStringAsync(HttpClient, Uri, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  id: GetAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: GetAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.GetAsync(HttpClient?, Uri?, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient?, System.Uri?, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 113
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Sends a <xref href="System.Net.Http.HttpMethod.Get" data-throw-if-not-resolved="false"></xref><xref href="System.Net.Http.HttpRequestMessage" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> GetAsync(this HttpClient? client, Uri? uri, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function GetAsync(client As HttpClient, uri As Uri, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.GetAsync*
  nameWithType.vb: HttpClientExtensions.GetAsync(HttpClient, Uri, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient, System.Uri, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: GetAsync(HttpClient, Uri, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable)
  commentId: M:Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable)
  id: PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PostFormAsync(HttpClient?, Uri?, Hashtable)
  nameWithType: HttpClientExtensions.PostFormAsync(HttpClient?, Uri?, Hashtable)
  fullName: Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient?, System.Uri?, System.Collections.Hashtable)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PostFormAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 126
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationFormUrlEncoded" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Post" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PostFormAsync(this HttpClient? client, Uri? uri, Hashtable formData)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: formData
      type: System.Collections.Hashtable
      description: The form data.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PostFormAsync(client As HttpClient, uri As Uri, formData As Hashtable) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PostFormAsync*
  nameWithType.vb: HttpClientExtensions.PostFormAsync(HttpClient, Uri, Hashtable)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient, System.Uri, System.Collections.Hashtable)
  name.vb: PostFormAsync(HttpClient, Uri, Hashtable)
- uid: Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable,System.Action{System.Net.Http.HttpRequestMessage})
  id: PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PostFormAsync(HttpClient?, Uri?, Hashtable, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.PostFormAsync(HttpClient?, Uri?, Hashtable, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient?, System.Uri?, System.Collections.Hashtable, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PostFormAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 139
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationFormUrlEncoded" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Post" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PostFormAsync(this HttpClient? client, Uri? uri, Hashtable formData, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: formData
      type: System.Collections.Hashtable
      description: The form data.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PostFormAsync(client As HttpClient, uri As Uri, formData As Hashtable, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PostFormAsync*
  nameWithType.vb: HttpClientExtensions.PostFormAsync(HttpClient, Uri, Hashtable, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient, System.Uri, System.Collections.Hashtable, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: PostFormAsync(HttpClient, Uri, Hashtable, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  commentId: M:Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  id: PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PostJsonAsync(HttpClient?, Uri?, string)
  nameWithType: HttpClientExtensions.PostJsonAsync(HttpClient?, Uri?, string)
  fullName: Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient?, System.Uri?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PostJsonAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 173
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationJson" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Post" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PostJsonAsync(this HttpClient? client, Uri? uri, string requestBody)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PostJsonAsync(client As HttpClient, uri As Uri, requestBody As String) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PostJsonAsync*
  nameWithType.vb: HttpClientExtensions.PostJsonAsync(HttpClient, Uri, String)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient, System.Uri, String)
  name.vb: PostJsonAsync(HttpClient, Uri, String)
- uid: Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  id: PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PostJsonAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.PostJsonAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient?, System.Uri?, string, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PostJsonAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 187
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationJson" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Post" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PostJsonAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PostJsonAsync(client As HttpClient, uri As Uri, requestBody As String, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PostJsonAsync*
  nameWithType.vb: HttpClientExtensions.PostJsonAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient, System.Uri, String, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: PostJsonAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  commentId: M:Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  id: PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PostXmlAsync(HttpClient?, Uri?, string)
  nameWithType: HttpClientExtensions.PostXmlAsync(HttpClient?, Uri?, string)
  fullName: Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient?, System.Uri?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PostXmlAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 200
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationXml" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Post" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PostXmlAsync(this HttpClient? client, Uri? uri, string requestBody)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PostXmlAsync(client As HttpClient, uri As Uri, requestBody As String) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PostXmlAsync*
  nameWithType.vb: HttpClientExtensions.PostXmlAsync(HttpClient, Uri, String)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient, System.Uri, String)
  name.vb: PostXmlAsync(HttpClient, Uri, String)
- uid: Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  id: PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PostXmlAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.PostXmlAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient?, System.Uri?, string, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PostXmlAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 214
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationXml" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Post" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PostXmlAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PostXmlAsync(client As HttpClient, uri As Uri, requestBody As String, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PostXmlAsync*
  nameWithType.vb: HttpClientExtensions.PostXmlAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient, System.Uri, String, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: PostXmlAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  commentId: M:Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  id: PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PutJsonAsync(HttpClient?, Uri?, string)
  nameWithType: HttpClientExtensions.PutJsonAsync(HttpClient?, Uri?, string)
  fullName: Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient?, System.Uri?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PutJsonAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 227
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationJson" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Put" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PutJsonAsync(this HttpClient? client, Uri? uri, string requestBody)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PutJsonAsync(client As HttpClient, uri As Uri, requestBody As String) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PutJsonAsync*
  nameWithType.vb: HttpClientExtensions.PutJsonAsync(HttpClient, Uri, String)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient, System.Uri, String)
  name.vb: PutJsonAsync(HttpClient, Uri, String)
- uid: Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  id: PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PutJsonAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.PutJsonAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient?, System.Uri?, string, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PutJsonAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 241
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationJson" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Put" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PutJsonAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PutJsonAsync(client As HttpClient, uri As Uri, requestBody As String, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PutJsonAsync*
  nameWithType.vb: HttpClientExtensions.PutJsonAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient, System.Uri, String, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: PutJsonAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  commentId: M:Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  id: PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PutXmlAsync(HttpClient?, Uri?, string)
  nameWithType: HttpClientExtensions.PutXmlAsync(HttpClient?, Uri?, string)
  fullName: Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient?, System.Uri?, string)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PutXmlAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 254
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationXml" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Put" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PutXmlAsync(this HttpClient? client, Uri? uri, string requestBody)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PutXmlAsync(client As HttpClient, uri As Uri, requestBody As String) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PutXmlAsync*
  nameWithType.vb: HttpClientExtensions.PutXmlAsync(HttpClient, Uri, String)
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient, System.Uri, String)
  name.vb: PutXmlAsync(HttpClient, Uri, String)
- uid: Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  id: PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: PutXmlAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.PutXmlAsync(HttpClient?, Uri?, string, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient?, System.Uri?, string, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: PutXmlAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 268
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified <xref href="Songhay.Models.MimeTypes.ApplicationXml" data-throw-if-not-resolved="false"></xref>

    request body using <xref href="System.Net.Http.HttpMethod.Put" data-throw-if-not-resolved="false"></xref>

    and <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> PutXmlAsync(this HttpClient? client, Uri? uri, string requestBody, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: requestBody
      type: System.String
      description: The request body.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function PutXmlAsync(client As HttpClient, uri As Uri, requestBody As String, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.PutXmlAsync*
  nameWithType.vb: HttpClientExtensions.PutXmlAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient, System.Uri, String, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: PutXmlAsync(HttpClient, Uri, String, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.Action{System.Net.Http.HttpRequestMessage})
  id: SendAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: SendAsync(HttpClient?, Uri?, HttpMethod, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.SendAsync(HttpClient?, Uri?, HttpMethod, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient?, System.Uri?, System.Net.Http.HttpMethod, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: SendAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 279
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> SendAsync(this HttpClient? client, Uri? uri, HttpMethod method, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: method
      type: System.Net.Http.HttpMethod
      description: The method.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function SendAsync(client As HttpClient, uri As Uri, method As HttpMethod, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.SendAsync*
  nameWithType.vb: HttpClientExtensions.SendAsync(HttpClient, Uri, HttpMethod, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient, System.Uri, System.Net.Http.HttpMethod, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: SendAsync(HttpClient, Uri, HttpMethod, Action(Of HttpRequestMessage))
- uid: Songhay.Extensions.HttpClientExtensions.SendBodyAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  commentId: M:Songhay.Extensions.HttpClientExtensions.SendBodyAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  id: SendBodyAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage})
  isExtensionMethod: true
  parent: Songhay.Extensions.HttpClientExtensions
  langs:
  - csharp
  - vb
  name: SendBodyAsync(HttpClient?, Uri?, HttpMethod, string?, Encoding, string?, Action<HttpRequestMessage>?)
  nameWithType: HttpClientExtensions.SendBodyAsync(HttpClient?, Uri?, HttpMethod, string?, Encoding, string?, Action<HttpRequestMessage>?)
  fullName: Songhay.Extensions.HttpClientExtensions.SendBodyAsync(System.Net.Http.HttpClient?, System.Uri?, System.Net.Http.HttpMethod, string?, System.Text.Encoding, string?, System.Action<System.Net.Http.HttpRequestMessage>?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/HttpClientExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: SendBodyAsync
    path: SonghayCore/Extensions/HttpClientExtensions.cs
    startLine: 307
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Calls <xref href="System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref>

    with the specified request body.
  example: []
  syntax:
    content: public static Task<HttpResponseMessage?> SendBodyAsync(this HttpClient? client, Uri? uri, HttpMethod method, string? requestBody, Encoding encoding, string? mediaType, Action<HttpRequestMessage>? requestMessageAction)
    parameters:
    - id: client
      type: System.Net.Http.HttpClient
      description: The client.
    - id: uri
      type: System.Uri
      description: The URI.
    - id: method
      type: System.Net.Http.HttpMethod
      description: The method.
    - id: requestBody
      type: System.String
      description: The request body.
    - id: encoding
      type: System.Text.Encoding
      description: The encoding.
    - id: mediaType
      type: System.String
      description: Type of the media.
    - id: requestMessageAction
      type: System.Action{System.Net.Http.HttpRequestMessage}
      description: The request message action.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
    content.vb: Public Shared Function SendBodyAsync(client As HttpClient, uri As Uri, method As HttpMethod, requestBody As String, encoding As Encoding, mediaType As String, requestMessageAction As Action(Of HttpRequestMessage)) As Task(Of HttpResponseMessage)
  overload: Songhay.Extensions.HttpClientExtensions.SendBodyAsync*
  nameWithType.vb: HttpClientExtensions.SendBodyAsync(HttpClient, Uri, HttpMethod, String, Encoding, String, Action(Of HttpRequestMessage))
  fullName.vb: Songhay.Extensions.HttpClientExtensions.SendBodyAsync(System.Net.Http.HttpClient, System.Uri, System.Net.Http.HttpMethod, String, System.Text.Encoding, String, System.Action(Of System.Net.Http.HttpRequestMessage))
  name.vb: SendBodyAsync(HttpClient, Uri, HttpMethod, String, Encoding, String, Action(Of HttpRequestMessage))
references:
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Net.Http.HttpMethod.Delete
  commentId: P:System.Net.Http.HttpMethod.Delete
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod.delete
  name: Delete
  nameWithType: HttpMethod.Delete
  fullName: System.Net.Http.HttpMethod.Delete
- uid: System.Net.Http.HttpRequestMessage
  commentId: T:System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: Songhay.Extensions.HttpClientExtensions.DeleteAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.DeleteAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_DeleteAsync_System_Net_Http_HttpClient_System_Uri_System_Action_System_Net_Http_HttpRequestMessage__
  name: DeleteAsync
  nameWithType: HttpClientExtensions.DeleteAsync
  fullName: Songhay.Extensions.HttpClientExtensions.DeleteAsync
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Action{System.Net.Http.HttpRequestMessage}
  commentId: T:System.Action{System.Net.Http.HttpRequestMessage}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<HttpRequestMessage>
  nameWithType: Action<HttpRequestMessage>
  fullName: System.Action<System.Net.Http.HttpRequestMessage>
  nameWithType.vb: Action(Of HttpRequestMessage)
  fullName.vb: System.Action(Of System.Net.Http.HttpRequestMessage)
  name.vb: Action(Of HttpRequestMessage)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  - name: )
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  nameWithType.vb: Task(Of HttpResponseMessage)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.HttpResponseMessage)
  name.vb: Task(Of HttpResponseMessage)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpresponsemessage
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_DownloadToFileAsync_System_Net_Http_HttpClient_System_Uri_System_String_System_Action_System_Net_Http_HttpRequestMessage__
  name: DownloadToFileAsync
  nameWithType: HttpClientExtensions.DownloadToFileAsync
  fullName: Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_DownloadToStringAsync_System_Net_Http_HttpClient_System_Uri_
  name: DownloadToStringAsync
  nameWithType: HttpClientExtensions.DownloadToStringAsync
  fullName: Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Net.Http.HttpMethod.Get
  commentId: P:System.Net.Http.HttpMethod.Get
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod.get
  name: Get
  nameWithType: HttpMethod.Get
  fullName: System.Net.Http.HttpMethod.Get
- uid: Songhay.Extensions.HttpClientExtensions.GetAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.GetAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_GetAsync_System_Net_Http_HttpClient_System_Uri_System_Action_System_Net_Http_HttpRequestMessage__
  name: GetAsync
  nameWithType: HttpClientExtensions.GetAsync
  fullName: Songhay.Extensions.HttpClientExtensions.GetAsync
- uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  commentId: M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient.sendasync#system-net-http-httpclient-sendasync(system-net-http-httprequestmessage)
  name: SendAsync(HttpRequestMessage)
  nameWithType: HttpClient.SendAsync(HttpRequestMessage)
  fullName: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
  spec.csharp:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
    name: SendAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient.sendasync#system-net-http-httpclient-sendasync(system-net-http-httprequestmessage)
  - name: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  - name: )
  spec.vb:
  - uid: System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)
    name: SendAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient.sendasync#system-net-http-httpclient-sendasync(system-net-http-httprequestmessage)
  - name: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  - name: )
- uid: Songhay.Models.MimeTypes.ApplicationFormUrlEncoded
  commentId: F:Songhay.Models.MimeTypes.ApplicationFormUrlEncoded
  href: Songhay.Models.MimeTypes.html#Songhay_Models_MimeTypes_ApplicationFormUrlEncoded
  name: ApplicationFormUrlEncoded
  nameWithType: MimeTypes.ApplicationFormUrlEncoded
  fullName: Songhay.Models.MimeTypes.ApplicationFormUrlEncoded
- uid: System.Net.Http.HttpMethod.Post
  commentId: P:System.Net.Http.HttpMethod.Post
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod.post
  name: Post
  nameWithType: HttpMethod.Post
  fullName: System.Net.Http.HttpMethod.Post
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding.utf8
  name: UTF8
  nameWithType: Encoding.UTF8
  fullName: System.Text.Encoding.UTF8
- uid: Songhay.Extensions.HttpClientExtensions.PostFormAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.PostFormAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_PostFormAsync_System_Net_Http_HttpClient_System_Uri_System_Collections_Hashtable_
  name: PostFormAsync
  nameWithType: HttpClientExtensions.PostFormAsync
  fullName: Songhay.Extensions.HttpClientExtensions.PostFormAsync
- uid: System.Collections.Hashtable
  commentId: T:System.Collections.Hashtable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.hashtable
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Songhay.Models.MimeTypes.ApplicationJson
  commentId: F:Songhay.Models.MimeTypes.ApplicationJson
  href: Songhay.Models.MimeTypes.html#Songhay_Models_MimeTypes_ApplicationJson
  name: ApplicationJson
  nameWithType: MimeTypes.ApplicationJson
  fullName: Songhay.Models.MimeTypes.ApplicationJson
- uid: Songhay.Extensions.HttpClientExtensions.PostJsonAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.PostJsonAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_PostJsonAsync_System_Net_Http_HttpClient_System_Uri_System_String_
  name: PostJsonAsync
  nameWithType: HttpClientExtensions.PostJsonAsync
  fullName: Songhay.Extensions.HttpClientExtensions.PostJsonAsync
- uid: Songhay.Models.MimeTypes.ApplicationXml
  commentId: F:Songhay.Models.MimeTypes.ApplicationXml
  href: Songhay.Models.MimeTypes.html#Songhay_Models_MimeTypes_ApplicationXml
  name: ApplicationXml
  nameWithType: MimeTypes.ApplicationXml
  fullName: Songhay.Models.MimeTypes.ApplicationXml
- uid: Songhay.Extensions.HttpClientExtensions.PostXmlAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.PostXmlAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_PostXmlAsync_System_Net_Http_HttpClient_System_Uri_System_String_
  name: PostXmlAsync
  nameWithType: HttpClientExtensions.PostXmlAsync
  fullName: Songhay.Extensions.HttpClientExtensions.PostXmlAsync
- uid: System.Net.Http.HttpMethod.Put
  commentId: P:System.Net.Http.HttpMethod.Put
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod.put
  name: Put
  nameWithType: HttpMethod.Put
  fullName: System.Net.Http.HttpMethod.Put
- uid: Songhay.Extensions.HttpClientExtensions.PutJsonAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.PutJsonAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_PutJsonAsync_System_Net_Http_HttpClient_System_Uri_System_String_
  name: PutJsonAsync
  nameWithType: HttpClientExtensions.PutJsonAsync
  fullName: Songhay.Extensions.HttpClientExtensions.PutJsonAsync
- uid: Songhay.Extensions.HttpClientExtensions.PutXmlAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.PutXmlAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_PutXmlAsync_System_Net_Http_HttpClient_System_Uri_System_String_
  name: PutXmlAsync
  nameWithType: HttpClientExtensions.PutXmlAsync
  fullName: Songhay.Extensions.HttpClientExtensions.PutXmlAsync
- uid: Songhay.Extensions.HttpClientExtensions.SendAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.SendAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_SendAsync_System_Net_Http_HttpClient_System_Uri_System_Net_Http_HttpMethod_System_Action_System_Net_Http_HttpRequestMessage__
  name: SendAsync
  nameWithType: HttpClientExtensions.SendAsync
  fullName: Songhay.Extensions.HttpClientExtensions.SendAsync
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: Songhay.Extensions.HttpClientExtensions.SendBodyAsync*
  commentId: Overload:Songhay.Extensions.HttpClientExtensions.SendBodyAsync
  href: Songhay.Extensions.HttpClientExtensions.html#Songhay_Extensions_HttpClientExtensions_SendBodyAsync_System_Net_Http_HttpClient_System_Uri_System_Net_Http_HttpMethod_System_String_System_Text_Encoding_System_String_System_Action_System_Net_Http_HttpRequestMessage__
  name: SendBodyAsync
  nameWithType: HttpClientExtensions.SendBodyAsync
  fullName: Songhay.Extensions.HttpClientExtensions.SendBodyAsync
- uid: System.Text.Encoding
  commentId: T:System.Text.Encoding
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
