### YamlMime:ManagedReference
items:
- uid: Songhay.Tests.Extensions.AssemblyExtensions
  commentId: T:Songhay.Tests.Extensions.AssemblyExtensions
  id: AssemblyExtensions
  parent: Songhay.Tests.Extensions
  children:
  - Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
  - Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion(System.Reflection.Assembly)
  - Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion(System.Reflection.Assembly,System.String)
  - Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  langs:
  - csharp
  - vb
  name: AssemblyExtensions
  nameWithType: AssemblyExtensions
  fullName: Songhay.Tests.Extensions.AssemblyExtensions
  type: Class
  source:
    remote:
      path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: AssemblyExtensions
    path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
    startLine: 7
  assemblies:
  - SonghayCore.xUnit
  namespace: Songhay.Tests.Extensions
  summary: Extensions of <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class AssemblyExtensions
    content.vb: Public Module AssemblyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
  commentId: M:Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
  id: FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
  isExtensionMethod: true
  parent: Songhay.Tests.Extensions.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: FindNetCoreProjectDirectorySiblingInfo(Assembly, string)
  nameWithType: AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(Assembly, string)
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly, string)
  type: Method
  source:
    remote:
      path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: FindNetCoreProjectDirectorySiblingInfo
    path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
    startLine: 15
  assemblies:
  - SonghayCore.xUnit
  namespace: Songhay.Tests.Extensions
  summary: >-
    Returns the sibling <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref>

    of the directory referenced by <xref href="Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DirectoryInfo? FindNetCoreProjectDirectorySiblingInfo(this Assembly assembly, string expectedDirectoryName)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: the <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>
    - id: expectedDirectoryName
      type: System.String
      description: the name or pattern of the sibling directory (e.g. <code>*.Web</code>)
    return:
      type: System.IO.DirectoryInfo
    content.vb: Public Shared Function FindNetCoreProjectDirectorySiblingInfo(assembly As Assembly, expectedDirectoryName As String) As DirectoryInfo
  overload: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo*
  nameWithType.vb: AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(Assembly, String)
  fullName.vb: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly, String)
  name.vb: FindNetCoreProjectDirectorySiblingInfo(Assembly, String)
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion(System.Reflection.Assembly)
  commentId: M:Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion(System.Reflection.Assembly)
  id: GetDirectoryInfoOfConventionalWebProjectWithAssertion(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Songhay.Tests.Extensions.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetDirectoryInfoOfConventionalWebProjectWithAssertion(Assembly)
  nameWithType: AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion(Assembly)
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetDirectoryInfoOfConventionalWebProjectWithAssertion
    path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
    startLine: 25
  assemblies:
  - SonghayCore.xUnit
  namespace: Songhay.Tests.Extensions
  summary: >-
    Returns the sibling <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref>

    of the conventional Web project directory

    by asserting that <xref href="Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly%2cSystem.String)" data-throw-if-not-resolved="false"></xref>(<code>*.Web</code>) is valid

    with <xref href="Xunit.Assert.NotNull(System.Object)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DirectoryInfo GetDirectoryInfoOfConventionalWebProjectWithAssertion(this Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: the <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.IO.DirectoryInfo
    content.vb: Public Shared Function GetDirectoryInfoOfConventionalWebProjectWithAssertion(assembly As Assembly) As DirectoryInfo
  overload: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion*
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion(System.Reflection.Assembly,System.String)
  commentId: M:Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion(System.Reflection.Assembly,System.String)
  id: GetDirectoryInfoWithAssertion(System.Reflection.Assembly,System.String)
  isExtensionMethod: true
  parent: Songhay.Tests.Extensions.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetDirectoryInfoWithAssertion(Assembly, string?)
  nameWithType: AssemblyExtensions.GetDirectoryInfoWithAssertion(Assembly, string?)
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion(System.Reflection.Assembly, string?)
  type: Method
  source:
    remote:
      path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetDirectoryInfoWithAssertion
    path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
    startLine: 42
  assemblies:
  - SonghayCore.xUnit
  namespace: Songhay.Tests.Extensions
  summary: >-
    Returns <xref href="System.IO.DirectoryInfo" data-throw-if-not-resolved="false"></xref> based on the specified file segment

    and <xref href="Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    by asserting that <xref href="System.IO.DirectoryInfo.Exists" data-throw-if-not-resolved="false"></xref> is <code>true</code>

    with <xref href="Xunit.Assert.True(System.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static DirectoryInfo GetDirectoryInfoWithAssertion(this Assembly assembly, string? fileSegment)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: the <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>
    - id: fileSegment
      type: System.String
      description: the file segment, relative to the <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.IO.DirectoryInfo
    content.vb: Public Shared Function GetDirectoryInfoWithAssertion(assembly As Assembly, fileSegment As String) As DirectoryInfo
  overload: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion*
  nameWithType.vb: AssemblyExtensions.GetDirectoryInfoWithAssertion(Assembly, String)
  fullName.vb: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion(System.Reflection.Assembly, String)
  name.vb: GetDirectoryInfoWithAssertion(Assembly, String)
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  commentId: M:Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  id: GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  isExtensionMethod: true
  parent: Songhay.Tests.Extensions.AssemblyExtensions
  langs:
  - csharp
  - vb
  name: GetNetCoreProjectDirectoryInfo(Assembly)
  nameWithType: AssemblyExtensions.GetNetCoreProjectDirectoryInfo(Assembly)
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetNetCoreProjectDirectoryInfo
    path: SonghayCore.xUnit/Extensions/AssemblyExtensions.cs
    startLine: 56
  assemblies:
  - SonghayCore.xUnit
  namespace: Songhay.Tests.Extensions
  summary: >-
    Returns the path of the conventional, .NET-Solution, project directory

    with the .NET-Core file segment (<xref href="Songhay.Tests.Models.TestScalars.NetCoreRelativePathToProjectFolder" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public static DirectoryInfo GetNetCoreProjectDirectoryInfo(this Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: the <xref href="System.Reflection.Assembly" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.IO.DirectoryInfo
    content.vb: Public Shared Function GetNetCoreProjectDirectoryInfo(assembly As Assembly) As DirectoryInfo
  overload: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo*
references:
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Songhay.Tests.Extensions
  commentId: N:Songhay.Tests.Extensions
  href: Songhay.html
  name: Songhay.Tests.Extensions
  nameWithType: Songhay.Tests.Extensions
  fullName: Songhay.Tests.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Tests
    name: Tests
    href: Songhay.Tests.html
  - name: .
  - uid: Songhay.Tests.Extensions
    name: Extensions
    href: Songhay.Tests.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Tests
    name: Tests
    href: Songhay.Tests.html
  - name: .
  - uid: Songhay.Tests.Extensions
    name: Extensions
    href: Songhay.Tests.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO.DirectoryInfo
  commentId: T:System.IO.DirectoryInfo
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  commentId: M:Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  isExternal: true
  href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_GetNetCoreProjectDirectoryInfo_System_Reflection_Assembly_
  name: GetNetCoreProjectDirectoryInfo(Assembly)
  nameWithType: AssemblyExtensions.GetNetCoreProjectDirectoryInfo(Assembly)
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
  spec.csharp:
  - uid: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
    name: GetNetCoreProjectDirectoryInfo
    href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_GetNetCoreProjectDirectoryInfo_System_Reflection_Assembly_
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: )
  spec.vb:
  - uid: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo(System.Reflection.Assembly)
    name: GetNetCoreProjectDirectoryInfo
    href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_GetNetCoreProjectDirectoryInfo_System_Reflection_Assembly_
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: )
- uid: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo*
  commentId: Overload:Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo
  href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_FindNetCoreProjectDirectorySiblingInfo_System_Reflection_Assembly_System_String_
  name: FindNetCoreProjectDirectorySiblingInfo
  nameWithType: AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
  commentId: M:Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
  isExternal: true
  href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_FindNetCoreProjectDirectorySiblingInfo_System_Reflection_Assembly_System_String_
  name: FindNetCoreProjectDirectorySiblingInfo(Assembly, string)
  nameWithType: AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(Assembly, string)
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly, string)
  nameWithType.vb: AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(Assembly, String)
  fullName.vb: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly, String)
  name.vb: FindNetCoreProjectDirectorySiblingInfo(Assembly, String)
  spec.csharp:
  - uid: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
    name: FindNetCoreProjectDirectorySiblingInfo
    href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_FindNetCoreProjectDirectorySiblingInfo_System_Reflection_Assembly_System_String_
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Songhay.Tests.Extensions.AssemblyExtensions.FindNetCoreProjectDirectorySiblingInfo(System.Reflection.Assembly,System.String)
    name: FindNetCoreProjectDirectorySiblingInfo
    href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_FindNetCoreProjectDirectorySiblingInfo_System_Reflection_Assembly_System_String_
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Xunit.Assert.NotNull(System.Object)
  commentId: M:Xunit.Assert.NotNull(System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: NotNull(object)
  nameWithType: Assert.NotNull(object)
  fullName: Xunit.Assert.NotNull(object)
  nameWithType.vb: Assert.NotNull(Object)
  fullName.vb: Xunit.Assert.NotNull(Object)
  name.vb: NotNull(Object)
  spec.csharp:
  - uid: Xunit.Assert.NotNull(System.Object)
    name: NotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Xunit.Assert.NotNull(System.Object)
    name: NotNull
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion*
  commentId: Overload:Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion
  href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_GetDirectoryInfoOfConventionalWebProjectWithAssertion_System_Reflection_Assembly_
  name: GetDirectoryInfoOfConventionalWebProjectWithAssertion
  nameWithType: AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoOfConventionalWebProjectWithAssertion
- uid: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
  commentId: M:Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: GetPathFromAssembly(Assembly, string)
  nameWithType: ProgramAssemblyUtility.GetPathFromAssembly(Assembly, string)
  fullName: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly, string)
  nameWithType.vb: ProgramAssemblyUtility.GetPathFromAssembly(Assembly, String)
  fullName.vb: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly, String)
  name.vb: GetPathFromAssembly(Assembly, String)
  spec.csharp:
  - uid: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
    name: GetPathFromAssembly
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)
    name: GetPathFromAssembly
    isExternal: true
  - name: (
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.IO.DirectoryInfo.Exists
  commentId: P:System.IO.DirectoryInfo.Exists
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.directoryinfo.exists
  name: Exists
  nameWithType: DirectoryInfo.Exists
  fullName: System.IO.DirectoryInfo.Exists
- uid: Xunit.Assert.True(System.Boolean)
  commentId: M:Xunit.Assert.True(System.Boolean)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: True(bool)
  nameWithType: Assert.True(bool)
  fullName: Xunit.Assert.True(bool)
  nameWithType.vb: Assert.True(Boolean)
  fullName.vb: Xunit.Assert.True(Boolean)
  name.vb: True(Boolean)
  spec.csharp:
  - uid: Xunit.Assert.True(System.Boolean)
    name: "True"
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Xunit.Assert.True(System.Boolean)
    name: "True"
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion*
  commentId: Overload:Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion
  href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_GetDirectoryInfoWithAssertion_System_Reflection_Assembly_System_String_
  name: GetDirectoryInfoWithAssertion
  nameWithType: AssemblyExtensions.GetDirectoryInfoWithAssertion
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetDirectoryInfoWithAssertion
- uid: Songhay.Tests.Models.TestScalars.NetCoreRelativePathToProjectFolder
  commentId: F:Songhay.Tests.Models.TestScalars.NetCoreRelativePathToProjectFolder
  href: Songhay.Tests.Models.TestScalars.html#Songhay_Tests_Models_TestScalars_NetCoreRelativePathToProjectFolder
  name: NetCoreRelativePathToProjectFolder
  nameWithType: TestScalars.NetCoreRelativePathToProjectFolder
  fullName: Songhay.Tests.Models.TestScalars.NetCoreRelativePathToProjectFolder
- uid: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo*
  commentId: Overload:Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo
  href: Songhay.Tests.Extensions.AssemblyExtensions.html#Songhay_Tests_Extensions_AssemblyExtensions_GetNetCoreProjectDirectoryInfo_System_Reflection_Assembly_
  name: GetNetCoreProjectDirectoryInfo
  nameWithType: AssemblyExtensions.GetNetCoreProjectDirectoryInfo
  fullName: Songhay.Tests.Extensions.AssemblyExtensions.GetNetCoreProjectDirectoryInfo
