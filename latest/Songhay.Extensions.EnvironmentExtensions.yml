### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.EnvironmentExtensions
  commentId: T:Songhay.Extensions.EnvironmentExtensions
  id: EnvironmentExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.EnvironmentExtensions.EnvironmentVariables
  - Songhay.Extensions.EnvironmentExtensions.GetConventionalValue(System.String)
  langs:
  - csharp
  - vb
  name: EnvironmentExtensions
  nameWithType: EnvironmentExtensions
  fullName: Songhay.Extensions.EnvironmentExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/EnvironmentExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: EnvironmentExtensions
    path: SonghayCore/Extensions/EnvironmentExtensions.cs
    startLine: 7
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extensions of <xref href="System.Environment" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class EnvironmentExtensions
    content.vb: Public Module EnvironmentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.EnvironmentExtensions.EnvironmentVariables
  commentId: F:Songhay.Extensions.EnvironmentExtensions.EnvironmentVariables
  id: EnvironmentVariables
  parent: Songhay.Extensions.EnvironmentExtensions
  langs:
  - csharp
  - vb
  name: EnvironmentVariables
  nameWithType: EnvironmentExtensions.EnvironmentVariables
  fullName: Songhay.Extensions.EnvironmentExtensions.EnvironmentVariables
  type: Field
  source:
    remote:
      path: SonghayCore/Extensions/EnvironmentExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: EnvironmentVariables
    path: SonghayCore/Extensions/EnvironmentExtensions.cs
    startLine: 13
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    The conventional <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>

    of <xref href="Songhay.Models.SystemVariable" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static readonly Lazy<ICollection<SystemVariable>> EnvironmentVariables
    return:
      type: System.Lazy{System.Collections.Generic.ICollection{Songhay.Models.SystemVariable}}
    content.vb: Public Shared ReadOnly EnvironmentVariables As Lazy(Of ICollection(Of SystemVariable))
- uid: Songhay.Extensions.EnvironmentExtensions.GetConventionalValue(System.String)
  commentId: M:Songhay.Extensions.EnvironmentExtensions.GetConventionalValue(System.String)
  id: GetConventionalValue(System.String)
  parent: Songhay.Extensions.EnvironmentExtensions
  langs:
  - csharp
  - vb
  name: GetConventionalValue(string?)
  nameWithType: EnvironmentExtensions.GetConventionalValue(string?)
  fullName: Songhay.Extensions.EnvironmentExtensions.GetConventionalValue(string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/EnvironmentExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: GetConventionalValue
    path: SonghayCore/Extensions/EnvironmentExtensions.cs
    startLine: 22
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Gets the value from the conventional <xref href="System.Collections.Generic.ICollection%601" data-throw-if-not-resolved="false"></xref>

    of <xref href="Songhay.Models.SystemVariable" data-throw-if-not-resolved="false"></xref> based on the specified variable name.
  example: []
  syntax:
    content: public static string? GetConventionalValue(string? conventionalName)
    parameters:
    - id: conventionalName
      type: System.String
      description: The <xref href="Songhay.Models.SystemVariable.VariableName" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
      description: Returns <xref href="Songhay.Models.SystemVariable.VariableValue" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetConventionalValue(conventionalName As String) As String
  overload: Songhay.Extensions.EnvironmentExtensions.GetConventionalValue*
  nameWithType.vb: EnvironmentExtensions.GetConventionalValue(String)
  fullName.vb: Songhay.Extensions.EnvironmentExtensions.GetConventionalValue(String)
  name.vb: GetConventionalValue(String)
references:
- uid: System.Environment
  commentId: T:System.Environment
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.environment
  name: Environment
  nameWithType: Environment
  fullName: System.Environment
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Models.SystemVariable
  commentId: T:Songhay.Models.SystemVariable
  href: Songhay.Models.SystemVariable.html
  name: SystemVariable
  nameWithType: SystemVariable
  fullName: Songhay.Models.SystemVariable
- uid: System.Lazy{System.Collections.Generic.ICollection{Songhay.Models.SystemVariable}}
  commentId: T:System.Lazy{System.Collections.Generic.ICollection{Songhay.Models.SystemVariable}}
  parent: System
  definition: System.Lazy`1
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<ICollection<SystemVariable>>
  nameWithType: Lazy<ICollection<SystemVariable>>
  fullName: System.Lazy<System.Collections.Generic.ICollection<Songhay.Models.SystemVariable>>
  nameWithType.vb: Lazy(Of ICollection(Of SystemVariable))
  fullName.vb: System.Lazy(Of System.Collections.Generic.ICollection(Of Songhay.Models.SystemVariable))
  name.vb: Lazy(Of ICollection(Of SystemVariable))
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: Songhay.Models.SystemVariable
    name: SystemVariable
    href: Songhay.Models.SystemVariable.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: Songhay.Models.SystemVariable
    name: SystemVariable
    href: Songhay.Models.SystemVariable.html
  - name: )
  - name: )
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Models.SystemVariable.VariableName
  commentId: P:Songhay.Models.SystemVariable.VariableName
  href: Songhay.Models.SystemVariable.html#Songhay_Models_SystemVariable_VariableName
  name: VariableName
  nameWithType: SystemVariable.VariableName
  fullName: Songhay.Models.SystemVariable.VariableName
- uid: Songhay.Models.SystemVariable.VariableValue
  commentId: P:Songhay.Models.SystemVariable.VariableValue
  href: Songhay.Models.SystemVariable.html#Songhay_Models_SystemVariable_VariableValue
  name: VariableValue
  nameWithType: SystemVariable.VariableValue
  fullName: Songhay.Models.SystemVariable.VariableValue
- uid: Songhay.Extensions.EnvironmentExtensions.GetConventionalValue*
  commentId: Overload:Songhay.Extensions.EnvironmentExtensions.GetConventionalValue
  href: Songhay.Extensions.EnvironmentExtensions.html#Songhay_Extensions_EnvironmentExtensions_GetConventionalValue_System_String_
  name: GetConventionalValue
  nameWithType: EnvironmentExtensions.GetConventionalValue
  fullName: Songhay.Extensions.EnvironmentExtensions.GetConventionalValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
