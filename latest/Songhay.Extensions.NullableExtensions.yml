### YamlMime:ManagedReference
items:
- uid: Songhay.Extensions.NullableExtensions
  commentId: T:Songhay.Extensions.NullableExtensions
  id: NullableExtensions
  parent: Songhay.Extensions
  children:
  - Songhay.Extensions.NullableExtensions.IsAssignableToISerializable``1(``0)
  - Songhay.Extensions.NullableExtensions.Round(System.Nullable{System.Decimal},System.Int32)
  - Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  - Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace(System.String,System.String)
  - Songhay.Extensions.NullableExtensions.ToObjectOrDbNull``1(``0)
  - Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow``1(``0,System.String)
  - Songhay.Extensions.NullableExtensions.ToValueOrThrow``1(System.Nullable{``0},System.String)
  langs:
  - csharp
  - vb
  name: NullableExtensions
  nameWithType: NullableExtensions
  fullName: Songhay.Extensions.NullableExtensions
  type: Class
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: NullableExtensions
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 5
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Extensions of <code>Nullable</code> types.
  example: []
  syntax:
    content: public static class NullableExtensions
    content.vb: Public Module NullableExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Songhay.Extensions.NullableExtensions.IsAssignableToISerializable``1(``0)
  commentId: M:Songhay.Extensions.NullableExtensions.IsAssignableToISerializable``1(``0)
  id: IsAssignableToISerializable``1(``0)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: IsAssignableToISerializable<T>(T?)
  nameWithType: NullableExtensions.IsAssignableToISerializable<T>(T?)
  fullName: Songhay.Extensions.NullableExtensions.IsAssignableToISerializable<T>(T?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: IsAssignableToISerializable
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 21
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Determines whether the specified type

    can be assigned to <xref href="System.Runtime.Serialization.ISerializable" data-throw-if-not-resolved="false"></xref>.
  remarks: >-
    For detail, see https://stackoverflow.com/a/945528/22944.

    For background, see https://manski.net/2014/10/net-serializers-comparison-chart/

    and https://github.com/BryanWilhite/SonghayCore/issues/76
  example: []
  syntax:
    content: public static bool IsAssignableToISerializable<T>(this T? nullable)
    parameters:
    - id: nullable
      type: '{T}'
      description: the nullable
    typeParameters:
    - id: T
      description: the specified type
    return:
      type: System.Boolean
      description: <code>true</code> if the specified throw exception is serializable; otherwise, <code>false</code>.
    content.vb: Public Shared Function IsAssignableToISerializable(Of T)(nullable As T) As Boolean
  overload: Songhay.Extensions.NullableExtensions.IsAssignableToISerializable*
  nameWithType.vb: NullableExtensions.IsAssignableToISerializable(Of T)(T)
  fullName.vb: Songhay.Extensions.NullableExtensions.IsAssignableToISerializable(Of T)(T)
  name.vb: IsAssignableToISerializable(Of T)(T)
- uid: Songhay.Extensions.NullableExtensions.Round(System.Nullable{System.Decimal},System.Int32)
  commentId: M:Songhay.Extensions.NullableExtensions.Round(System.Nullable{System.Decimal},System.Int32)
  id: Round(System.Nullable{System.Decimal},System.Int32)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: Round(decimal?, int)
  nameWithType: NullableExtensions.Round(decimal?, int)
  fullName: Songhay.Extensions.NullableExtensions.Round(decimal?, int)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: Round
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 32
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: Rounds the specified decimal.
  remarks: For more detail see http://anderly.com/2009/08/08/silverlight-midpoint-rounding-solution/
  example: []
  syntax:
    content: public static decimal Round(this decimal? nullable, int decimals)
    parameters:
    - id: nullable
      type: System.Nullable{System.Decimal}
      description: The decimal nullable.
    - id: decimals
      type: System.Int32
      description: The decimals.
    return:
      type: System.Decimal
    content.vb: Public Shared Function Round(nullable As Decimal?, decimals As Integer) As Decimal
  overload: Songhay.Extensions.NullableExtensions.Round*
  nameWithType.vb: NullableExtensions.Round(Decimal?, Integer)
  fullName.vb: Songhay.Extensions.NullableExtensions.Round(Decimal?, Integer)
  name.vb: Round(Decimal?, Integer)
- uid: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  id: ThrowWhenNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: ThrowWhenNullOrEmpty<T>(IEnumerable<T>?, string?)
  nameWithType: NullableExtensions.ThrowWhenNullOrEmpty<T>(IEnumerable<T>?, string?)
  fullName: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ThrowWhenNullOrEmpty
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 48
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Throws an <xref href="System.ArgumentNullException" data-throw-if-not-resolved="false"></xref>

    when the specified enumerable is null or empty.
  example: []
  syntax:
    content: public static void ThrowWhenNullOrEmpty<T>(this IEnumerable<T>? enumerable, string? paramName = null)
    parameters:
    - id: enumerable
      type: System.Collections.Generic.IEnumerable{{T}}
      description: the <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>
    - id: paramName
      type: System.String
      description: the name of the variable holding the <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>
    typeParameters:
    - id: T
      description: the type of the <xref href="System.Collections.Generic.IEnumerable%601" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub ThrowWhenNullOrEmpty(Of T)(enumerable As IEnumerable(Of T), paramName As String = Nothing)
  overload: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty*
  nameWithType.vb: NullableExtensions.ThrowWhenNullOrEmpty(Of T)(IEnumerable(Of T), String)
  fullName.vb: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: ThrowWhenNullOrEmpty(Of T)(IEnumerable(Of T), String)
- uid: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace(System.String,System.String)
  commentId: M:Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace(System.String,System.String)
  id: ThrowWhenNullOrWhiteSpace(System.String,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: ThrowWhenNullOrWhiteSpace(string?, string?)
  nameWithType: NullableExtensions.ThrowWhenNullOrWhiteSpace(string?, string?)
  fullName: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace(string?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ThrowWhenNullOrWhiteSpace
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 77
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Throws an <xref href="System.ArgumentNullException" data-throw-if-not-resolved="false"></xref>

    when <xref href="System.String.IsNullOrWhiteSpace(System.String)" data-throw-if-not-resolved="false"></xref> is <code>true</code>.
  remarks: >-
    This member borrows heavily from <xref href="System.ArgumentNullException.ThrowIfNull(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.


    The <xref href="System.Diagnostics.CodeAnalysis.NotNullAttribute" data-throw-if-not-resolved="false"></xref> is applied to this member based

    on the following statement from Microsoft:


    “Callers can pass a variable with the null nullable,

    but the argument is guaranteed to never be null

    if the method returns without throwing an exception.”


    [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]
  example: []
  syntax:
    content: public static void ThrowWhenNullOrWhiteSpace(this string? nullable, string? paramName = null)
    parameters:
    - id: nullable
      type: System.String
      description: the nullable <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    - id: paramName
      type: System.String
      description: the name of the variable holding the <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Sub ThrowWhenNullOrWhiteSpace(nullable As String, paramName As String = Nothing)
  overload: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace*
  nameWithType.vb: NullableExtensions.ThrowWhenNullOrWhiteSpace(String, String)
  fullName.vb: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace(String, String)
  name.vb: ThrowWhenNullOrWhiteSpace(String, String)
- uid: Songhay.Extensions.NullableExtensions.ToObjectOrDbNull``1(``0)
  commentId: M:Songhay.Extensions.NullableExtensions.ToObjectOrDbNull``1(``0)
  id: ToObjectOrDbNull``1(``0)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: ToObjectOrDbNull<T>(T?)
  nameWithType: NullableExtensions.ToObjectOrDbNull<T>(T?)
  fullName: Songhay.Extensions.NullableExtensions.ToObjectOrDbNull<T>(T?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToObjectOrDbNull
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 92
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Boxes the nullable in <xref href="System.Object" data-throw-if-not-resolved="false"></xref>

    or returns <xref href="System.DBNull" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static object ToObjectOrDbNull<T>(this T? nullable)
    parameters:
    - id: nullable
      type: '{T}'
      description: the nullable
    typeParameters:
    - id: T
    return:
      type: System.Object
    content.vb: Public Shared Function ToObjectOrDbNull(Of T)(nullable As T) As Object
  overload: Songhay.Extensions.NullableExtensions.ToObjectOrDbNull*
  nameWithType.vb: NullableExtensions.ToObjectOrDbNull(Of T)(T)
  fullName.vb: Songhay.Extensions.NullableExtensions.ToObjectOrDbNull(Of T)(T)
  name.vb: ToObjectOrDbNull(Of T)(T)
- uid: Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow``1(``0,System.String)
  commentId: M:Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow``1(``0,System.String)
  id: ToReferenceTypeValueOrThrow``1(``0,System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: ToReferenceTypeValueOrThrow<T>(T?, string?)
  nameWithType: NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?)
  fullName: Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow<T>(T?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToReferenceTypeValueOrThrow
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 114
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Returns the non-null value of the specified, nullable reference type

    or throws an <xref href="System.ArgumentNullException" data-throw-if-not-resolved="false"></xref>

    when the value is null.
  remarks: >-
    This member borrows heavily from <xref href="System.ArgumentNullException.ThrowIfNull(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.


    The <xref href="System.Diagnostics.CodeAnalysis.NotNullAttribute" data-throw-if-not-resolved="false"></xref> is applied to this member based

    on the following statement from Microsoft:


    “Callers can pass a variable with the null nullable,

    but the argument is guaranteed to never be null

    if the method returns without throwing an exception.”


    [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]
  example: []
  syntax:
    content: 'public static T ToReferenceTypeValueOrThrow<T>(this T? nullable, string? paramName = null) where T : class?'
    parameters:
    - id: nullable
      type: '{T}'
      description: the nullable
    - id: paramName
      type: System.String
      description: the name of the variable holding the nullable
    typeParameters:
    - id: T
      description: the type
    return:
      type: '{T}'
    content.vb: Public Shared Function ToReferenceTypeValueOrThrow(Of T As Class)(nullable As T, paramName As String = Nothing) As T
  overload: Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow*
  nameWithType.vb: NullableExtensions.ToReferenceTypeValueOrThrow(Of T)(T, String)
  fullName.vb: Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow(Of T)(T, String)
  name.vb: ToReferenceTypeValueOrThrow(Of T)(T, String)
- uid: Songhay.Extensions.NullableExtensions.ToValueOrThrow``1(System.Nullable{``0},System.String)
  commentId: M:Songhay.Extensions.NullableExtensions.ToValueOrThrow``1(System.Nullable{``0},System.String)
  id: ToValueOrThrow``1(System.Nullable{``0},System.String)
  isExtensionMethod: true
  parent: Songhay.Extensions.NullableExtensions
  langs:
  - csharp
  - vb
  name: ToValueOrThrow<T>(T?, string?)
  nameWithType: NullableExtensions.ToValueOrThrow<T>(T?, string?)
  fullName: Songhay.Extensions.NullableExtensions.ToValueOrThrow<T>(T?, string?)
  type: Method
  source:
    remote:
      path: SonghayCore/Extensions/NullableExtensions.cs
      branch: dev/version-8.0.0
      repo: git@github.com:BryanWilhite/SonghayCore.git
    id: ToValueOrThrow
    path: SonghayCore/Extensions/NullableExtensions.cs
    startLine: 144
  assemblies:
  - SonghayCore
  namespace: Songhay.Extensions
  summary: >-
    Returns the non-null value of the specified value type

    or throws an <xref href="System.ArgumentNullException" data-throw-if-not-resolved="false"></xref>

    when the value is null.
  remarks: >-
    This member borrows heavily from <xref href="System.ArgumentNullException.ThrowIfNull(System.Object%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.


    The <xref href="System.Diagnostics.CodeAnalysis.NotNullAttribute" data-throw-if-not-resolved="false"></xref> is applied to this member based

    on the following statement from Microsoft:


    “Callers can pass a variable with the null nullable,

    but the argument is guaranteed to never be null

    if the method returns without throwing an exception.”


    [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]
  example: []
  syntax:
    content: 'public static T ToValueOrThrow<T>(this T? nullable, string? paramName = null) where T : struct'
    parameters:
    - id: nullable
      type: System.Nullable{{T}}
      description: the nullable
    - id: paramName
      type: System.String
      description: the name of the variable holding the nullable
    typeParameters:
    - id: T
      description: the type
    return:
      type: '{T}'
    content.vb: Public Shared Function ToValueOrThrow(Of T As Structure)(nullable As T?, paramName As String = Nothing) As T
  overload: Songhay.Extensions.NullableExtensions.ToValueOrThrow*
  nameWithType.vb: NullableExtensions.ToValueOrThrow(Of T)(T?, String)
  fullName.vb: Songhay.Extensions.NullableExtensions.ToValueOrThrow(Of T)(T?, String)
  name.vb: ToValueOrThrow(Of T)(T?, String)
references:
- uid: Songhay.Extensions
  commentId: N:Songhay.Extensions
  href: Songhay.html
  name: Songhay.Extensions
  nameWithType: Songhay.Extensions
  fullName: Songhay.Extensions
  spec.csharp:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
  spec.vb:
  - uid: Songhay
    name: Songhay
    href: Songhay.html
  - name: .
  - uid: Songhay.Extensions
    name: Extensions
    href: Songhay.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Songhay.Extensions.NullableExtensions.IsAssignableToISerializable*
  commentId: Overload:Songhay.Extensions.NullableExtensions.IsAssignableToISerializable
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_IsAssignableToISerializable__1___0_
  name: IsAssignableToISerializable
  nameWithType: NullableExtensions.IsAssignableToISerializable
  fullName: Songhay.Extensions.NullableExtensions.IsAssignableToISerializable
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Songhay.Extensions.NullableExtensions.Round*
  commentId: Overload:Songhay.Extensions.NullableExtensions.Round
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_Round_System_Nullable_System_Decimal__System_Int32_
  name: Round
  nameWithType: NullableExtensions.Round
  fullName: Songhay.Extensions.NullableExtensions.Round
- uid: System.Nullable{System.Decimal}
  commentId: T:System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal?
  nameWithType: decimal?
  fullName: decimal?
  nameWithType.vb: Decimal?
  fullName.vb: Decimal?
  name.vb: Decimal?
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '?'
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty*
  commentId: Overload:Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_ThrowWhenNullOrEmpty__1_System_Collections_Generic_IEnumerable___0__System_String_
  name: ThrowWhenNullOrEmpty
  nameWithType: NullableExtensions.ThrowWhenNullOrEmpty
  fullName: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String.IsNullOrWhiteSpace(System.String)
  commentId: M:System.String.IsNullOrWhiteSpace(System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string.isnullorwhitespace
  name: IsNullOrWhiteSpace(string)
  nameWithType: string.IsNullOrWhiteSpace(string)
  fullName: string.IsNullOrWhiteSpace(string)
  nameWithType.vb: String.IsNullOrWhiteSpace(String)
  fullName.vb: String.IsNullOrWhiteSpace(String)
  name.vb: IsNullOrWhiteSpace(String)
  spec.csharp:
  - uid: System.String.IsNullOrWhiteSpace(System.String)
    name: IsNullOrWhiteSpace
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string.isnullorwhitespace
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.String.IsNullOrWhiteSpace(System.String)
    name: IsNullOrWhiteSpace
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string.isnullorwhitespace
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentNullException.ThrowIfNull(System.Object,System.String)
  commentId: M:System.ArgumentNullException.ThrowIfNull(System.Object,System.String)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception.throwifnull#system-argumentnullexception-throwifnull(system-object-system-string)
  name: ThrowIfNull(object, string)
  nameWithType: ArgumentNullException.ThrowIfNull(object, string)
  fullName: System.ArgumentNullException.ThrowIfNull(object, string)
  nameWithType.vb: ArgumentNullException.ThrowIfNull(Object, String)
  fullName.vb: System.ArgumentNullException.ThrowIfNull(Object, String)
  name.vb: ThrowIfNull(Object, String)
  spec.csharp:
  - uid: System.ArgumentNullException.ThrowIfNull(System.Object,System.String)
    name: ThrowIfNull
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception.throwifnull#system-argumentnullexception-throwifnull(system-object-system-string)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ArgumentNullException.ThrowIfNull(System.Object,System.String)
    name: ThrowIfNull
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception.throwifnull#system-argumentnullexception-throwifnull(system-object-system-string)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Diagnostics.CodeAnalysis.NotNullAttribute
  commentId: T:System.Diagnostics.CodeAnalysis.NotNullAttribute
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.diagnostics.codeanalysis.notnullattribute
  name: NotNullAttribute
  nameWithType: NotNullAttribute
  fullName: System.Diagnostics.CodeAnalysis.NotNullAttribute
- uid: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace*
  commentId: Overload:Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_ThrowWhenNullOrWhiteSpace_System_String_System_String_
  name: ThrowWhenNullOrWhiteSpace
  nameWithType: NullableExtensions.ThrowWhenNullOrWhiteSpace
  fullName: Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace
- uid: System.DBNull
  commentId: T:System.DBNull
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.dbnull
  name: DBNull
  nameWithType: DBNull
  fullName: System.DBNull
- uid: Songhay.Extensions.NullableExtensions.ToObjectOrDbNull*
  commentId: Overload:Songhay.Extensions.NullableExtensions.ToObjectOrDbNull
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_ToObjectOrDbNull__1___0_
  name: ToObjectOrDbNull
  nameWithType: NullableExtensions.ToObjectOrDbNull
  fullName: Songhay.Extensions.NullableExtensions.ToObjectOrDbNull
- uid: Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow*
  commentId: Overload:Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_ToReferenceTypeValueOrThrow__1___0_System_String_
  name: ToReferenceTypeValueOrThrow
  nameWithType: NullableExtensions.ToReferenceTypeValueOrThrow
  fullName: Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow
- uid: Songhay.Extensions.NullableExtensions.ToValueOrThrow*
  commentId: Overload:Songhay.Extensions.NullableExtensions.ToValueOrThrow
  href: Songhay.Extensions.NullableExtensions.html#Songhay_Extensions_NullableExtensions_ToValueOrThrow__1_System_Nullable___0__System_String_
  name: ToValueOrThrow
  nameWithType: NullableExtensions.ToValueOrThrow
  fullName: Songhay.Extensions.NullableExtensions.ToValueOrThrow
- uid: System.Nullable{{T}}
  commentId: T:System.Nullable{``0}
  parent: System
  definition: System.Nullable`1
  name: T?
  nameWithType: T?
  fullName: T?
  spec.csharp:
  - name: T
  - name: '?'
  spec.vb:
  - name: T
  - name: '?'
