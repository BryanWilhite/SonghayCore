<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SonghayCore</name>
    </assembly>
    <members>
        <member name="T:Songhay.Abstractions.IActivity">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions.
            </summary>
            <remarks>
            For more detail, see “Songhay System Activities example”
            [https://github.com/BryanWilhite/Songhay.HelloWorlds.Activities]
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivity.Start">
            <summary>
            Starts with the specified input.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IActivity`1">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <remarks>
            For more detail, see “Songhay System Activities example”
            [https://github.com/BryanWilhite/Songhay.HelloWorlds.Activities]
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivity`1.Start(`0)">
            <summary>
            Starts with the specified input.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="T:Songhay.Abstractions.IActivity`2">
            <summary>
            Defines an Activity with output, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <seealso cref="T:Songhay.Abstractions.IActivity`1" />
        </member>
        <member name="M:Songhay.Abstractions.IActivity`2.Start(`0)">
            <summary>
            Starts with the specified input
            and synchronously returns <c>TOutput</c>.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="T:Songhay.Abstractions.IActivityHelpDisplay">
            <summary>
            Adds optional help-display text support to <c>IActivity*</c> types.
            </summary>
        </member>
        <member name="M:Songhay.Abstractions.IActivityHelpDisplay.DisplayHelp">
            <summary>
            Display the help text.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IActivityHelpDisplay.CachedHelpText">
            <summary>
            The cached help text.
            </summary>
            <remarks>
            Instead of calling <see cref="M:Songhay.Extensions.IConfigurationExtensions.ToHelpDisplayText(Microsoft.Extensions.Configuration.IConfiguration,System.Int32)"/> more than once, return this member.
            </remarks>
        </member>
        <member name="T:Songhay.Abstractions.IActivityOutputOnly`1">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions, with <see cref="T:System.Threading.Tasks.Task"/> support.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <seealso cref="T:Songhay.Abstractions.IActivity" />
            <remarks>
            For detail around why this definition exists,
            see https://github.com/BryanWilhite/SonghayCore/issues/83
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivityOutputOnly`1.Start">
            <summary>
            Starts the <see cref="T:Songhay.Abstractions.IActivity" /> asynchronously.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IActivityOutputOnlyTask`1">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions, with <see cref="T:System.Threading.Tasks.Task"/> support.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <seealso cref="T:Songhay.Abstractions.IActivity" />
            <remarks>
            For detail around why this definition exists,
            see https://github.com/BryanWilhite/SonghayCore/issues/83
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivityOutputOnlyTask`1.StartAsync">
            <summary>
            Starts the <see cref="T:Songhay.Abstractions.IActivity" /> asynchronously.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IActivityTask">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions, with <see cref="T:System.Threading.Tasks.Task"/> support.
            </summary>
            <seealso cref="T:Songhay.Abstractions.IActivity" />
            <remarks>
            For detail around why this definition exists,
            see https://github.com/BryanWilhite/SonghayCore/issues/83
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivityTask.StartAsync">
            <summary>
            Starts the <see cref="T:Songhay.Abstractions.IActivity"/> asynchronously.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IActivityTask`1">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions, with <see cref="T:System.Threading.Tasks.Task"/> support.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <seealso cref="T:Songhay.Abstractions.IActivity" />
            <remarks>
            For detail around why this definition exists,
            see https://github.com/BryanWilhite/SonghayCore/issues/83
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivityTask`1.StartAsync(`0)">
            <summary>
            Starts the <see cref="T:Songhay.Abstractions.IActivity" /> asynchronously.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="T:Songhay.Abstractions.IActivityTask`2">
            <summary>
            Defines an Activity, optionally for <see cref="T:Microsoft.Extensions.Hosting.IHost"/> conventions, with <see cref="T:System.Threading.Tasks.Task"/> support.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <seealso cref="T:Songhay.Abstractions.IActivity" />
            <remarks>
            For detail aound why this definition exists,
            see https://github.com/BryanWilhite/SonghayCore/issues/83
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IActivityTask`2.StartAsync(`0)">
            <summary>
            Starts the <see cref="T:Songhay.Abstractions.IActivity"/> asynchronously.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IColorable">
            <summary>
            Defines a colorable visual.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IColorable.BackgroundHex">
            <summary>
            Gets or sets the background hexadecimal value.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IColorable.ForegroundHex">
            <summary>
            Gets or sets the foreground hexadecimal value.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IGroupable">
            <summary>
            Defines a group-able visual
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IGroupable.GroupDisplayText">
            <summary>
            Display text of the Group
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IGroupable.GroupId">
            <summary>
            Identifier of the Group
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IGroupable.IsCollapsed">
            <summary>
            Returns `true` when group is visually collapsed
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IProgramAssemblyInfo">
            <summary>
            Contract for <see cref="T:Songhay.Models.ProgramAssemblyInfo"/>
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyCompany">
            <summary>
            Gets the assembly company.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyCopyright">
            <summary>
            Gets the assembly copyright.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyDescription">
            <summary>
            Gets the assembly description.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyProduct">
            <summary>
            Gets the assembly product.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyTitle">
            <summary>
            Gets the assembly title.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyVersion">
            <summary>
            Gets the assembly version.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.IProgramAssemblyInfo.AssemblyVersionDetail">
            <summary>
            Gets the assembly version detail.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.IRepository">
            <summary>
            Defines the repository pattern for an Entity.
            </summary>
            <remarks>
            Based on the NBlog repository by Chris Fulstow
            [https://github.com/ChrisFulstow/NBlog/blob/master/NBlog.Web/Application/Storage/IRepository.cs]
            </remarks>
        </member>
        <member name="M:Songhay.Abstractions.IRepository.DeleteEntity``1(System.Object)">
            <summary>
            Deletes the entity.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:Songhay.Abstractions.IRepository.HasEntity``1(System.Object)">
            <summary>
            Determines whether the specified key has entity.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:Songhay.Abstractions.IRepository.LoadAll``1">
            <summary>
            Loads all.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:Songhay.Abstractions.IRepository.LoadSingle``1(System.Object)">
            <summary>
            Loads the single.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:Songhay.Abstractions.IRepository.SaveEntity``1(``0)">
            <summary>
            Saves the entity.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="item">The item.</param>
        </member>
        <member name="T:Songhay.Abstractions.ISelectable">
            <summary>
            Defines a selectable visual.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ISelectable.IsDefaultSelection">
            <summary>
            Gets or sets whether this is default selection.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ISelectable.IsEnabled">
            <summary>
            Gets or sets whether this is enabled.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ISelectable.IsSelected">
            <summary>
            Gets or sets whether this is selected.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.ISortable">
            <summary>
            Defines a sortable visual.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ISortable.SortOrdinal">
            <summary>
            Gets or sets the sort ordinal.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.ISyndicatable">
            <summary>
            Specifies that a Model supports syndication.
            </summary>
        </member>
        <member name="M:Songhay.Abstractions.ISyndicatable.GetSyndicationFeed">
            <summary>
            Gets the syndication feed.
            </summary>
        </member>
        <member name="M:Songhay.Abstractions.ISyndicatable.GetSyndicationItem">
            <summary>
            Gets the syndication item.
            </summary>
        </member>
        <member name="T:Songhay.Abstractions.ITemporal">
            <summary>
            Adds temporal properties to an item
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ITemporal.EndDate">
            <summary>
            End/expiration <see cref="T:System.DateTime"/> of the item.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ITemporal.InceptDate">
            <summary>
            Origin <see cref="T:System.DateTime"/> of the item.
            </summary>
        </member>
        <member name="P:Songhay.Abstractions.ITemporal.ModificationDate">
            <summary>
            Modification/editorial <see cref="T:System.DateTime"/> of the item.
            </summary>
        </member>
        <member name="T:Songhay.AzureActiveDirectoryUtility">
             <summary>
             Shared routines for Azure Active Directory conventions.
             </summary>
             <remarks>
             These utilities are expecting a JSON <see cref="T:System.String"/> of the form:
             <code>
             {
                "ActiveDirectoryAccess": {
                    "ApiBase": "https://login.microsoftonline.com/",
                    "ClaimsSet": {
                        "grant_type": "client_credentials",
                        "scope": "https://vault.azure.net/.default",
                        "client_id": "active-directory-registration-app-id",
                        "client_secret": "active-directory-registration-app-secret",
                        "tenantOrDirectoryId": "active-directory-registration-app-directory-id"
                    },
                    "UriTemplates": {
                        "UriPathTemplateForToken": "{tenantOrDirectoryId}/oauth2/v2.0/token"
                    }
                },
                "AzureKeyVault": {
                    "ApiBase": "https://your-secrets.vault.azure.net/",
                    "ClaimsSet": {
                        "queryPairForApiVersion": "api-version=2016-10-01",
                        "secretNameForMySecret": "my-secret"
                    },
                    "UriTemplates": {
                        "UriPathTemplateForSecret": "secrets/{secretName}"
                    }
                }
            }
             </code>
            
             For security reasons, a very small precaution, this class will not hold any fields.
             </remarks>
        </member>
        <member name="M:Songhay.AzureActiveDirectoryUtility.GetActiveDirectoryAccessMetadata(System.String)">
            <summary>
            Returns the <see cref="T:Songhay.Models.RestApiMetadata"/> corresponding
            to the conventional property name <c>"ActiveDirectoryAccess"</c>.
            </summary>
            <param name="json">JSON of the format shown in the remarks of this class definition.</param>
        </member>
        <member name="M:Songhay.AzureActiveDirectoryUtility.GetAzureKeyVaultMetadata(System.String)">
            <summary>
            Returns the <see cref="T:Songhay.Models.RestApiMetadata"/> corresponding
            to the conventional property name <c>"ActiveDirectoryAccess"</c>.
            </summary>
            <param name="json">JSON of the format shown in the remarks of this class definition.</param>
        </member>
        <member name="T:Songhay.AzureBlobStorageRestApiUtility">
            <summary>
            Shared REST routines for Azure BLOB Storage.
            </summary>
        </member>
        <member name="M:Songhay.AzureBlobStorageRestApiUtility.GetStorageUriBuilder(System.String,System.String)">
            <summary>
            Builds the URI for Azure BLOB Storage.
            </summary>
            <param name="accountName">Azure BLOB Storage account name</param>
            <param name="containerName">Azure BLOB Storage container name</param>
            <returns>Returns the <see cref="T:System.UriBuilder"/></returns>
        </member>
        <member name="M:Songhay.AzureBlobStorageRestApiUtility.GetCloudStorageMetadata(System.String)">
            <summary>
            Gets the conventional Azure BLOB Storage metadata
            from the specified connection string.
            </summary>
            <param name="connectionString">Azure BLOB Storage connection string</param>
            <returns>Returns conventional named tuple.</returns>
            <exception cref="T:System.NullReferenceException"></exception>
            <exception cref="T:System.Data.DataException"></exception>
        </member>
        <member name="M:Songhay.AzureBlobStorageRestApiUtility.DeleteBlobAsync(System.String,System.String,System.String)">
            <summary>
            <c>DELETE</c>s the BLOB of the specified ‘file’ name.
            </summary>
            <param name="connectionString">Azure BLOB Storage connection string</param>
            <param name="containerName">Azure BLOB Storage container name</param>
            <param name="fileName">BLOB ‘file’ name</param>
            <exception cref="T:System.Net.Http.HttpRequestException"></exception>
        </member>
        <member name="M:Songhay.AzureBlobStorageRestApiUtility.DownloadBlobToStringAsync(System.String,System.String,System.String)">
            <summary>
            <c>GET</c>s the BLOB of the specified ‘file’ name.
            </summary>
            <param name="connectionString">Azure BLOB Storage connection string</param>
            <param name="containerName">Azure BLOB Storage container name</param>
            <param name="fileName">BLOB ‘file’ name</param>
            <returns>Returns the <see cref="T:System.String"/> contents of the file.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException"></exception>
        </member>
        <member name="M:Songhay.AzureBlobStorageRestApiUtility.ListContainerAsync(System.String,System.String)">
            <summary>
            Lists the contents of the specified BLOB container.
            </summary>
            <param name="connectionString">Azure BLOB Storage connection string</param>
            <param name="containerName">Azure BLOB Storage container name</param>
            <returns>Returns the contents of the container as an XML<see cref="T:System.String"/>.</returns>
            <exception cref="T:System.Net.Http.HttpRequestException"></exception>
        </member>
        <member name="M:Songhay.AzureBlobStorageRestApiUtility.UploadBlobAsync(System.String,System.String,System.String,System.String)">
            <summary>
            <c>PUT</c>s the BLOB of the specified ‘file’ name.
            </summary>
            <param name="connectionString">Azure BLOB Storage connection string</param>
            <param name="containerName">Azure BLOB Storage container name</param>
            <param name="fileName">BLOB ‘file’ name</param>
            <param name="content">The <see cref="T:System.String"/> contents of the ‘file.’</param>
            <exception cref="T:System.Net.Http.HttpRequestException"></exception>
        </member>
        <member name="T:Songhay.AzureKeyVaultRestApiUtility">
            <summary>
            Shared REST routines for Azure BLOB Storage.
            </summary>
            <remarks>
            See “How To Access Azure Key Vault Secrets Through Rest API Using Postman” by Anupam Maiti
            [ https://www.c-sharpcorner.com/article/how-to-access-azure-key-vault-secrets-through-rest-api-using-postman/ ]
            </remarks>
        </member>
        <member name="M:Songhay.AzureKeyVaultRestApiUtility.GetAccessTokenAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})">
             <summary>
             Calls the specified REST endpoint, using OAuth to authenticate the specified access data.
             </summary>
             <param name="accessUri">the location of the Azure Active Directory endpoint</param>
             <param name="accessData">the data required to <c>POST</c> to the specified endpoint</param>
             <remarks>
             The conventional way to generate the <c>accessUri</c> is via <see cref="T:Songhay.Models.RestApiMetadata"/>,
             its <see cref="M:Songhay.Extensions.RestApiMetadataExtensions.ToAzureActiveDirectoryAccessTokenUri(Songhay.Models.RestApiMetadata)"/> method.
            
             The conventional way to generate the <c>accessData</c> is via <see cref="T:Songhay.Models.RestApiMetadata"/>,
             its <see cref="M:Songhay.Extensions.RestApiMetadataExtensions.ToAzureActiveDirectoryAccessTokenData(Songhay.Models.RestApiMetadata)"/> method.
             </remarks>
        </member>
        <member name="M:Songhay.AzureKeyVaultRestApiUtility.GetSecretAsync(System.String,System.Uri)">
            <summary>
            Calls REST endpoint under <c>{vaultName}.vault.azure.net</c>
            to get a secret from the specified vault.
            </summary>
            <param name="accessToken">the JSON obtained from <see cref="M:Songhay.AzureKeyVaultRestApiUtility.GetAccessTokenAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})" /></param>
            <param name="secretUri">the location of the Azure Key Vault endpoint</param>
            <remarks>
            The conventional way to generate the <c>secretUri</c> is via <see cref="T:Songhay.Models.RestApiMetadata"/>,
            its <see cref="M:Songhay.Extensions.RestApiMetadataExtensions.ToAzureKeyVaultSecretUri(Songhay.Models.RestApiMetadata,System.String)"/> method.
            </remarks>
        </member>
        <member name="T:Songhay.Diagnostics.TraceSources">
            <summary>
            Singleton wrapper for <see cref="T:System.Diagnostics.TraceSource"/>
            </summary>
            <remarks>
            Based on Fonlow.Diagnostics by Zijian Huang [https://github.com/zijianhuang/Fonlow.Diagnostics]
            Also see “Use TraceSource Efficiently” [http://www.codeproject.com/Tips/1071853/Use-TraceSource-Efficiently]
            </remarks>
        </member>
        <member name="F:Songhay.Diagnostics.TraceSources.DefaultTraceSourceName">
            <summary>
            The conventional <see cref="T:System.Diagnostics.TraceSource"/> name.
            </summary>
        </member>
        <member name="P:Songhay.Diagnostics.TraceSources.ConfiguredTraceSourceName">
            <summary>
            The configured trace source name
            </summary>
        </member>
        <member name="P:Songhay.Diagnostics.TraceSources.IsConfiguredTraceSourceNameLoaded">
            <summary>
            The is configured trace source name loaded?
            </summary>
        </member>
        <member name="M:Songhay.Diagnostics.TraceSources.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Songhay.Diagnostics.TraceSources"/> class from being created.
            </summary>
        </member>
        <member name="M:Songhay.Diagnostics.TraceSources.GetTraceSourceFromConfiguredName">
            <summary>
            Gets the name of the trace source from configuration.
            </summary>
            <remarks>
            When the trace source name is not configured
            then <see cref="F:Songhay.Diagnostics.TraceSources.DefaultTraceSourceName"/> is used.
            </remarks>
        </member>
        <member name="M:Songhay.Diagnostics.TraceSources.GetTraceSource(System.String)">
            <summary>
            Gets the trace source.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Songhay.Diagnostics.TraceSources.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Diagnostics.TraceSource"/> with the specified name.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Songhay.Diagnostics.TraceSources.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Songhay.Exceptions.CsvParseException">
            <summary>
            Exception for CSV parsing
            in <see cref="M:Songhay.Extensions.StringExtensions.CsvSplit(System.String)"/>.
            </summary>
        </member>
        <member name="M:Songhay.Exceptions.CsvParseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Exceptions.CsvParseException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Songhay.Exceptions.CsvParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Exceptions.CsvParseException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Songhay.Extensions.ArrayExtensions">
            <summary>
            Extensions of <see cref="T:System.Array"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.ArrayExtensions.Next``1(System.Array,``0)">
            <summary>
            Gets the next item in the specified <see cref="T:System.Array"/>.
            </summary>
            <typeparam name="T">The array <see cref="T:System.Type"/>.</typeparam>
            <param name="array">The array.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Songhay.Extensions.ArrayExtensions.Previous``1(System.Array,``0)">
            <summary>
            Gets the previous item in the specified <see cref="T:System.Array"/>.
            </summary>
            <typeparam name="T">The array <see cref="T:System.Type"/>.</typeparam>
            <param name="array">The array.</param>
            <param name="item">The item.</param>
        </member>
        <member name="T:Songhay.Extensions.AssemblyExtensions">
            <summary>Extensions of <see cref="T:System.Reflection.Assembly"/>.</summary>
        </member>
        <member name="M:Songhay.Extensions.AssemblyExtensions.GetPathFromAssembly(System.Reflection.Assembly)">
            <summary>Gets the path from assembly.</summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:Songhay.Extensions.AssemblyExtensions.GetPathFromAssembly(System.Reflection.Assembly,System.String)">
            <summary>Gets the path from assembly.</summary>
            <param name="assembly">The assembly.</param>
            <param name="fileSegment">The file segment.</param>
        </member>
        <member name="T:Songhay.Extensions.ByteExtensions">
            <summary>
            Extensions of <see cref="T:System.Byte"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.ByteExtensions.ToStreamReader(System.Byte[])">
            <summary>
            Converts the specified <see cref="T:System.Byte"/> array to a <see cref="T:System.IO.StreamReader"/>
            with <see cref="P:System.Text.Encoding.UTF8"/>.
            </summary>
            <param name="bytes">the bytes</param>
        </member>
        <member name="M:Songhay.Extensions.ByteExtensions.ToStreamReader(System.Byte[],System.Text.Encoding)">
            <summary>
            Converts the specified <see cref="T:System.Byte"/> array to a <see cref="T:System.IO.StreamReader"/>.
            </summary>
            <param name="bytes">the bytes</param>
            <param name="encoding">the encoding</param>
            <remarks>
            This member is useful in the world of ASP.NET when there is a need
            to read a <see cref="T:System.String"/> from the bytes of a <c>MultipartSection"</c>.
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.CharExtensions">
            <summary>
            Extension of <see cref="T:System.Char"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.CharExtensions.FromCharsToString(System.Collections.Generic.IEnumerable{System.Char})">
            <summary>
            Converts an enumeration of <see cref="T:System.Char"/>
            to <see cref="T:System.String"/>.
            </summary>
            <param name="chars">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> of <see cref="T:System.Char"/>.</param>
        </member>
        <member name="T:Songhay.Extensions.ConfigurationManagerExtensions">
            <summary>
            Extensions of <see cref="T:Microsoft.Extensions.Configuration.ConfigurationManager"/>
            </summary>
            <remarks>
            Several members in this class depend on <see cref="T:Songhay.Models.DeploymentEnvironment"/> constants.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String)">
            <summary>
            Gets the connection name from environment.
            </summary>
            <param name="collection">The collection.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String)">
            <summary>
            Gets the connection name from environment.
            </summary>
            <param name="collection">The collection.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.Boolean)">
            <summary>
            Gets the connection name from environment.
            </summary>
            <param name="collection">The collection.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionNameFromEnvironment(System.Configuration.ConnectionStringSettingsCollection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the connection name from environment.
            </summary>
            <param name="collection">The collection.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="delimiter">The delimiter.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String)">
            <summary>
            Gets the connection string settings.
            </summary>
            <param name="collection">The collection.</param>
            <param name="connectionName">Name of the connection.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetConnectionStringSettings(System.Configuration.ConnectionStringSettingsCollection,System.String,System.Boolean)">
            <summary>
            Gets the connection string settings.
            </summary>
            <param name="collection">The collection.</param>
            <param name="connectionName">Name of the connection.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection)">
            <summary>
            Gets the name of the conventional deployment environment.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String)">
            <summary>
            Gets the name of the conventional deployment environment.
            </summary>
            <param name="settings">The settings.</param>
            <param name="environmentKey">The environment key.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)">
            <summary>
            Gets the name of the conventional deployment environment.
            </summary>
            <param name="settings">The settings.</param>
            <param name="environmentKey">The environment key.</param>
            <param name="defaultEnvironmentName">Default name of the environment.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)">
            <summary>
            Gets the name of the conventional deployment environment.
            </summary>
            <param name="settings">The settings.</param>
            <param name="environmentKey">The environment key.</param>
            <param name="defaultEnvironmentName">Default name of the environment.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String)">
            <summary>
            Gets the name of the key with environment.
            </summary>
            <param name="settings">The settings.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String)">
            <summary>
            Gets the key with environment name.
            </summary>
            <param name="settings">The settings.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="delimiter">The delimiter.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.Boolean)">
            <summary>
            Gets the name of the key with environment.
            </summary>
            <param name="settings">The settings.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> [throw configuration errors exception].</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetKeyWithEnvironmentName(System.Configuration.KeyValueConfigurationCollection,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the key with environment name.
            </summary>
            <param name="settings">The settings.</param>
            <param name="unqualifiedKey">The unqualified key.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="delimiter">The delimiter.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String)">
            <summary>
            Gets the setting from the current <see cref="T:System.Configuration.KeyValueConfigurationCollection"/>.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean)">
            <summary>
            Gets the setting from the current <see cref="T:System.Configuration.KeyValueConfigurationCollection"/>.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.GetSetting(System.Configuration.KeyValueConfigurationCollection,System.String,System.Boolean,System.Func{System.String,System.String})">
            <summary>
            Gets the setting from the current <see cref="T:System.Configuration.KeyValueConfigurationCollection"/>.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <param name="throwConfigurationErrorsException">if set to <c>true</c> throw configuration errors exception.</param>
            <param name="settingModifier">The setting modifier.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.ToAppSettings(System.Xml.Linq.XDocument)">
            <summary>
            Converts the external configuration file
            to the application settings <see cref="T:System.Configuration.KeyValueConfigurationCollection"/>.
            </summary>
            <param name="externalConfigurationDoc">The external configuration document.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.ToConnectionStringSettingsCollection(System.Xml.Linq.XDocument)">
            <summary>
            Converts the external configuration file
            to the application settings <see cref="T:System.Configuration.ConnectionStringSettingsCollection"/>.
            </summary>
            <param name="externalConfigurationDoc">The external configuration document.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.WithAppSettings(System.Configuration.KeyValueConfigurationCollection,System.Xml.Linq.XDocument)">
            <summary>
            Returns <see cref="T:System.Configuration.KeyValueConfigurationCollection" />
            with the application settings
            of the specified external configuration <see cref="T:System.Xml.Linq.XDocument" />.
            </summary>
            <param name="settings">The settings.</param>
            <param name="externalConfigurationDoc">The external configuration document.</param>
        </member>
        <member name="M:Songhay.Extensions.ConfigurationManagerExtensions.WithConnectionStringSettingsCollection(System.Configuration.ConnectionStringSettingsCollection,System.Xml.Linq.XDocument)">
            <summary>
            Returns <see cref="T:System.Configuration.ConnectionStringSettingsCollection" />
            with the application settings
            of the specified external configuration <see cref="T:System.Xml.Linq.XDocument" />.
            </summary>
            <param name="collection">The collection.</param>
            <param name="externalConfigurationDoc">The external configuration document.</param>
        </member>
        <member name="T:Songhay.Extensions.DataSetExtensions">
            <summary>
            Extensions of <see cref="T:System.Data.DataSet"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DataSetExtensions.ToFirstTableDataRows(System.Data.DataSet)">
            <summary>
            Converts the <see cref="T:System.Data.DataSet"/> into a first table data rows.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:Songhay.Extensions.DataSetExtensions.ToFirstTableFirstColumn(System.Data.DataSet)">
            <summary>
            Converts the <see cref="T:System.Data.DataSet"/> into a first table first column.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:Songhay.Extensions.DataSetExtensions.ToFirstTableFirstColumn``1(System.Data.DataSet)">
            <summary>
            Converts the <see cref="T:System.Data.DataSet"/> into a first table first column.
            </summary>
            <typeparam name="TColumn">The type of the column.</typeparam>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:Songhay.Extensions.DataSetExtensions.ToFirstTableRows(System.Data.DataSet)">
            <summary>
            Converts the <see cref="T:System.Data.DataSet"/> into a first table rows.
            </summary>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="M:Songhay.Extensions.DataSetExtensions.ToFirstTableRows``2(System.Data.DataSet)">
            <summary>
            Converts the <see cref="T:System.Data.DataSet"/> into a first table rows.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dataSet">The data set.</param>
        </member>
        <member name="T:Songhay.Extensions.DateTimeExtensions">
            <summary>
            Extensions of <see cref="T:System.DateTime"/>.
            </summary>
            <summary>
            Extensions of <see cref="T:System.DateTime"/>.
            </summary>
            <remarks>
            From Jon Skeet’s Miscellaneous Utility Library
            Copyright (c) 2004-2008 Jon Skeet and Marc Gravell.
            All rights reserved.
            [http://www.pobox.com/~skeet/csharp/miscutil]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.GetNextWeekday(System.DateTime,System.DayOfWeek)">
             <summary>
             Gets the next weekday.
             </summary>
             <param name="start">The start.</param>
             <param name="day">The day.</param>
             <remarks>
             by Jon Skeet
            
             For more detail, see:
             http://stackoverflow.com/questions/6346119/asp-net-get-the-next-tuesday
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.ToIso8601String(System.DateTime)">
            <summary>
            Converts the specified <see cref="T:System.DateTime"/>
            to the JSON-friendly ISO_8601 text format.
            </summary>
            <param name="dateTime">the <see cref="T:System.DateTime"/></param>
            <remarks>
            📖 https://en.wikipedia.org/wiki/ISO_8601
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.January(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in January
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.February(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in February
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.March(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in March
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.April(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in April
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.May(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in May
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.June(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in June
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.July(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in July
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.August(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in August
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.September(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in September
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.October(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in October
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.November(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in November
            in the specified year.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DateTimeExtensions.December(System.Int32,System.Int32)">
            <summary>
            Returns a DateTime representing the specified day in December
            in the specified year.
            </summary>
        </member>
        <member name="T:Songhay.Extensions.DbDataReaderExtensions">
            <summary>
            Extensions of <see cref="T:System.Data.Common.DbDataReader"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DbDataReaderExtensions.GetFieldValueOrDefault``1(System.Data.Common.DbDataReader,System.String)">
            <summary>
            Gets the field value or default.
            </summary>
            <typeparam name="TRow"></typeparam>
            <param name="reader">The reader.</param>
            <param name="fieldName">Name of the field.</param>
            <remarks>
            This member is a primitive alternative to using something like Dapper’s
            <c>QueryAsync{TRow}</c>, suitable for a handful of columns.
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.DirectoryInfoExtensions">
            <summary>Extensions of <see cref="T:System.IO.DirectoryInfo"/>.</summary>
        </member>
        <member name="M:Songhay.Extensions.DirectoryInfoExtensions.FindDirectory(System.IO.DirectoryInfo,System.String)">
            <summary>
            Finds the specified target <see cref="T:System.IO.DirectoryInfo"/>
            under the specified root <see cref="T:System.IO.DirectoryInfo"/>.
            </summary>
            <param name="directoryInfo">The specified root <see cref="T:System.IO.DirectoryInfo"/>.</param>
            <param name="expectedDirectoryName">The specified target <see cref="P:System.IO.DirectoryInfo.Name"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.DirectoryInfoExtensions.FindFile(System.IO.DirectoryInfo,System.String)">
            <summary>
            Finds the specified <see cref="T:System.IO.FileInfo"/>
            under the specified <see cref="T:System.IO.DirectoryInfo"/>.
            </summary>
            <param name="directoryInfo">The specified <see cref="T:System.IO.DirectoryInfo"/>.</param>
            <param name="expectedFileName">The specified <see cref="P:System.IO.FileInfo.Name"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.DirectoryInfoExtensions.GetParentDirectory(System.IO.DirectoryInfo,System.Int32)">
            <summary>Gets the parent directory.</summary>
            <param name="directoryInfo">The specified <see cref="T:System.IO.DirectoryInfo"/>.</param>
            <param name="levels">The levels.</param>
            <returns>Returns a <see cref="T:System.String"/> representing the directory.</returns>
        </member>
        <member name="M:Songhay.Extensions.DirectoryInfoExtensions.GetParentDirectoryInfo(System.IO.DirectoryInfo,System.Int32)">
            <summary>Gets the parent <see cref="T:System.IO.DirectoryInfo"/>.</summary>
            <param name="directoryInfo">The specified <see cref="T:System.IO.DirectoryInfo"/>.</param>
            <param name="levels">The levels.</param>
        </member>
        <member name="M:Songhay.Extensions.DirectoryInfoExtensions.ToCombinedPath(System.IO.DirectoryInfo,System.String)">
            <summary>
            Combines path and root based
            on the current value of <see cref="F:System.IO.Path.DirectorySeparatorChar"/>
            of the current OS or passes through a drive-letter rooted path.</summary>
            <param name="directoryInfo">The specified <see cref="T:System.IO.DirectoryInfo"/>.</param>
            <param name="path">The path.</param>
            <remarks>
            For detail, see https://github.com/BryanWilhite/SonghayCore/issues/14
            and <see cref="M:Songhay.ProgramFileUtility.GetCombinedPath(System.String,System.String)" />.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.DirectoryInfoExtensions.VerifyDirectory(System.IO.DirectoryInfo,System.String)">
            <summary>
            Verifies the specified <see cref="T:System.IO.DirectoryInfo"/>
            with conventional error handling.
            </summary>
            <param name="directoryInfo">The specified <see cref="T:System.IO.DirectoryInfo"/>.</param>
            <param name="expectedDirectoryName">The expected directory name.</param>
        </member>
        <member name="T:Songhay.Extensions.DisplayItemModelExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.Models.DisplayItemModel"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.DisplayItemModelExtensions.HasTag(Songhay.Models.DisplayItemModel,System.Func{System.Object,System.Boolean})">
            <summary>
            Returns <c>true</c> when the item has the <see cref="P:Songhay.Models.DisplayItemModel.Tag"/>
            based on the specified evaluator.
            </summary>
            <param name="data">The <see cref="T:Songhay.Models.DisplayItemModel"/>.</param>
            <param name="evaluator">The predicate for evaluating <see cref="P:Songhay.Models.DisplayItemModel.Tag"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.DisplayItemModelExtensions.ToMenuDisplayItemModel(Songhay.Models.DisplayItemModel)">
            <summary>
            Converts the <see cref="T:Songhay.Models.DisplayItemModel"/> into a menu display item model.
            </summary>
            <param name="data">The <see cref="T:Songhay.Models.DisplayItemModel"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.DisplayItemModelExtensions.WithTag(Songhay.Models.DisplayItemModel,System.Object)">
            <summary>
            Fluently sets <see cref="P:Songhay.Models.DisplayItemModel.Tag"/>.
            </summary>
            <param name="data">The <see cref="T:Songhay.Models.DisplayItemModel"/>.</param>
            <param name="tag">The value of <see cref="P:Songhay.Models.DisplayItemModel.Tag"/>.</param>
        </member>
        <member name="T:Songhay.Extensions.EnumExtensions">
            <summary>
            Extensions of <see cref="T:System.Enum"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.EnumExtensions.GetEnumDescription(System.Enum)">
            <summary>
            Gets any conventional <see cref="P:System.ComponentModel.DescriptionAttribute.Description"/>
            applied to an <see cref="T:System.Enum"/>.
            </summary>
            <param name="value">The <see cref="T:System.Enum"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.EnumExtensions.GetEnumValues(System.Enum)">
            <summary>
            Gets the result of <see cref="M:System.Enum.GetValues(System.Type)"/>
            based on the specified <see cref="T:System.Enum"/>.
            </summary>
            <param name="value">The <see cref="T:System.Enum"/>.</param>
        </member>
        <member name="T:Songhay.Extensions.EnvironmentExtensions">
            <summary>
            Extensions of <see cref="T:System.Environment"/>.
            </summary>
        </member>
        <member name="F:Songhay.Extensions.EnvironmentExtensions.EnvironmentVariables">
            <summary>
            The conventional <see cref="T:System.Collections.Generic.ICollection`1"/>
            of <see cref="T:Songhay.Models.SystemVariable"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.EnvironmentExtensions.GetConventionalValue(System.String)">
            <summary>
            Gets the value from the conventional <see cref="T:System.Collections.Generic.ICollection`1"/>
            of <see cref="T:Songhay.Models.SystemVariable"/> based on the specified variable name.
            </summary>
            <param name="conventionalName">The <see cref="P:Songhay.Models.SystemVariable.VariableName"/>.</param>
            <returns>Returns <see cref="P:Songhay.Models.SystemVariable.VariableValue"/>.</returns>
        </member>
        <member name="T:Songhay.Extensions.FileInfoExtensions">
            <summary>
            Extension of <see cref="T:System.IO.FileInfo"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String})">
            <summary>
            Read zip archive entries.
            </summary>
            <param name="archiveInfo">The <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="fileAction">The file action.</param>
            <remarks>
            Use <c>entriesProjector</c> for any filtering or sorting.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Read zip archive entries.
            </summary>
            <param name="archiveInfo">The <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="fileAction">The file action.</param>
            <param name="entriesProjector">The entries projector.</param>
            <remarks>
            Use <c>entriesProjector</c> for any filtering or sorting.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String})">
            <summary>
            Read zip archive entries as strings, line by line.
            </summary>
            <param name="archiveInfo">The file and/or directory info.</param>
            <param name="lineAction">The line action.</param>
            <remarks>
            This member is designed for compressed text documents that are too large to load into memory.
            The <c>fileAction</c> includes the line number and the current line.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Read zip archive entries as strings, line by line.
            </summary>
            <param name="archiveInfo">The file and/or directory info.</param>
            <param name="lineAction">The line action.</param>
            <param name="entriesProjector">The filter zip archive entries.</param>
            <remarks>
            This member is designed for compressed text documents that are too large to load into memory.
            The <c>fileAction</c> includes the line number and the current line.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive})">
            <summary>
            Centralizes the use of <see cref="T:System.IO.Compression.ZipArchive"/>
            </summary>
            <param name="archiveInfo"></param>
            <param name="archiveAction"></param>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Centralizes the use of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </summary>
            <param name="archiveInfo"></param>
            <param name="entriesAction"></param>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Centralizes the use of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </summary>
            <param name="archiveInfo"></param>
            <param name="entriesAction"></param>
            <param name="entriesProjector"></param>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            Write zip archive entry with <see cref="F:System.IO.Compression.CompressionLevel.Optimal"/>.
            </summary>
            <param name="archiveInfo">The file and/or directory info.</param>
            <param name="fileInfo">The file information.</param>
        </member>
        <member name="M:Songhay.Extensions.FileInfoExtensions.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo,System.IO.Compression.CompressionLevel)">
            <summary>
            Write zip archive entry.
            </summary>
            <param name="archiveInfo">The file and/or directory info.</param>
            <param name="fileInfo">The file information.</param>
            <param name="compressionLevel">The <see cref="T:System.IO.Compression.CompressionLevel"/></param>
        </member>
        <member name="T:Songhay.Extensions.HttpClientExtensions">
            <summary>
            Extensions of <see cref="T:System.Net.Http.HttpClient"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.DeleteAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Sends a <see cref="P:System.Net.Http.HttpMethod.Delete"/>
            <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Downloads resource at URI to the specified path.
            </summary>
            <param name="client">The request.</param>
            <param name="uri">The URI.</param>
            <param name="path">The path.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.DownloadToFileAsync(System.Net.Http.HttpClient,System.Uri,System.String)">
            <summary>
            Downloads resource at URI to the specified path.
            </summary>
            <param name="client">The request.</param>
            <param name="uri">The URI.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri)">
            <summary>
            Downloads resource at URI to <see cref="T:System.String" />.
            </summary>
            <param name="client">The request.</param>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.DownloadToStringAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Downloads resource at URI to <see cref="T:System.String" />.
            </summary>
            <param name="client">The request.</param>
            <param name="uri">The URI.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.GetAsync(System.Net.Http.HttpClient,System.Uri,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Sends a <see cref="P:System.Net.Http.HttpMethod.Get"/>
            <see cref="T:System.Net.Http.HttpRequestMessage"/>.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationFormUrlEncoded" />
            request body using <see cref="P:System.Net.Http.HttpMethod.Post" />
            and <see cref="P:System.Text.Encoding.UTF8" />.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="formData">The form data.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PostFormAsync(System.Net.Http.HttpClient,System.Uri,System.Collections.Hashtable,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationFormUrlEncoded" />
            request body using <see cref="P:System.Net.Http.HttpMethod.Post" />
            and <see cref="P:System.Text.Encoding.UTF8" />.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="formData">The form data.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationJson"/>
            request body using <see cref="P:System.Net.Http.HttpMethod.Post" />
            and <see cref="P:System.Text.Encoding.UTF8"/>.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PostJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationJson" />
            request body using <see cref="P:System.Net.Http.HttpMethod.Post" />
            and <see cref="P:System.Text.Encoding.UTF8" />.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationXml"/>
            request body using <see cref="P:System.Net.Http.HttpMethod.Post" />
            and <see cref="P:System.Text.Encoding.UTF8"/>.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PostXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationXml" />
            request body using <see cref="P:System.Net.Http.HttpMethod.Post" />
            and <see cref="P:System.Text.Encoding.UTF8" />.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationJson"/>
            request body using <see cref="P:System.Net.Http.HttpMethod.Put" />
            and <see cref="P:System.Text.Encoding.UTF8"/>.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PutJsonAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationJson" />
            request body using <see cref="P:System.Net.Http.HttpMethod.Put" />
            and <see cref="P:System.Text.Encoding.UTF8" />.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationXml"/>
            request body using <see cref="P:System.Net.Http.HttpMethod.Put" />
            and <see cref="P:System.Text.Encoding.UTF8"/>.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.PutXmlAsync(System.Net.Http.HttpClient,System.Uri,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified <see cref="F:Songhay.Models.MimeTypes.ApplicationXml" />
            request body using <see cref="P:System.Net.Http.HttpMethod.Put" />
            and <see cref="P:System.Text.Encoding.UTF8" />.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="requestBody">The request body.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.SendAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="method">The method.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpClientExtensions.SendBodyAsync(System.Net.Http.HttpClient,System.Uri,System.Net.Http.HttpMethod,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified request body.
            </summary>
            <param name="client">The client.</param>
            <param name="uri">The URI.</param>
            <param name="method">The method.</param>
            <param name="requestBody">The request body.</param>
            <param name="encoding">The encoding.</param>
            <param name="mediaType">Type of the media.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="T:Songhay.Extensions.HttpRequestMessageExtensions">
            <summary>
            Extensions of <see cref="T:System.Net.Http.HttpRequestMessage"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.ToAzureStorageAuthorizationHeader(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String,System.String)">
             <summary>
             Derives the <see cref="T:System.Net.Http.Headers.AuthenticationHeaderValue"/>
             from the <see cref="T:System.Net.Http.HttpRequestMessage"/>.
             </summary>
             <param name="request">the <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
             <param name="storageAccountName">the Azure Storage account name</param>
             <param name="storageAccountKey">the Azure Storage account shared key</param>
             <param name="eTag">entity tag for Web cache validation</param>
             <param name="md5">The MD5 (message-digest algorithm) hash</param>
             <remarks>
             There are two Authorization Header schemes supported: SharedKey and SharedKeyLite. This member supports only one of them: SharedKey.
             For more detail, see “Specifying the Authorization header”
             [ https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key#specifying-the-authorization-header ]
             
             See also: “Authorize requests to Azure Storage”
             [ https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage ]
            
             See also: https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master
            
             Provide the md5 and it will check and make sure it matches the requested blob's md5.
             If it doesn't match, it won't return a value.
            
             Provide an eTag, and it will only make changes to a blob if the current eTag matches,
             to ensure you don't overwrite someone else's changes.
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.ToAzureStorageCanonicalizedHeaders(System.Net.Http.HttpRequestMessage)">
             <summary>
             Returns headers, starting with <c>x-ms-</c>,
             in a canonical format.
             </summary>
             <param name="request">the <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
             <remarks>
             See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key
            
             See http://en.wikipedia.org/wiki/Canonicalization
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.ToAzureStorageSignature(System.Net.Http.HttpRequestMessage,System.String,System.String,System.String)">
             <summary>
             Derives the raw representation of the message signature
             from the <see cref="T:System.Net.Http.HttpRequestMessage"/>.`
             </summary>
             <param name="request">the <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
             <param name="storageAccountName">The name of the storage account to use.</param>
             <param name="eTag">entity tag for Web cache validation</param>
             <param name="md5">The MD5 (message-digest algorithm) hash</param>
             <remarks>
             See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.WithAzureStorageBlockBlobContent(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Returns <see cref="T:System.Net.Http.HttpRequestMessage"/>
            with conventional headers for <see cref="T:System.Net.Http.ByteArrayContent"/>
            for Azure Storage.
            </summary>
            <param name="request">the <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
            <param name="blobName">the Azure Storage Blob name</param>
            <param name="content">the Azure Storage Blob content</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.WithAzureStorageHeaders(System.Net.Http.HttpRequestMessage,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Returns <see cref="T:System.Net.Http.HttpRequestMessage"/>
            with conventional headers for Azure Storage.
            </summary>
            <param name="request">the <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
            <param name="requestMoment">the moment of the request</param>
            <param name="serviceVersion">the version of the storage services to use for a request</param>
            <param name="storageAccountName">the Azure Storage account name</param>
            <param name="storageAccountKey">the Azure Storage account shared key</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.WithAzureStorageHeaders(System.Net.Http.HttpRequestMessage,System.DateTime,System.String,System.String,System.String,System.String,System.String)">
             <summary>
             Returns <see cref="T:System.Net.Http.HttpRequestMessage"/> with the minimum headers
             required for Azure Storage.
             </summary>
             <param name="request">the <see cref="T:System.Net.Http.HttpRequestMessage"/></param>
             <param name="requestMoment">the moment of the request</param>
             <param name="serviceVersion">the version of the storage services to use for a request</param>
             <param name="storageAccountName">the Azure Storage account name</param>
             <param name="storageAccountKey">the Azure Storage account shared key</param>
             <param name="eTag">entity tag for Web cache validation</param>
             <param name="md5">The MD5 (message-digest algorithm) hash</param>
             <remarks>
             See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key
            
             Provide the md5 and it will check and make sure it matches the requested blob's md5. If it doesn't match, it won't return a value.
             
             Provide an eTag, and it will only make changes to a blob if the current eTag matches, to ensure you don't overwrite someone else's changes.
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.GetContentAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Gets a <see cref="T:System.String"/> from the derived <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.GetContentAsync(System.Net.Http.HttpRequestMessage,System.Action{System.Net.Http.HttpResponseMessage})">
            <summary>
            Gets a <see cref="T:System.String" /> from the derived <see cref="T:System.Net.Http.HttpResponseMessage" />.
            </summary>
            <param name="request">The request.</param>
            <param name="responseMessageAction">The response message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.GetContentAsync(System.Net.Http.HttpRequestMessage,System.Action{System.Net.Http.HttpResponseMessage},System.Func{System.Net.Http.HttpClient})">
            <summary>
            Gets a <see cref="T:System.String" /> from the derived <see cref="T:System.Net.Http.HttpResponseMessage" />.
            </summary>
            <param name="request">The request.</param>
            <param name="responseMessageAction">The response message action.</param>
            <param name="optionalClientGetter">The optional client getter.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendAsync(System.Net.Http.HttpRequestMessage)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendAsync(System.Net.Http.HttpRequestMessage,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            </summary>
            <param name="request">The request.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendAsync(System.Net.Http.HttpRequestMessage,System.Action{System.Net.Http.HttpRequestMessage},System.Func{System.Net.Http.HttpClient},System.Net.Http.HttpCompletionOption)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            </summary>
            <param name="request">The request.</param>
            <param name="requestMessageAction">The request message action.</param>
            <param name="optionalClientGetter">The optional client getter.</param>
            <param name="completionOption"> the <see cref="T:System.Net.Http.HttpCompletionOption"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendBodyAsync(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified request body, <see cref="P:System.Text.Encoding.UTF8"/>
            and <see cref="F:Songhay.Models.MimeTypes.ApplicationJson"/>.
            </summary>
            <param name="request">The request.</param>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendBodyAsync(System.Net.Http.HttpRequestMessage,System.String,System.Text.Encoding,System.String)">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified request body.
            </summary>
            <param name="request">The request.</param>
            <param name="requestBody">The request body.</param>
            <param name="encoding">The encoding.</param>
            <param name="mediaType">Type of the media.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendBodyAsync(System.Net.Http.HttpRequestMessage,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified request body.
            </summary>
            <param name="request">The request.</param>
            <param name="requestBody">The request body.</param>
            <param name="encoding">The encoding.</param>
            <param name="mediaType">Type of the media.</param>
            <param name="requestMessageAction">The request message action.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpRequestMessageExtensions.SendBodyAsync(System.Net.Http.HttpRequestMessage,System.String,System.Text.Encoding,System.String,System.Action{System.Net.Http.HttpRequestMessage},System.Func{System.Net.Http.HttpClient})">
            <summary>
            Calls <see cref="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
            with the specified request body.
            </summary>
            <param name="request">The request.</param>
            <param name="requestBody">The request body.</param>
            <param name="encoding">The encoding.</param>
            <param name="mediaType">Type of the media.</param>
            <param name="requestMessageAction">The request message action.</param>
            <param name="optionalClientGetter">The optional client getter.</param>
        </member>
        <member name="T:Songhay.Extensions.HttpResponseMessageExtensions">
            <summary>
            Extensions of <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.DownloadByteArrayToFileAsync(System.Net.Http.HttpResponseMessage,System.IO.FileSystemInfo)">
            <summary>
            Downloads <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
            from <see cref="T:System.Byte"/> array to file.
            </summary>
            <param name="response">The response.</param>
            <param name="fileInfo">The file information.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.DownloadByteArrayToFileAsync(System.Net.Http.HttpResponseMessage,System.String)">
            <summary>
            Downloads <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
            from <see cref="T:System.Byte"/> array to file.
            </summary>
            <param name="response">The response.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.DownloadStringToFileAsync(System.Net.Http.HttpResponseMessage,System.IO.FileSystemInfo)">
            <summary>
            Downloads <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
            from <see cref="T:System.Byte"/> array to file.
            </summary>
            <param name="response">The response.</param>
            <param name="fileInfo">The file information.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.DownloadStringToFileAsync(System.Net.Http.HttpResponseMessage,System.String)">
            <summary>
            Downloads <see cref="P:System.Net.Http.HttpResponseMessage.Content"/>
            from <see cref="T:System.Byte"/> array to file.
            </summary>
            <param name="response">The response.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.IsMovedOrRedirected(System.Net.Http.HttpResponseMessage)">
            <summary>
            Returns <c>true</c> when <see cref="T:System.Net.Http.HttpResponseMessage"/>
            is <see cref="F:System.Net.HttpStatusCode.Moved"/>, <see cref="F:System.Net.HttpStatusCode.MovedPermanently"/>
            or <see cref="F:System.Net.HttpStatusCode.Redirect"/>.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.StreamToInstanceAsync``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            Serializes the <see cref="T:System.Net.Http.HttpResponseMessage"/>
            to the specified <c>TInstance</c>
            </summary>
            <param name="response">The response.</param>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <remarks>
            This method uses the Microsoft API to deserialize.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.HttpResponseMessageExtensions.StreamToInstanceAsync``1(System.Net.Http.HttpResponseMessage,System.Text.Json.JsonSerializerOptions)">
            <summary>
            Serializes the <see cref="T:System.Net.Http.HttpResponseMessage"/>
            to the specified <c>TInstance</c>
            </summary>
            <param name="response">The response.</param>
            <param name="options">The <see cref="T:System.Text.Json.JsonSerializerOptions"/></param>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <remarks>
            This method uses the Microsoft API to deserialize.
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.HttpWebRequestExtensions">
            <summary>
            Extensions of <see cref="T:System.Net.HttpWebRequest"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.DownloadToFile(System.Net.HttpWebRequest,System.String)">
            <summary>
            Downloads to file.
            </summary>
            <param name="request">The request.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.DownloadToFile(System.Net.HttpWebRequest,System.String,System.Uri,System.Boolean)">
            <summary>
            Downloads to file.
            </summary>
            <param name="request">The request.</param>
            <param name="path">The path.</param>
            <param name="proxyLocation">The proxy location.</param>
            <param name="bypassProxy">if set to <c>true</c> [bypass proxy].</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.DownloadToString(System.Net.HttpWebRequest)">
            <summary>
            Downloads to string.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.DownloadToString(System.Net.HttpWebRequest,System.Uri,System.Boolean)">
            <summary>
            Downloads to string.
            </summary>
            <param name="request">The request.</param>
            <param name="proxyLocation">The proxy location</param>
            <param name="bypassProxy">when <c>true</c>, bypass proxy</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.PostForm(System.Net.HttpWebRequest,System.Collections.Hashtable)">
            <summary>
            Posts the form.
            </summary>
            <param name="request">The request.</param>
            <param name="postData">The post data.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.PostForm(System.Net.HttpWebRequest,System.Collections.Hashtable,System.Uri,System.Boolean)">
            <summary>
            Posts the form.
            </summary>
            <param name="request">The request.</param>
            <param name="postData">The post data.</param>
            <param name="proxyLocation">The proxy location.</param>
            <param name="bypassProxy">if set to <c>true</c> [bypass proxy].</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.PostXml(System.Net.HttpWebRequest,System.String)">
            <summary>
            Posts the XML.
            </summary>
            <param name="request">The request.</param>
            <param name="xmlFragment">The XML fragment.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.PostXml(System.Net.HttpWebRequest,System.String,System.Uri,System.Boolean)">
            <summary>
            Posts the XML.
            </summary>
            <param name="request">The request.</param>
            <param name="xmlFragment">The XML fragment.</param>
            <param name="proxyLocation">The proxy location.</param>
            <param name="bypassProxy">if set to <c>true</c> [bypass proxy].</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.ToHttpStatusCode(System.Net.HttpWebRequest)">
            <summary>
            Converts the <see cref="T:System.Net.HttpWebRequest"/> into a HTTP status code.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.ToHttpWebResponse(System.Net.HttpWebRequest)">
            <summary>
            Converts the <see cref="T:System.Net.HttpWebRequest"/> into a HTTP web response.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.WithProxy(System.Net.HttpWebRequest,System.Uri,System.Boolean)">
            <summary>
            Returns the <see cref="T:System.Net.HttpWebRequest" />
            with a <see cref="T:System.Net.WebProxy" />.
            </summary>
            <param name="request">The request.</param>
            <param name="proxyLocation">The proxy location.</param>
            <param name="bypassProxy">if set to <c>true</c> [bypass proxy].</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.WithRequestBody(System.Net.HttpWebRequest,System.String,System.String)">
            <summary>
            Returns <see cref="T:System.Net.HttpWebRequest" /> with the request body.
            </summary>
            <param name="request">The request.</param>
            <param name="requestBody">The request body.</param>
            <param name="requestMethod">The request method.</param>
        </member>
        <member name="M:Songhay.Extensions.HttpWebRequestExtensions.WithRequestBody(System.Net.HttpWebRequest,System.String,System.String,System.String)">
            <summary>
            Returns <see cref="T:System.Net.HttpWebRequest" /> with the request body.
            </summary>
            <param name="request">The request.</param>
            <param name="requestBody">The request body.</param>
            <param name="requestMethod">The request method.</param>
            <param name="contentType">The request content type.</param>
        </member>
        <member name="T:Songhay.Extensions.IConfigurationExtensions">
            <summary>
            Extensions of <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.AddHelpDisplayText(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">the key to add</param>
            <param name="helpText">the help text to add</param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.GetBasePathValue(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Returns the value of the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.BaseDirectory"/> <c>arg</c>
            or throws <see cref="T:System.IO.DirectoryNotFoundException"/>
            when the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.BaseDirectoryRequired"/> <c>arg</c> is present.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.GetCommandLineArgValue(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Returns a value from the specified <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            by calling <see cref="M:Songhay.Extensions.StringExtensions.ToConfigurationKey(System.String)"/>
            on the specified <c>arg</c>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="arg">the command-line argument to be converted into a <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> key</param>
            <remarks>
            This member will call <see cref="M:Songhay.Extensions.StringExtensions.ToConfigurationKey(System.String)"/>
            to convert a console argument to <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>-key format.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.GetOutputPath(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Returns the value of the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/> <c>arg</c>
            and will prefix it with the value of the <see cref="F:Songhay.Models.ConsoleArgsScalars.BaseDirectory"/> <c>arg</c>
            when the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputUnderBasePath"/> <c>arg</c> is present.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.GetSettingsFilePath(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Returns the value of the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.SettingsFile"/> <c>arg</c>
            which should be a path to a text file.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.HasKey(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Returns <c>true</c> when the specified <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            contains the specified key.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="key">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> key</param>
            <remarks>
            This member will call <see cref="M:Songhay.Extensions.StringExtensions.ToConfigurationKey(System.String)"/>
            to convert a console argument to <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>-key format.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.HasKey(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.Boolean)">
             <summary>
             Returns <c>true</c> when the specified <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
             contains the specified key.
             </summary>
             <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
             <param name="key">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> key</param>
             <param name="isCommandLineSwitch">when <c>true</c>, expect a command-line “switch” like <c>--dry-run=true</c></param>
             <remarks>
             This member will call <see cref="M:Songhay.Extensions.StringExtensions.ToConfigurationKey(System.String)"/>
             to convert a console argument to <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>-key format.
            
             When <c>isCommandLineSwitch</c> is <c>true</c>, a command-line “switch” like
             <c>--dry-run=false</c> will make this member return <c>false</c>
             and <c>--dry-run=true</c> will make this member return <c>true</c>.
             For more detail, [ see https://github.com/BryanWilhite/SonghayCore/issues/177 ]
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.IsDryRun(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Determines whether <c>args</c> contain the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.DryRun"/> flag.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.IsHelpRequest(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Determines whether <c>args</c> contain the conventional <see cref="F:Songhay.Models.ConsoleArgsScalars.Help"/> flag.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.ReadSettings(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Reads the settings data in the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.SettingsFile"/>
            which could be a relative or absolute path.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.ReadStringInput(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Reads the input data in the inline <see cref="T:System.String"/>
            specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.InputString"/>
            or the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.InputFile"/>
            which could be a relative or absolute path.
            </summary>
            <param name="configuration"></param>
            <exception cref="T:System.IO.FileNotFoundException"></exception>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.ToHelpDisplayText(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Converts the specified <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            to any keys ending with <see cref="F:Songhay.Models.ConsoleArgsScalars.HelpTextSuffix"/>.
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.ToHelpDisplayText(Microsoft.Extensions.Configuration.IConfiguration,System.Int32)">
            <summary>
            Converts the specified <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            to any keys ending with <see cref="F:Songhay.Models.ConsoleArgsScalars.HelpTextSuffix"/>.
            </summary>
            <param name="configuration"></param>
            <param name="padding">the padding between keys and values</param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.ToKeys(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Converts the specified <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>
            to a collection of its underlying keys.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WithDefaultHelpText(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Returns <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> with the conventional, console, <c>args</c> help text
            for <see cref="T:Songhay.Models.ConsoleArgsScalars"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WriteOutputToFile(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Writes the <see cref="T:System.String"/> output
            to the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="output">the output to write</param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WriteOutputToFileAsync(Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Writes the <see cref="T:System.String"/> output
            to the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="output">the output to write</param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WriteOutputToFile(Microsoft.Extensions.Configuration.IConfiguration,System.Byte[])">
            <summary>
            Writes the <see cref="T:System.Byte"/> array output
            to the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="output">the output to write</param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WriteOutputToFileAsync(Microsoft.Extensions.Configuration.IConfiguration,System.Byte[])">
            <summary>
            Writes the <see cref="T:System.Byte"/> array output
            to the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="output">the output to write</param>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WriteOutputToFile(Microsoft.Extensions.Configuration.IConfiguration,System.IO.Stream)">
            <summary>
            Writes the <see cref="T:System.IO.Stream"/> output
            to the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="output">the output to write</param>
            <remarks>
            [ see https://stackoverflow.com/a/5515894/22944 ]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IConfigurationExtensions.WriteOutputToFileAsync(Microsoft.Extensions.Configuration.IConfiguration,System.IO.Stream)">
            <summary>
            Writes the <see cref="T:System.IO.Stream"/> output
            to the file specified by <see cref="F:Songhay.Models.ConsoleArgsScalars.OutputFile"/>.
            </summary>
            <param name="configuration">the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/></param>
            <param name="output">the output to write</param>
            <remarks>
            [ see https://stackoverflow.com/a/5515894/22944 ]
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.IDictionaryExtensions">
            <summary>
            Extensions of <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.ToNameValueCollection``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Converts the <see cref="T:System.Collections.Generic.IDictionary`2"/>
            to the <see cref="T:System.Collections.Specialized.NameValueCollection"/>.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The set.</param>
            <remarks>
            For detail, see https://stackoverflow.com/a/7230446/22944
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.ToShallowClone``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Converts the <see cref="T:System.Collections.Generic.IDictionary`2"/>
            to a shallow clone.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">the <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <remarks>
            For more detail see “Clone a Dictionary in C#”
            [https://www.techiedelight.com/clone-a-dictionary-in-csharp/]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.TryGetValueWithKey``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Tries to get value with the specified key.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.TryGetValueWithKey``2(System.Collections.Generic.IDictionary{``0,``1},``0,System.Boolean)">
            <summary>
            Tries to get value with the specified key.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key.</param>
            <param name="throwException">When <c>true</c>, throw an exception when retrieval fails.</param>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.WithPair``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Returns the <see cref="T:System.Collections.Generic.IDictionary`2"/>
            with the specified pair.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">the <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <param name="key">the key</param>
            <param name="value">the value</param>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.WithPair``2(System.Collections.Generic.IDictionary{``0,``1},System.Nullable{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Returns the <see cref="T:System.Collections.Generic.IDictionary`2"/>
            with the specified pair.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">the <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <param name="pair">the <see cref="T:System.Collections.Generic.KeyValuePair`2"/></param>
        </member>
        <member name="M:Songhay.Extensions.IDictionaryExtensions.WithPairs``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Returns the <see cref="T:System.Collections.Generic.IDictionary`2"/>
            with the specified pairs.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="dictionary">the <see cref="T:System.Collections.Generic.IDictionary`2"/></param>
            <param name="pairs">The pairs to add.</param>
        </member>
        <member name="T:Songhay.Extensions.IEnumerableOfTExtensions">
            <summary>
            Extensions of <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <remarks>
            When this ‘greatest hits collection’ is found to be limited,
            upgrade to MoreLinq [ see https://github.com/morelinq/MoreLINQ ]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.Flatten``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Flattens the specified source.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="childGetter">The child getter.</param>
            <remarks>
            When <c>source</c> is not already an array,
            this member will mercilessly allocate a snapshot of <c>TSource[]</c>.
            To avoid this memory pressure, upgrade to the <c>Flatten</c> method
            of MoreLinq [ see https://github.com/morelinq/MoreLINQ/blob/master/MoreLinq/Flatten.cs#L91 ]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.Flatten``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},``0)">
            <summary>
            Flattens the specified source.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="childGetter">The child getter.</param>
            <param name="flattenedHead">The flattened head.</param>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.ForEachInEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs the <see cref="T:System.Action"/>
            on each item in the enumerable object.
            </summary>
            <typeparam name="TEnumerable">The type of the enumerable.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="action">The action.</param>
            <remarks>
            “I am philosophically opposed to providing such a method, for two reasons.
            …The first reason is that doing so violates the functional programming principles
            that all the other sequence operators are based upon. Clearly the sole purpose of a call
            to this method is to cause side effects.”
            —Eric Lippert, “foreach” vs “ForEach” [http://blogs.msdn.com/b/ericlippert/archive/2009/05/18/foreach-vs-foreach.aspx]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.ForEachInEnumerable``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Performs the <see cref="T:System.Action"/>
            on each item in the enumerable object.
            </summary>
            <typeparam name="TEnumerable">The type of the enumerable.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="action">The action.</param>
            <remarks>
            This member is ruthlessly derived from <c>MoreLinq.ForEach{T}</c>
            [ see https://github.com/morelinq/MoreLINQ/blob/master/MoreLinq/ForEach.cs#L50 ].
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.Partition``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Partitions the specified source.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">The source.</param>
            <param name="size">The size.</param>
            <remarks>
            This member is by Jon Skeet.
            [http://stackoverflow.com/questions/438188/split-a-collection-into-n-parts-with-linq]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.SelectWithPrevious``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``1})">
            <summary>
            Projects the previous item with the current item.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="source">The source.</param>
            <param name="projection">The projection.</param>
            <remarks>
            “This enables you to perform your projection using only a single pass of the source sequence,
            which is always a bonus (imagine running it over a large log file).
            Note that it will project a sequence of length n into a sequence of length n-1—
            you may want to prepend a ‘dummy’ first element, for example. (Or change the method to include one.)
            Here’s an example of how you'd use it:
            <code>
            var query = list.SelectWithPrevious((prev, cur) =&gt; new { ID = cur.ID, Date = cur.Date, DateDiff = (cur.Date - prev.Date).Days);
            </code>
            Note that this will include the final result of one ID with the first result of the next ID…
            you may wish to group your sequence by ID first.”
            —Jon Skeet, “Calculate difference from previous item with LINQ”
            [http://stackoverflow.com/questions/3683105/calculate-difference-from-previous-item-with-linq/3683217#3683217]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.ToCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the <see cref="T:System.Collections.Generic.IEnumerable`1"/>
            into <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <typeparam name="TEnumerable"></typeparam>
            <param name="enumerable"></param>
            <remarks>
            For details, see “When To Use IEnumerable, ICollection, IList And List”
            [http://www.claudiobernasconi.ch/2013/07/22/when-to-use-ienumerable-icollection-ilist-and-list/]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.ToDisplayString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts the <see cref="T:System.Collections.Generic.IEnumerable`1"/> into a display string.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="data">The source.</param>
        </member>
        <member name="M:Songhay.Extensions.IEnumerableOfTExtensions.ToDisplayString``1(System.Collections.Generic.IEnumerable{``0},System.Byte)">
            <summary>
            Converts the <see cref="T:System.Collections.Generic.IEnumerable`1"/> into a display string.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="source">The source.</param>
            <param name="indent">The indent.</param>
        </member>
        <member name="T:Songhay.Extensions.ILoggerExtensions">
            <summary>
            Extensions of <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
            to assist with “structured logging.”
            </summary>
            <remarks>
            For a video overview, see https://www.youtube.com/watch?v=NlBjVJPkT6M 🎥
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Calls <see cref="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])" /> for missing data.
            </summary>
            <param name="logger">The logger.</param>
            <param name="caption">The caption.</param>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogErrorForMissingData``1(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Calls <see cref="M:Microsoft.Extensions.Logging.LoggerExtensions.LogError(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])"/> for missing data.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Logs <see cref="P:System.Environment.NewLine"/> for human readability.
            </summary>
            <param name="logger">The logger.</param>
            <param name="level">The level.</param>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogInformationNewLine(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Calls <see cref="M:Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)"/>
            for <see cref="F:Microsoft.Extensions.Logging.LogLevel.Information"/>.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogTraceDataTypeAndValue``1(Microsoft.Extensions.Logging.ILogger,``0)">
            <summary>
            Traces data type and value.
            </summary>
            <typeparam name="TData">The type of the data.</typeparam>
            <param name="logger">The logger.</param>
            <param name="data">The data.</param>
            <remarks>
            For the best results, ensure that the <see cref="M:System.Object.ToString"/> method is properly overridden.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogTraceNewLine(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Calls <see cref="M:Songhay.Extensions.ILoggerExtensions.LogNewLine(Microsoft.Extensions.Logging.ILogger,Microsoft.Extensions.Logging.LogLevel)"/>
            for <see cref="F:Microsoft.Extensions.Logging.LogLevel.Trace"/>.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Songhay.Extensions.ILoggerExtensions.LogTraceMethodCall(Microsoft.Extensions.Logging.ILogger,System.String)">
            <summary>
            Conventional trace of the specified method call.
            </summary>
            <param name="logger">The logger.</param>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="T:Songhay.Extensions.IPrincipalExtensions">
            <summary>
            Extensions of <see cref="T:System.Security.Principal.IPrincipal"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.IPrincipalExtensions.ToUserName(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Converts <see cref="T:System.Security.Principal.IPrincipal"/> to a <see cref="T:System.String"/> representation of the user’s name.
            </summary>
            <param name="principal">The principal.</param>
            <param name="defaultUserName">Default name of the user.</param>
            <returns></returns>
        </member>
        <member name="T:Songhay.Extensions.ITemporalExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.Abstractions.ITemporal"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.ITemporalExtensions.SetDefaults(Songhay.Abstractions.ITemporal)">
            <summary>
            Sets conventional default values
            for <see cref="T:Songhay.Abstractions.ITemporal"/> data.
            </summary>
            <param name="data">The <see cref="T:Songhay.Abstractions.ITemporal"/> data.</param>
        </member>
        <member name="M:Songhay.Extensions.ITemporalExtensions.SetDefaults(Songhay.Abstractions.ITemporal,System.Nullable{System.DateTime})">
            <summary>
            Sets conventional default values
            for <see cref="T:Songhay.Abstractions.ITemporal"/> data.
            </summary>
            <param name="data">The <see cref="T:Songhay.Abstractions.ITemporal"/> data.</param>
            <param name="endDate">Sets <see cref="P:Songhay.Abstractions.ITemporal.EndDate"/>.</param>
        </member>
        <member name="T:Songhay.Extensions.JsonElementExtensions">
            <summary>
            Extensions of <see cref="T:System.Text.Json.JsonElement"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Nullable{System.Text.Json.JsonElement},System.String)">
            <summary>
            Tries to return the <see cref="T:System.Text.Json.JsonElement" /> property
            of the specified <see cref="T:System.Text.Json.JsonElement" /> object.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
            <param name="elementName">The <see cref="T:System.Text.Json.JsonElement" /> name.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.GetJsonPropertyOrNull(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to return the <see cref="T:System.Text.Json.JsonElement" /> property
            of the specified <see cref="T:System.Text.Json.JsonElement" /> object.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
            <param name="elementName">The <see cref="T:System.Text.Json.JsonElement" /> name.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Nullable{System.Text.Json.JsonElement},System.Boolean)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
            <param name="supportBitStrings">When <c>true</c>, support "1" and "0" as Boolean strings.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToBoolean(System.Text.Json.JsonElement,System.Boolean)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
            <param name="supportBitStrings">When <c>true</c>, support "1" and "0" as Boolean strings.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToByte(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Byte"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToByte(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Byte"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.DateTime"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToDateTime(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Decimal"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToDecimal(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToDouble(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Double"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToDouble(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Boolean"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToGuid(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Guid"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToGuid(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Guid"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToInt(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Int32"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToInt(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Int32"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Enumerates the specified <see cref="T:System.Text.Json.JsonElement" /> array
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToJsonElementArray(System.Text.Json.JsonElement)">
            <summary>
            Enumerates the specified <see cref="T:System.Text.Json.JsonElement" /> array
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToLong(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Int64"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToLong(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.Int64"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> array
            into a collection of string values.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToReadOnlyCollection(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> array
            into a collection of string values.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.String"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToStringValue(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.String"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.String"/>.
            </summary>
            <param name="elementOrNull">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonElementExtensions.ToScalarValue``1(System.Text.Json.JsonElement)">
            <summary>
            Converts the specified <see cref="T:System.Text.Json.JsonElement" /> into a nullable <see cref="T:System.String"/>.
            </summary>
            <param name="element">The <see cref="T:System.Text.Json.JsonElement" />.</param>
        </member>
        <member name="T:Songhay.Extensions.JsonNodeExtensions">
            <summary>
            Extensions of <see cref="T:System.Text.Json.Nodes.JsonNode"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonArrayOrNull(System.Text.Json.Nodes.JsonNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Text.Json.Nodes.JsonValue"/> of the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            of <see cref="F:System.Text.Json.JsonValueKind.Array" />
            or defaults to null.
            </summary>
            <param name="node">The <see cref="T:System.Text.Json.Nodes.JsonNode"/>.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonObjectOrNull(System.Text.Json.Nodes.JsonNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Text.Json.Nodes.JsonValue"/> of the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            of <see cref="F:System.Text.Json.JsonValueKind.Object" />
            or defaults to null.
            </summary>
            <param name="node">The <see cref="T:System.Text.Json.Nodes.JsonNode"/>.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.GetPropertyJsonValueOrNull(System.Text.Json.Nodes.JsonNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Text.Json.Nodes.JsonValue"/> of the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            or defaults to null.
            </summary>
            <param name="node">The <see cref="T:System.Text.Json.Nodes.JsonNode"/>.</param>
            <param name="propertyName">Name of the property.</param>
            <remarks>
            This member will return <c>null</c> when the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            is not of:
            * <see cref="F:System.Text.Json.JsonValueKind.String" />
            * <see cref="F:System.Text.Json.JsonValueKind.Number" />
            * <see cref="F:System.Text.Json.JsonValueKind.True" />
            * <see cref="F:System.Text.Json.JsonValueKind.False" />
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.GetPropertyValue``1(System.Text.Json.Nodes.JsonNode,System.String)">
            <summary>
            Gets the property value of the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="node">The node.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.GetJsonValueKind(System.Text.Json.Nodes.JsonNode)">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonValueKind"/> of the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>.
            </summary>
            <param name="node">The node.</param>
            <remarks>
            This member is needed for .NET 6.0 and earlier.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.IsExpectedObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger,System.String[])">
            <summary>
            Determines whether the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            is the expected <see cref="T:System.Text.Json.Nodes.JsonObject"/>.
            </summary>
            <param name="node">The node.</param>
            <param name="logger">The logger.</param>
            <param name="properties">The properties.</param>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.ToJsonArray(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Converts to the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            to <see cref="T:System.Text.Json.Nodes.JsonArray"/> or logs failure and returns <c>null</c>.
            </summary>
            <param name="node">The node.</param>
            <param name="logger">The logger.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.Extensions.JsonNodeExtensions.ToJsonObject(System.Text.Json.Nodes.JsonNode,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Converts to the specified <see cref="T:System.Text.Json.Nodes.JsonNode"/>
            to <see cref="T:System.Text.Json.Nodes.JsonObject"/> or logs failure and returns <c>null</c>.
            </summary>
            <param name="node">The node.</param>
            <param name="logger">The logger.</param>
            <returns></returns>
        </member>
        <member name="T:Songhay.Extensions.MenuDisplayItemModelExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.Models.MenuDisplayItemModel"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.MenuDisplayItemModelExtensions.GetAllBy(Songhay.Models.MenuDisplayItemModel,System.Func{Songhay.Models.MenuDisplayItemModel,System.Boolean})">
            <summary>
            Gets all <see cref="T:Songhay.Models.MenuDisplayItemModel"/>
            by the specified predicate.
            </summary>
            <param name="data">the <see cref="T:Songhay.Models.MenuDisplayItemModel"/></param>
            <param name="predicate">the predicate</param>
        </member>
        <member name="M:Songhay.Extensions.MenuDisplayItemModelExtensions.HasGroupId(Songhay.Models.MenuDisplayItemModel,System.String)">
            <summary>
            Returns <c>true</c> when the grouping has the specified identifier.
            </summary>
            <param name="data">the <see cref="T:Songhay.Models.MenuDisplayItemModel"/></param>
            <param name="groupId">the <see cref="P:Songhay.Models.MenuDisplayItemModel.GroupId"/></param>
        </member>
        <member name="M:Songhay.Extensions.MenuDisplayItemModelExtensions.DefaultOrFirst(System.Collections.Generic.IEnumerable{Songhay.Models.MenuDisplayItemModel})">
            <summary>
            Returns the Default Selection
            <c>IsDefaultSelection == true</c>
            or the First <see cref="T:Songhay.Models.MenuDisplayItemModel"/>.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Songhay.Extensions.MenuDisplayItemModelExtensions.WithChildItem(Songhay.Models.MenuDisplayItemModel,Songhay.Models.MenuDisplayItemModel)">
            <summary>
            Fluently returns <see cref="T:Songhay.Models.MenuDisplayItemModel" /> with child item.
            </summary>
            <param name="data">The data.</param>
            <param name="child">The child.</param>
        </member>
        <member name="M:Songhay.Extensions.MenuDisplayItemModelExtensions.WithChildItems(Songhay.Models.MenuDisplayItemModel,System.Collections.Generic.IEnumerable{Songhay.Models.MenuDisplayItemModel})">
            <summary>
            Fluently returns <see cref="T:Songhay.Models.MenuDisplayItemModel" /> with child items.
            </summary>
            <param name="data">The data.</param>
            <param name="items">The items.</param>
        </member>
        <member name="T:Songhay.Extensions.NullableExtensions">
            <summary>
            Extensions of <c>Nullable</c> types.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.IsAssignableToISerializable``1(``0)">
            <summary>
            Determines whether the specified type
            can be assigned to <see cref="T:System.Runtime.Serialization.ISerializable" />.
            </summary>
            <typeparam name="T">the specified type</typeparam>
            <param name="nullable">the nullable</param>
            <returns>
              <c>true</c> if the specified throw exception is serializable; otherwise, <c>false</c>.
            </returns>
            <remarks>
            For detail, see https://stackoverflow.com/a/945528/22944.
            For background, see https://manski.net/2014/10/net-serializers-comparison-chart/
            and https://github.com/BryanWilhite/SonghayCore/issues/76
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.Round(System.Nullable{System.Decimal},System.Int32)">
            <summary>
            Rounds the specified decimal.
            </summary>
            <param name="nullable">The decimal nullable.</param>
            <param name="decimals">The decimals.</param>
            <remarks>
            For more detail see http://anderly.com/2009/08/08/silverlight-midpoint-rounding-solution/
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.ThrowWhenNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/>
            when the specified enumerable is null or empty.
            </summary>
            <param name="enumerable">the <see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <param name="paramName">the name of the variable holding the <see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <typeparam name="T">the type of the <see cref="T:System.Collections.Generic.IEnumerable`1"/></typeparam>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.ThrowWhenNullOrWhiteSpace(System.String,System.String)">
             <summary>
             Throws an <see cref="T:System.ArgumentNullException"/>
             when <see cref="M:System.String.IsNullOrWhiteSpace(System.String)"/> is <c>true</c>.
             </summary>
             <param name="nullable">the nullable <see cref="T:System.String"/></param>
             <param name="paramName">the name of the variable holding the <see cref="T:System.String"/></param>
             <remarks>
             This member borrows heavily from <see cref="M:System.ArgumentNullException.ThrowIfNull(System.Object,System.String)"/>.
            
             The <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> is applied to this member based
             on the following statement from Microsoft:
            
             “Callers can pass a variable with the null nullable,
             but the argument is guaranteed to never be null
             if the method returns without throwing an exception.”
            
             [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.ToObjectOrDbNull``1(``0)">
            <summary>
            Boxes the nullable in <see cref="T:System.Object"/>
            or returns <see cref="T:System.DBNull"/>.
            </summary>
            <param name="nullable">the nullable</param>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.ToReferenceTypeValueOrThrow``1(``0,System.String)">
             <summary>
             Returns the non-null value of the specified, nullable reference type
             or throws an <see cref="T:System.ArgumentNullException"/>
             when the value is null.
             </summary>
             <param name="nullable">the nullable</param>
             <param name="paramName">the name of the variable holding the nullable</param>
             <typeparam name="T">the type</typeparam>
             <remarks>
             This member borrows heavily from <see cref="M:System.ArgumentNullException.ThrowIfNull(System.Object,System.String)"/>.
            
             The <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> is applied to this member based
             on the following statement from Microsoft:
            
             “Callers can pass a variable with the null nullable,
             but the argument is guaranteed to never be null
             if the method returns without throwing an exception.”
            
             [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.NullableExtensions.ToValueOrThrow``1(System.Nullable{``0},System.String)">
             <summary>
             Returns the non-null value of the specified value type
             or throws an <see cref="T:System.ArgumentNullException"/>
             when the value is null.
             </summary>
             <param name="nullable">the nullable</param>
             <param name="paramName">the name of the variable holding the nullable</param>
             <typeparam name="T">the type</typeparam>
             <remarks>
             This member borrows heavily from <see cref="M:System.ArgumentNullException.ThrowIfNull(System.Object,System.String)"/>.
            
             The <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> is applied to this member based
             on the following statement from Microsoft:
            
             “Callers can pass a variable with the null nullable,
             but the argument is guaranteed to never be null
             if the method returns without throwing an exception.”
            
             [ see https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis#postconditions-maybenull-and-notnull ]
             </remarks>
        </member>
        <member name="T:Songhay.Extensions.ObservableCollectionExtensions">
            <summary>
            Extensions of <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.ObservableCollectionExtensions.SetCollectionWithDigits(System.Collections.ObjectModel.ObservableCollection{System.Nullable{System.Byte}},System.Double)">
            <summary>
            Sets the collection with digits for <c>mantissaDigits = 2</c>.
            </summary>
            <param name="collectionOfByte">The collection of byte.</param>
            <param name="digits">The digits.</param>
        </member>
        <member name="M:Songhay.Extensions.ObservableCollectionExtensions.SetCollectionWithDigits(System.Collections.ObjectModel.ObservableCollection{System.Nullable{System.Byte}},System.Double,System.Int32)">
            <summary>
            Sets the collection with digits.
            </summary>
            <param name="collectionOfByte">The collection of byte.</param>
            <param name="digits">The digits.</param>
            <param name="mantissaDigits">The mantissa digits.</param>
        </member>
        <member name="T:Songhay.Extensions.ProgramMetadataExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.Models.ProgramMetadata"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.ProgramMetadataExtensions.ToConventionalHeaders(Songhay.Models.ProgramMetadata,System.String)">
            <summary>
            Converts <see cref="T:Songhay.Models.ProgramMetadata" />
            to the conventional <see cref="T:System.Net.Http.Headers.HttpRequestHeaders"/>.
            </summary>
            <param name="meta">The <see cref="T:Songhay.Models.ProgramMetadata"/>.</param>
            <param name="restApiMetadataSetKey">The key for <see cref="P:Songhay.Models.ProgramMetadata.RestApiMetadataSet"/>.</param>
        </member>
        <member name="T:Songhay.Extensions.RestApiMetadataExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.Models.RestApiMetadata"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.RestApiMetadataExtensions.ToAzureActiveDirectoryAccessTokenData(Songhay.Models.RestApiMetadata)">
             <summary>
             Converts the specified <see cref="T:Songhay.Models.RestApiMetadata" />
             to the data required by <see cref="M:Songhay.AzureKeyVaultRestApiUtility.GetAccessTokenAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})"/>.
             </summary>
             <param name="meta">the <see cref="T:Songhay.Models.RestApiMetadata" /></param>
             <remarks>
             As of this writing, this member should return data of the form:
            
             <code>
             "grant_type": "client_credentials",
             "scope": "https://vault.azure.net/.default",
             "client_id": "active-directory-registration-app-id",
             "client_secret": "active-directory-registration-app-secret"
             </code>
            
             where <c>client_id</c> is the value of the <c>appId</c> property
             in the output of <c>az ad app list</c>;
             <c>client_secret</c> is the secret exposed under the App registration in the Azure Portal.
            
             🔬☔ test coverage of this member further documents how the <see cref="T:Songhay.Models.RestApiMetadata" /> should be formatted
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.RestApiMetadataExtensions.ToAzureActiveDirectoryAccessTokenUri(Songhay.Models.RestApiMetadata)">
             <summary>
             Converts the specified <see cref="T:Songhay.Models.RestApiMetadata" />
             to the <see cref="T:System.Uri"/> required by <see cref="M:Songhay.AzureKeyVaultRestApiUtility.GetAccessTokenAsync(System.Uri,System.Collections.Generic.Dictionary{System.String,System.String})"/>.
             </summary>
             <param name="meta">the <see cref="T:Songhay.Models.RestApiMetadata" /></param>
             <remarks>
             This member should return a <see cref="T:System.Uri"/> of the form:
            
             <code>
             https://login.microsoftonline.com/{tenantOrDirectoryId}/oauth2/v2.0/token
             </code>
            
             where <c>tenantOrDirectoryId</c> is the value of “Directory (tenant) ID”
             under the App registration in the Azure Portal.
            
             🔬☔ test coverage of this member further documents how the <see cref="T:Songhay.Models.RestApiMetadata" /> should be formatted
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.RestApiMetadataExtensions.ToAzureKeyVaultSecretUri(Songhay.Models.RestApiMetadata,System.String)">
             <summary>
             Converts the specified <see cref="T:Songhay.Models.RestApiMetadata" />
             to the <see cref="T:System.Uri"/> required by <see cref="M:Songhay.AzureKeyVaultRestApiUtility.GetSecretAsync(System.String,System.Uri)"/>.
             </summary>
             <param name="meta">the <see cref="T:Songhay.Models.RestApiMetadata" /></param>
             <param name="secretNameKey">the name of the Claim key that returns the Vault secret</param>
             <remarks>
             This member should return a <see cref="T:System.Uri"/> of the form:
            
             <code>
             https://{vaultName}.vault.azure.net/secrets/{secretName}?api-version=2016-10-01
             </code>
            
             where <c>vaultName</c> is the name of the Azure Key Vault;
             <c>secretName</c> is the name of the secret in the vault.
            
             🔬☔ test coverage of this member further documents how the <see cref="T:Songhay.Models.RestApiMetadata" /> should be formatted
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.RestApiMetadataExtensions.ToUri(Songhay.Models.RestApiMetadata,System.String,System.String[])">
            <summary>
            Converts the specified <see cref="T:Songhay.Models.RestApiMetadata" /> to a <see cref="T:System.Uri"/>
            based on the specified URI Template.
            </summary>
            <param name="meta">the <see cref="T:Songhay.Models.RestApiMetadata" /></param>
            <param name="uriTemplateKey">The URI template key.</param>
            <param name="bindByPositionValues">The bind by position values.</param>
        </member>
        <member name="T:Songhay.Extensions.StreamReaderExtensions">
            <summary>
            Extensions of <see cref="T:System.IO.StreamReader"/>.
            </summary>
            <remarks>
            “StreamReader is designed for character input in a particular encoding,
            whereas the Stream class is designed for byte input and output.”
            — https://learn.microsoft.com/en-us/dotnet/api/system.io.streamreader?view=net-5.0#remarks
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StreamReaderExtensions.ReadLinesAsync(System.IO.StreamReader,System.Func{System.String,System.Boolean})">
            <summary>
            Reads the lines from the specified <see cref="T:System.IO.StreamReader"/>.
            </summary>
            <param name="reader">the <see cref="T:System.IO.StreamReader"/></param>
            <param name="lineAction">the line action; return <c>false</c> to stop reading lines</param>
        </member>
        <member name="T:Songhay.Extensions.StringBuilderExtensions">
            <summary>
            Extensions of <see cref="T:System.Text.StringBuilder"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.StringBuilderExtensions.AppendLabelWithValue(System.Text.StringBuilder,System.String,System.Object)">
            <summary>
            Appends the label with value.
            </summary>
            <param name="builder">The builder.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Songhay.Extensions.StringBuilderExtensions.AppendLabelWithValue(System.Text.StringBuilder,System.String,System.Object,System.String)">
            <summary>
            Appends the label with value.
            </summary>
            <param name="builder">The builder.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Songhay.Extensions.StringBuilderExtensions.AppendLabelWithValue(System.Text.StringBuilder,System.String,System.Object,System.String,System.Boolean)">
            <summary>
            Appends the label with value.
            </summary>
            <param name="builder">The builder.</param>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <param name="hasLineBreak">When <c>true</c> add <see cref="P:System.Environment.NewLine" /> between label and value.</param>
            <remarks>
            This method will append <c>name: value</c> to the appending <see cref="T:System.Text.StringBuilder"/>.
            This is useful when overriding <see cref="M:System.Object.ToString"/>.
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.StringExtensions">
            <summary>
            Extensions of <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.FromSnakeToCaps(System.String)">
            <summary>
            Replaces “snake” underscores with caps of first <see cref="T:System.Char"/>
            after the underscore.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.Reverse(System.String)">
            <summary>
            Reverse the string
            from http://en.wikipedia.org/wiki/Extension_method
            </summary>
            <param name="input"></param>
            <remarks>
            Based on work by Tomas Kubes, http://www.codeproject.com/Articles/31050/String-Extension-Collection-for-C
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToAsciiLettersWithSpacer(System.String)">
            <summary>
            Converts the <see cref="T:System.String" /> into a ASCII letters with spacer <c>\0</c>.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToAsciiLettersWithSpacer(System.String,System.Char)">
            <summary>
            Converts the <see cref="T:System.String" /> into ASCII letters with spacer.
            </summary>
            <param name="input">The input.</param>
            <param name="spacer">The spacer.</param>
            <remarks>
            📖 https://en.wikipedia.org/wiki/ASCII
            📖 https://stackoverflow.com/a/7826216/22944
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToBlogSlug(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a blog slug.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToCamelCase(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into camel case
            by lower-casing the first character.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToConfigurationKey(System.String)">
            <summary>
            Convert a command-line <c>args</c> like those defined in <see cref="T:Songhay.Models.ConsoleArgsScalars"/>
            to <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>-key format.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToDigitsOnly(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into digits only.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToIntString(System.String)">
            <summary>
            Prepares a string to be converted to <c>int</c>.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToIntString(System.String,System.String)">
            <summary>
            Prepares a string to be converted to <c>int</c>.
            </summary>
            <param name="input">The input.</param>
            <param name="defaultValue">The default value ("0" by default).</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToNumberOfDirectoryLevels(System.String)">
            <summary>
            Returns the number of directory levels
            based on the conventions <c>../</c> or <c>..\</c>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToNumericString(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a numeric format for parsing.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Returns a numeric string ready for integer or float parsing.
            </returns>
            <remarks>
            This member does not support parenthesis as indicators of negative numbers.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToNumericString(System.String,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a numeric format for parsing.
            </summary>
            <param name="input">The input.</param>
            <param name="defaultValue">The default value ("0" by default).</param>
            <returns>
            Returns a numeric string ready for integer or float parsing.
            </returns>
            <remarks>
            This member does not support parenthesis as indicators of negative numbers.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToPascalCase(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into camel case
            by upper-casing the first character.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToSnakeCase(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into camel case
            then replaces every upper case character
            with an underscore and its lowercase equivalent.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.ToSubstringInContext(System.String,System.String,System.Int32)">
            <summary>
            Formats the <see cref="T:System.String"/> into a shortened form,
            showing the search text in context.
            </summary>
            <param name="input">The input.</param>
            <param name="searchText">The search text.</param>
            <param name="contextLength">Length of the context.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.Truncate(System.String)">
            <summary>
            Truncates the specified input to 16 characters.
            <param name="input">The input.</param>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.Truncate(System.String,System.Int32)">
            <summary>
            Truncates the specified input to 16 characters.
            <param name="input">The input.</param>
            <param name="length">The length.</param>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.Truncate(System.String,System.Int32,System.String)">
            <summary>
            Truncates the specified input.
            </summary>
            <param name="input">The input.</param>
            <param name="length">The length.</param>
            <param name="ellipsis"></param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.WithConfigurationHelpTextSuffix(System.String)">
            <summary>
            Returns the specified <see cref="T:System.String"/>
            with <see cref="F:Songhay.Models.ConsoleArgsScalars.HelpTextSuffix"/>.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.CsvSplit(System.String)">
            <summary>
            Splits CSV text format into an array of <see cref="T:System.String"/>.
            </summary>
            <param name="source">The source.</param>
            <remarks>
            This code is based on “LINQ to TEXT and LINQ to CSV” by Eric Lippert
            [http://blogs.msdn.com/b/ericwhite/archive/2008/09/30/linq-to-text-and-linq-to-csv.aspx]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.EqualsInvariant(System.String,System.String)">
            <summary>
            Returns <c>true</c> when the strings are equal without regard to cultural locales
            or casing.
            </summary>
            <param name="input">The input.</param>
            <param name="otherString">The other <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.EqualsInvariant(System.String,System.String,System.Boolean)">
            <summary>
            Returns <c>true</c> when the strings are equal without regard to cultural locales.
            </summary>
            <param name="input">The input.</param>
            <param name="otherString">The other <see cref="T:System.String"/>.</param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.EscapeInterpolation(System.String)">
            <summary>
            Escapes the interpolation tokens of <see cref="M:System.String.Format(System.String,System.Object[])"/>.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.FromCamelCaseToEnumerable(System.String)">
            <summary>
            Converts camel-case <see cref="T:System.String"/> to <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.In(System.String,System.String)">
            <summary>
            Determines whether the specified input is in the comma-delimited values.
            </summary>
            <param name="input">The input.</param>
            <param name="delimitedValues">The delimited values.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.In(System.String,System.String,System.Char)">
            <summary>
            Determines whether the specified input is in the delimited values.
            </summary>
            <param name="input">The input.</param>
            <param name="delimitedValues">The delimited values.</param>
            <param name="separator">The separator.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.InDoubleQuotes(System.String)">
            <summary>
            Returns <see cref="T:System.String"/> in double quotes.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.InDoubleQuotesOrDefault(System.String,System.String)">
            <summary>
            Returns <see cref="T:System.String"/> in double quotes or default.
            </summary>
            <param name="input">The input.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.InsertSpacesBeforeCaps(System.String)">
            <summary>
            Inserts the spaces before caps.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsByte(System.String)">
            <summary>
            Determines whether the specified input is byte.
            </summary>
            <param name="input">The input.</param>
            <returns>
            	<c>true</c> if the specified input is byte; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsByte(System.String,System.Predicate{System.Byte})">
            <summary>
            Determines whether the specified input is byte.
            </summary>
            <param name="input">The input.</param>
            <param name="secondaryTest">The secondary test.</param>
            <returns>
            	<c>true</c> if the specified input is byte; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsDecimal(System.String)">
            <summary>
            Determines whether the specified input is decimal.
            </summary>
            <param name="input">The input.</param>
            <returns>
            	<c>true</c> if the specified input is decimal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsDecimal(System.String,System.Predicate{System.Decimal})">
            <summary>
            Determines whether the specified input is decimal.
            </summary>
            <param name="input">The input.</param>
            <param name="secondaryTest">The secondary test.</param>
            <returns>
            	<c>true</c> if the specified input is decimal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsInteger(System.String)">
            <summary>
            Determines whether the specified input is integer.
            </summary>
            <param name="input">The input.</param>
            <returns>
              <c>true</c> if the specified input is integer; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsInteger(System.String,System.Predicate{System.Int32})">
            <summary>
            Determines whether the specified input is integer.
            </summary>
            <param name="input">The input.</param>
            <param name="secondaryTest">The secondary test.</param>
            <returns>
              <c>true</c> if the specified input is integer; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsLong(System.String)">
            <summary>
            Determines whether the specified input is long.
            </summary>
            <param name="input">The input.</param>
            <returns>
            	<c>true</c> if the specified input is long; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsLong(System.String,System.Predicate{System.Int64})">
            <summary>
            Determines whether the specified input is long.
            </summary>
            <param name="input">The input.</param>
            <param name="secondaryTest">The secondary test.</param>
            <returns>
            	<c>true</c> if the specified input is long; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsTelephoneNumber(System.String)">
            <summary>
            Determines whether the specified input is a telephone number.
            </summary>
            <param name="input">The input.</param>
            <returns>
              <c>true</c> if is telephone number; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.IsUnc(System.String)">
            <summary>
            Determines whether the specified input is a UNC.
            </summary>
            <param name="input">The input.</param>
            <returns>
              <c>true</c> if is a UNC; otherwise, <c>false</c>.
            </returns>
            <remarks>
             📚 https://stackoverflow.com/a/47531093/22944
             📚 https://en.wikipedia.org/wiki/Path_(computing)#Uniform_Naming_Convention
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.LooksLikeEmailAddress(System.String)">
            <summary>
            Determines whether the specified input looks like an email address.
            </summary>
            <param name="input">The input.</param>
            <returns>
              <c>true</c> if seems to be an email address; otherwise, <c>false</c>.
            </returns>
            <remarks>
            “In short, don’t expect a single, usable regex to do a proper job.
            And the best regex will validate the syntax, not the validity
            of an e-mail (jhohn@example.com is correct but it will probably bounce…).”
            [http://stackoverflow.com/questions/201323/how-to-use-a-regular-expression-to-validate-an-email-addresses]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.StringExtensions.RemoveDiacritics(System.String)">
            <summary>
            Remove accent from strings 
            </summary>
            <example>
             input:  "Příliš žluťoučký kůň úpěl ďábelské ódy."
             result: "Prilis zlutoucky kun upel dabelske ody."
            </example>
            <param name="input">The input.</param>
            <remarks>
            From Tomas Kubes, http://www.codeproject.com/Articles/31050/String-Extension-Collection-for-C
            Also, see http://stackoverflow.com/questions/249087/how-do-i-remove-diacritics-accents-from-a-string-in-net
            </remarks>
            <returns><see cref="T:System.String"/> without accents</returns>
        </member>
        <member name="T:Songhay.Extensions.TimeSpanExtensions">
            <summary>
            Extensions of <see cref="T:System.TimeSpan"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.TimeSpanExtensions.ListDays(System.TimeSpan)">
            <summary>
            Lists the days for the specified <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="span">The <see cref="T:System.TimeSpan" />.</param>
        </member>
        <member name="M:Songhay.Extensions.TimeSpanExtensions.ListDays(System.TimeSpan,System.DateTime)">
            <summary>
            Lists the days for the specified <see cref="T:System.TimeSpan"/>
            from the specified start <see cref="T:System.DateTime"/>.
            </summary>
            <param name="span">The <see cref="T:System.TimeSpan" />.</param>
            <param name="startDate">The start date.</param>
        </member>
        <member name="T:Songhay.Extensions.TraceSourceExtensions">
            <summary>
            Extensions of <see cref="T:System.Diagnostics.TraceSource"/>
            </summary>
            <remarks>
            Based on Fonlow.Diagnostics by Zijian Huang [https://github.com/zijianhuang/Fonlow.Diagnostics]
            Also see “Use TraceSource Efficiently” [http://www.codeproject.com/Tips/1071853/Use-TraceSource-Efficiently]
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String,System.Object[])">
            <summary>
            Traces the error.
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.String)">
            <summary>
            Traces the error.
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.Exception)">
            <summary>
            Traces the error.
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="ex">The exception.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceError(System.Diagnostics.TraceSource,System.Exception,System.Boolean)">
            <summary>
            Traces the error.
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="ex">The exception.</param>
            <param name="includeStackTrace">When <c>true</c>, include <see cref="P:System.Exception.StackTrace"/> info.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String)">
            <summary>
            Trace event type <see cref="F:System.Diagnostics.TraceEventType.Warning"/>
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceWarning(System.Diagnostics.TraceSource,System.String,System.Object[])">
            <summary>
            Trace event type <see cref="F:System.Diagnostics.TraceEventType.Warning"/>
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String)">
            <summary>
            Trace event type <see cref="F:System.Diagnostics.TraceEventType.Verbose"/>
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.TraceVerbose(System.Diagnostics.TraceSource,System.String,System.Object[])">
            <summary>
            Trace event type <see cref="F:System.Diagnostics.TraceEventType.Verbose"/>
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.WithSourceLevels(System.Diagnostics.TraceSource)">
            <summary>
            Returns the <see cref="T:System.Diagnostics.TraceSource"/>
            with Switch Level <see cref="F:System.Diagnostics.SourceLevels.All"/>.
            </summary>
            <param name="traceSource">The trace source.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.WithSourceLevels(System.Diagnostics.TraceSource,System.Diagnostics.SourceLevels)">
            <summary>
            Returns the <see cref="T:System.Diagnostics.TraceSource"/>
            with the specified <see cref="T:System.Diagnostics.SourceLevels"/>.
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="levels">The levels.</param>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.WriteLine(System.Diagnostics.TraceSource,System.String)">
            <summary>
            Trace event type <see cref="F:System.Diagnostics.TraceEventType.Information"/>
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="message">The message.</param>
            <remarks>
            This member was previously marked with <see cref="T:System.ObsoleteAttribute"/>.
            For detail, see https://github.com/BryanWilhite/SonghayCore/issues/82#issuecomment-566214635
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.TraceSourceExtensions.WriteLine(System.Diagnostics.TraceSource,System.String,System.Object[])">
            <summary>
            Trace event type <see cref="F:System.Diagnostics.TraceEventType.Information"/>
            </summary>
            <param name="traceSource">The trace source.</param>
            <param name="format">The format.</param>
            <param name="args">The arguments.</param>
            <remarks>
            This member was previously marked with <see cref="T:System.ObsoleteAttribute"/>.
            For detail, see https://github.com/BryanWilhite/SonghayCore/issues/82#issuecomment-566214635
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.TraceSourcesExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.Diagnostics.TraceSources"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.TraceSourcesExtensions.GetConfiguredTraceSource(Songhay.Diagnostics.TraceSources)">
             <summary>
             Gets the configured trace source.
             </summary>
             <param name="instance">The instance.</param>
             <remarks>
             For .NET Standard, this member makes sense after lines like these:
             <code>
                 var configuration = builder.Build();
                 TraceSources.ConfiguredTraceSourceName = configuration[DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey];
             </code>
            
             This member makes the <c>GetConfiguredTraceSource</c> pattern cross platform.
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.TraceSourcesExtensions.GetConfiguredTraceSource(Songhay.Diagnostics.TraceSources,Microsoft.Extensions.Configuration.IConfiguration)">
             <summary>
             Gets the configured trace source.
             </summary>
             <param name="instance">The instance.</param>
             <param name="configuration">The configuration.</param>
             <remarks>
             For .NET Standard, this member makes sense after lines like these:
             <code>
                 var configuration = builder.Build();
                 TraceSources.ConfiguredTraceSourceName = configuration[DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey];
             </code>
            
             This member makes the <c>GetConfiguredTraceSource</c> pattern cross platform.
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.TraceSourcesExtensions.GetConfiguredTraceSource(Songhay.Diagnostics.TraceSources,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
             <summary>
             Gets the configured trace source.
             </summary>
             <param name="instance">The instance.</param>
             <param name="configuration">The configuration.</param>
             <param name="key">The key.</param>
             <remarks>
             For .NET Standard, this member makes sense after lines like these:
             <code>
                 var configuration = builder.Build();
                 TraceSources.ConfiguredTraceSourceName = configuration[DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey];
             </code>
            
             This member makes the <c>GetConfiguredTraceSource</c> pattern cross platform.
             </remarks>
        </member>
        <member name="T:Songhay.Extensions.UriBuilderExtensions">
            <summary>
            Extensions of <see cref="T:System.UriBuilder"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.UriBuilderExtensions.WithPath(System.UriBuilder,System.String)">
            <summary>
            Returns <see cref="T:System.UriBuilder"/>
            with the specified path.
            </summary>
            <param name="builder">The builder.</param>
            <param name="path">The path.</param>
        </member>
        <member name="T:Songhay.Extensions.UriExtensions">
            <summary>
            Extensions of <see cref="T:System.Uri"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.IsProbablyAFile(System.Uri)">
            <summary>
            Determines whether the <see cref="T:System.Uri" /> is a file.
            </summary>
            <param name="input">The input.</param>
            <remarks>
            Recall that <see cref="P:System.Uri.IsFile" /> is another way
            of stating that <c>Uri.Schema == Uri.UriSchemeFile</c>
            and that <see cref="N:System.IO"/> members can process URIs.
            
            Also note that the only way to truly define a directory
            or folder is with a trailing forward/back slash.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.ToAzureStorageCanonicalizedResourceLocation(System.Uri,System.String)">
             <summary>
             This part of the signature string represents the storage account 
               targeted by the request. Will also include any additional query parameters/values.
             For ListContainers, this will return something like this:
               /storageaccountname/\ncomp:list
             </summary>
             <param name="uri">The URI of the storage service.</param>
             <param name="accountName">The storage account name.</param>
             <returns><see cref="T:System.String" /> representing the canonicalized resource.</returns>
             <remarks>
             See https://github.com/Azure-Samples/storage-dotnet-rest-api-with-auth/tree/master
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-requests-to-azure-storage
            
             See https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key
             
             See “Shared Key format for 2009-09-19 and later”
             [ https://docs.microsoft.com/en-us/rest/api/storageservices/authorize-with-shared-key#shared-key-format-for-2009-09-19-and-later ]
             </remarks>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.ToBaseUri(System.Uri)">
            <summary>
            Converts the <see cref="T:System.Uri" /> into a base URI.
            </summary>
            <param name="input">The input.</param>
            <returns>
            Returns a <see cref="T:System.String"/> like: <c>https://MyServer:8080/</c>
            </returns>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.ToFileName(System.Uri)">
            <summary>
            Converts the <see cref="T:System.Uri" /> into its file name.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.ToExpandedUriAsync(System.Uri)">
            <summary>
            Converts the specified <see cref="T:System.Uri" />
            to its ‘expanded’ version.
            </summary>
            <param name="expandableUri">The expandable <see cref="T:System.Uri"/>.</param>
            <remarks>
            This member will call itself recursively
            until <see cref="M:Songhay.Extensions.HttpResponseMessageExtensions.IsMovedOrRedirected(System.Net.Http.HttpResponseMessage)"/> returns <c>true</c>
            or <see cref="P:System.Net.Http.Headers.HttpResponseHeaders.Location"/> is null.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.ToExpandedUriPairAsync(System.Uri)">
            <summary>
            Converts the specified <see cref="T:System.Uri" />
            to its ‘expanded’ version.
            </summary>
            <param name="expandableUri">The expandable <see cref="T:System.Uri"/>.</param>
        </member>
        <member name="M:Songhay.Extensions.UriExtensions.ToRelativeUriFromQuery(System.Uri)">
            <summary>
            Converts the <see cref="T:System.Uri"/> into a relative URI from query.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="T:Songhay.Extensions.UriTemplateExtensions">
            <summary>
            Extensions of <see cref="T:Tavis.UriTemplates.UriTemplate"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.UriTemplateExtensions.BindByPosition(Tavis.UriTemplates.UriTemplate,System.String[])">
            <summary>
            Binds the <see cref="T:Tavis.UriTemplates.UriTemplate"/>
            to the specified <c>params</c> by position.
            </summary>
            <param name="template">The template.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Songhay.Extensions.UriTemplateExtensions.BindByPosition(Tavis.UriTemplates.UriTemplate,System.Uri,System.String[])">
            <summary>
            Binds the <see cref="T:Tavis.UriTemplates.UriTemplate" />
            to the specified <c>params</c> by position.
            </summary>
            <param name="template">The template.</param>
            <param name="baseUri">The base URI.</param>
            <param name="values">The values.</param>
        </member>
        <member name="T:Songhay.Extensions.Utf8JsonWriterExtensions">
            <summary>
            Extensions of <see cref="T:System.Text.Json.Utf8JsonWriter"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.Utf8JsonWriterExtensions.WriteObject(System.Text.Json.Utf8JsonWriter,System.Action)">
            <summary>
            Wrap <see cref="T:System.Text.Json.Utf8JsonWriter"/> statements
            inside <see cref="M:System.Text.Json.Utf8JsonWriter.WriteStartObject"/>
            and <see cref="M:System.Text.Json.Utf8JsonWriter.WriteEndObject"/>.
            </summary>
            <param name="writer">the <see cref="T:System.Text.Json.Utf8JsonWriter"/></param>
            <param name="writerAction"></param>
            <remarks>
            This method is for building a JSON object.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.Utf8JsonWriterExtensions.WriteObject(System.Text.Json.Utf8JsonWriter,System.String,System.Action)">
            <summary>
            Wrap <see cref="T:System.Text.Json.Utf8JsonWriter"/> statements
            inside <see cref="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.String)"/>
            <see cref="M:System.Text.Json.Utf8JsonWriter.WriteStartObject"/>
            and <see cref="M:System.Text.Json.Utf8JsonWriter.WriteEndObject"/>.
            </summary>
            <param name="writer">the <see cref="T:System.Text.Json.Utf8JsonWriter"/></param>
            <param name="propertyName"></param>
            <param name="writerAction"></param>
            <remarks>
            This method is for building a JSON object for a JSON property.
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.ValidationContextExtensions">
            <summary>
            Extensions of <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" /> and <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />,
            returning a <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>.
            </summary>
            <remarks>
            The use of these methods should be the last resort
            after deferring to a NuGet package like FluentValidation.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToDisplayText(System.ComponentModel.DataAnnotations.ValidationResult)">
            <summary>
            Converts the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"/> into a display text.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToDisplayText(System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})">
            <summary>
            Converts the <see cref="T:System.Collections.Generic.IEnumerable`1"/> into a display text.
            </summary>
            <param name="results">The results.</param>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToValidationContext(System.ComponentModel.DataAnnotations.IValidatableObject)">
            <summary>
            Converts the <see cref="T:System.Object"/> into a validation context.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToValidationResults(System.ComponentModel.DataAnnotations.IValidatableObject)">
            <summary>
            Converts the <see cref="T:System.Object" /> into a validation results.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <remarks>
            This member will validate all properties;<c>validateAllProperties == true</c>.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToValidationResults(System.ComponentModel.DataAnnotations.IValidatableObject,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Converts the <see cref="T:System.Object" /> into a validation results.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="validationContext">the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/></param>
            <remarks>
            This member will validate all properties;<c>validateAllProperties == true</c>.
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToValidationResults(System.ComponentModel.DataAnnotations.IValidatableObject,System.Boolean,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Converts the <see cref="T:System.Object" /> into a validation results.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="validateAllProperties"><c>true</c> to validate all properties;if <c>false</c>, only required attributes are validated.</param>
            <param name="validationContext">the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/></param>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToValidationResults(System.ComponentModel.DataAnnotations.IValidatableObject,System.String,System.Object)">
            <summary>
            Converts the <see cref="T:System.Object"/> into a validation results.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
        </member>
        <member name="M:Songhay.Extensions.ValidationContextExtensions.ToValidationResults(System.ComponentModel.DataAnnotations.IValidatableObject,System.String,System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Converts the <see cref="T:System.Object"/> into a validation results.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
            <param name="validationContext">the <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/></param>
        </member>
        <member name="T:Songhay.Extensions.XElementExtensions">
            <summary>
            Extensions of <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.AddOnce(System.Xml.Linq.XElement,System.Xml.Linq.XAttribute)">
            <summary>
            Prevents the specified <see cref="T:System.Xml.Linq.XAttribute"/>
            from being added more than once.
            </summary>
            <param name="element">The element.</param>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.GetElement(System.Xml.Linq.XNode,System.Xml.Linq.XName)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="node">The node.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.HasElementName(System.Xml.Linq.XElement,System.Xml.Linq.XName)">
            <summary>
            Determines whether the <see cref="T:System.Xml.Linq.XElement"/>
            has the specified <see cref="T:System.Xml.Linq.XName"/>.
            </summary>
            <param name="element">The element.</param>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> when the element has the name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.HasElementName(System.Xml.Linq.XNode,System.Xml.Linq.XName)">
            <summary>
            Determines whether the <see cref="T:System.Xml.Linq.XNode"/>
            has the specified <see cref="T:System.Xml.Linq.XName"/>.
            </summary>
            <param name="node">The node.</param>
            <param name="name">The name.</param>
            <returns>
            	<c>true</c> when the node has the name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.IsElement(System.Xml.Linq.XNode)">
            <summary>
            Determines whether the specified node is <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="node">The node.</param>
            <returns>
            	<c>true</c> if the specified node is element; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.ToAttributeValueOrDefault(System.Xml.Linq.XElement,System.String,System.String)">
            <summary>
            Converts the <see cref="T:System.Xml.Linq.XElement" /> into a attribute value or default.
            </summary>
            <param name="element">The element.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.ToAttributeValueOrNull(System.Xml.Linq.XElement,System.String)">
            <summary>
            Returns the attribute value or null.
            </summary>
            <param name="element">The element.</param>
            <param name="attributeName">Name of the attribute.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.ToElementValueOrDefault(System.Xml.Linq.XElement,System.String)">
            <summary>
            Converts the <see cref="T:System.Xml.Linq.XElement" /> into a element value or default.
            </summary>
            <param name="element">The element.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.ToElementValueOrNull(System.Xml.Linq.XElement)">
            <summary>
            Converts the <see cref="T:System.Xml.Linq.XElement" /> into a element value or null.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.ToElementValueOrNull(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})">
            <summary>
            Returns the element value or null.
            </summary>
            <param name="elements">The elements.</param>
        </member>
        <member name="M:Songhay.Extensions.XElementExtensions.WithoutNamespaces(System.Xml.Linq.XElement)">
            <summary>
            Returns the specified <see cref="T:System.Xml.Linq.XElement"/>
            without namespace qualifiers on elements and attributes.
            </summary>
            <param name="element">The element</param>
            <remarks>
            Based on “Answer: How to remove all namespaces from XML with C#?”
            [http://stackoverflow.com/a/7238007/22944?stw=2]
            </remarks>
        </member>
        <member name="T:Songhay.Extensions.XNamespaceExtensions">
            <summary>
            Extensions of <see cref="T:System.Xml.Linq.XNamespace"/>
            </summary>
        </member>
        <member name="M:Songhay.Extensions.XNamespaceExtensions.ToXName(System.Xml.Linq.XNamespace,System.String)">
            <summary>
            Converts the <see cref="T:System.Xml.Linq.XNamespace"/> to an <see cref="T:System.Xml.Linq.XName"/>
            with the specified element name.
            </summary>
            <param name="ns">The ns.</param>
            <param name="elementName">Name of the element.</param>
        </member>
        <member name="T:Songhay.Extensions.XNodeExtensions">
            <summary>
            Extensions of <see cref="T:System.Xml.Linq.XNode"/>.
            </summary>
        </member>
        <member name="M:Songhay.Extensions.XNodeExtensions.GetInnerXml(System.Xml.Linq.XNode)">
            <summary>
            Gets the inner XML.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Songhay.Extensions.XNodeExtensions.GetInnerXml(System.Xml.Linq.XNode,System.Boolean,System.Xml.Linq.ReaderOptions)">
            <summary>
            Gets the inner XML.
            </summary>
            <param name="node">The node.</param>
            <param name="stripNamespaces">if set to <c>true</c> then strip namespaces (<c>true</c> by default).</param>
            <param name="options">The options (<see cref="F:System.Xml.Linq.ReaderOptions.None"/> by default).</param>
            <remarks>
            “If performance is important (e.g. lots of XML, parsed frequently), I'd use Daniel's CreateReader method every time.”
            [http://stackoverflow.com/questions/3793/best-way-to-get-innerxml-of-an-xelement]
            —Luke Sampson
            </remarks>
        </member>
        <member name="M:Songhay.Extensions.XNodeExtensions.GetNamespaceResolver(System.Xml.Linq.XNode)">
            <summary>
            Gets <see cref="T:System.Xml.IXmlNamespaceResolver"/> from the specified node.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Songhay.Extensions.XNodeExtensions.GetOuterXml(System.Xml.Linq.XNode)">
            <summary>
            Gets the outer XML.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Songhay.Extensions.XNodeExtensions.GetOuterXml(System.Xml.Linq.XNode,System.Boolean,System.Xml.Linq.ReaderOptions)">
            <summary>
            Gets the outer XML.
            </summary>
            <param name="node">The node.</param>
            <param name="stripNamespaces">if set to <c>true</c> then strip namespaces (<c>true</c> by default).</param>
            <param name="options">The options (<see cref="F:System.Xml.Linq.ReaderOptions.None"/> by default).</param>
        </member>
        <member name="T:Songhay.Globalization.TextInfoUtility">
            <summary>
            Helper members for <see cref="T:System.Globalization.TextInfo" />.
            </summary>
        </member>
        <member name="M:Songhay.Globalization.TextInfoUtility.ToTitleCase(System.String)">
            <summary>
            Wraps <see cref="M:System.Globalization.TextInfo.ToTitleCase(System.String)"/>
            to add support for articles, conjunctions and prepositions.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="P:Songhay.Globalization.TextInfoUtility.EnglishWordsNotCapitalized">
            <summary>
            “A virtually complete list of English words that are are NOT capitalized in titles.”
            [http://www.cumbrowski.com/CarstenC/articles/20070623_Title_Capitalization_in_the_English_Language.asp]
            </summary>
        </member>
        <member name="T:Songhay.Hosting.DefaultHostedService">
            <summary>
            Defines the conventional, default Hosted Service
            </summary>
        </member>
        <member name="M:Songhay.Hosting.DefaultHostedService.#ctor(Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Logging.ILogger{Songhay.Hosting.DefaultHostedService})">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Hosting.DefaultHostedService"/> class.
            </summary>
            <param name="hostApplicationLifetime">the <see cref="T:Microsoft.Extensions.Hosting.IHostApplicationLifetime"/></param>
            <param name="logger">the <see cref="T:Microsoft.Extensions.Logging.ILogger"/></param>
        </member>
        <member name="M:Songhay.Hosting.DefaultHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is ready to start the service.
            </summary>
            <param name="cancellationToken">Indicates that the start process has been aborted.</param>
        </member>
        <member name="M:Songhay.Hosting.DefaultHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">Indicates that the shutdown process should no longer be graceful.</param>
        </member>
        <member name="T:Songhay.MathUtility">
            <summary>
            Static helpers for Math.
            </summary>
        </member>
        <member name="M:Songhay.MathUtility.GetDigitInNumber(System.Int32,System.Int32)">
            <summary>
            Gets the digit in number.
            </summary>
            <param name="x">The x.</param>
            <param name="place">The place (from right to left).</param>
        </member>
        <member name="M:Songhay.MathUtility.GetMantissa(System.Double,System.Int32)">
            <summary>
            Gets the mantissa.
            </summary>
            <param name="x">The x.</param>
            <param name="round">The round.</param>
        </member>
        <member name="M:Songhay.MathUtility.TruncateNumber(System.Double)">
            <summary>
            Truncates the number.
            </summary>
            <param name="x">The x.</param>
            <remarks>
            Silverlight does not have <c>Math.Truncate()</c>.
            </remarks>
        </member>
        <member name="T:Songhay.Models.ActivityOutput`1">
            <summary>
            Defines the conventional output
            of <see cref="T:Songhay.Abstractions.IActivityTask`2"/>.
            </summary>
            <typeparam name="TOutput">The type of the output.</typeparam>
        </member>
        <member name="P:Songhay.Models.ActivityOutput`1.Output">
            <summary>
            Gets or sets the output.
            </summary>
        </member>
        <member name="P:Songhay.Models.ActivityOutput`1.Log">
            <summary>
            Gets or sets the log.
            </summary>
        </member>
        <member name="T:Songhay.Models.ColorDisplayItemModel">
            <summary>
            Model for color display
            </summary>
        </member>
        <member name="P:Songhay.Models.ColorDisplayItemModel.BackgroundHex">
            <summary>
            Gets or sets the background hexadecimal value.
            </summary>
        </member>
        <member name="P:Songhay.Models.ColorDisplayItemModel.ForegroundHex">
            <summary>
            Gets or sets the foreground hexadecimal value.
            </summary>
        </member>
        <member name="T:Songhay.Models.ConsoleArgsScalars">
            <summary>
            Centralizes conventional console <c>args</c> passed to <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.ActivityName">
            <summary>
            The name of the class implementing one of the <c>Activity*</c> abstractions.
            </summary>
            <remarks>
            Going forward, this Studio should not support command-line parameters based solely on position.
            All parameters should have a <c>--key</c>.
            [https://github.com/BryanWilhite/SonghayCore/issues/173]
            </remarks>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.BaseDirectory">
            <summary>
            The base-directory argument.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.BaseDirectoryRequired">
            <summary>
            Is <see cref="F:Songhay.Models.ConsoleArgsScalars.BaseDirectory"/> required flag.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.DryRun">
            <summary>
            Dry-run flag.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.FlagSpacer">
            <summary>
            Ensures the space after a flag is clearly seen.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.Help">
            <summary>
            The help argument flag.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.HelpTextSuffix">
            <summary>
            The conventional <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>-key help text suffix.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.InputFile">
            <summary>
            The input file argument.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.InputString">
            <summary>
            The input <see cref="T:System.String" /> argument.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.OutputFile">
            <summary>
            The output file argument.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.OutputUnderBasePath">
            <summary>
            Flag: use the output file argument relative to <see cref="F:Songhay.Models.ConsoleArgsScalars.BaseDirectory"/>.
            </summary>
        </member>
        <member name="F:Songhay.Models.ConsoleArgsScalars.SettingsFile">
            <summary>
            The settings file argument.
            </summary>
        </member>
        <member name="T:Songhay.Models.CorsOrigins">
            <summary>
            Defines selected CORS origins.
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.BRollPlayer">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.BRollPlayerCom">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.CodePenIo">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.CommaDelimiter">
            <summary>
            The comma delimiter
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.InOurTerribleness">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.InOurTerriblenessCom">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.KinteSpaceAzure">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.KinteSpaceCom">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.SonghayBlog">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.SonghayDashboard">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.SonghaySystemCom">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.StaticsCodePenIo">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="F:Songhay.Models.CorsOrigins.WordWalkingStickCom">
            <summary>
            Uri <see cref="T:System.String"/> constant
            </summary>
        </member>
        <member name="T:Songhay.Models.DataParameterMetadata">
            <summary>
            A JSON.net-friendly definition for types implementing <see cref="T:System.Data.IDataParameter"/>.
            </summary>
        </member>
        <member name="P:Songhay.Models.DataParameterMetadata.DataRowVersion">
            <summary>
            Gets or sets the data row version.
            </summary>
        </member>
        <member name="P:Songhay.Models.DataParameterMetadata.DbType">
            <summary>
            Gets or sets the type of the database.
            </summary>
        </member>
        <member name="P:Songhay.Models.DataParameterMetadata.ParameterDirection">
            <summary>
            Gets or sets the parameter direction.
            </summary>
        </member>
        <member name="P:Songhay.Models.DataParameterMetadata.ParameterName">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
        </member>
        <member name="P:Songhay.Models.DataParameterMetadata.ParameterValue">
            <summary>
            Gets or sets the parameter value.
            </summary>
        </member>
        <member name="P:Songhay.Models.DataParameterMetadata.SourceColumn">
            <summary>
            Gets or sets the source column.
            </summary>
        </member>
        <member name="T:Songhay.Models.DbmsMetadata">
            <summary>
            Defines DBMS metadata
            </summary>
        </member>
        <member name="P:Songhay.Models.DbmsMetadata.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
        </member>
        <member name="P:Songhay.Models.DbmsMetadata.ConnectionStringKey">
            <summary>
            Gets or sets the connection string key.
            </summary>
        </member>
        <member name="P:Songhay.Models.DbmsMetadata.EncryptionMetadata">
            <summary>
            Gets or sets the encryption metadata.
            </summary>
        </member>
        <member name="P:Songhay.Models.DbmsMetadata.ProviderName">
            <summary>
            Gets or sets the name of the provider.
            </summary>
        </member>
        <member name="M:Songhay.Models.DbmsMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Songhay.Models.DeploymentEnvironment">
            <summary>
            Defines the deployment environment.
            </summary>
        </member>
        <member name="F:Songhay.Models.DeploymentEnvironment.ConfigurationKey">
            <summary>
            The configuration key.
            </summary>
        </member>
        <member name="F:Songhay.Models.DeploymentEnvironment.ConfigurationKeyDelimiter">
            <summary>
            The configuration key delimiter.
            </summary>
        </member>
        <member name="F:Songhay.Models.DeploymentEnvironment.DefaultTraceSourceNameConfigurationKey">
            <summary>
            The default trace source name configuration key.
            </summary>
        </member>
        <member name="F:Songhay.Models.DeploymentEnvironment.DevelopmentEnvironmentName">
            <summary>
            The development environment name.
            </summary>
        </member>
        <member name="F:Songhay.Models.DeploymentEnvironment.StagingEnvironmentName">
            <summary>
            The staging environment name.
            </summary>
        </member>
        <member name="F:Songhay.Models.DeploymentEnvironment.ProductionEnvironmentName">
            <summary>
            The production environment name.
            </summary>
        </member>
        <member name="T:Songhay.Models.DisplayItemModel">
            <summary>
            Model for display item.
            </summary>
            <remarks>
            This class was originally developed
            to compensate for RIA Services not supporting composition
            of Entity Framework entities
            where an Entity is the property of another object.
            </remarks>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.DisplayText">
            <summary>
            Gets or sets the display text.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.ItemName">
            <summary>
            Gets or sets the item name.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.ResourceIndicator">
            <summary>
            Gets or sets the resource indicator.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.SortOrdinal">
            <summary>
            Gets or sets the sort ordinal.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.EndDate">
            <summary>
            End/expiration <see cref="T:System.DateTime"/> of the item.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.InceptDate">
            <summary>
            Origin <see cref="T:System.DateTime"/> of the item.
            </summary>
        </member>
        <member name="P:Songhay.Models.DisplayItemModel.ModificationDate">
            <summary>
            Modification/editorial <see cref="T:System.DateTime"/> of the item.
            </summary>
        </member>
        <member name="M:Songhay.Models.DisplayItemModel.ToString">
            <summary>
            Represents this instance as a <c>string</c>.
            </summary>
        </member>
        <member name="T:Songhay.Models.EncryptionMetadata">
            <summary>
            Defines encryption metadata for persistent storage.
            </summary>
        </member>
        <member name="P:Songhay.Models.EncryptionMetadata.InitialVector">
            <summary>
            Gets or sets the initial vector.
            </summary>
        </member>
        <member name="P:Songhay.Models.EncryptionMetadata.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="T:Songhay.Models.HttpMethods">
            <summary>
            Centralizes <see cref="T:System.Net.Http.HttpMethod"/> members as strings.
            </summary>
            <remarks>
            Reference: “HTTP request methods” [https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods]
            </remarks>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Delete">
            <summary>
            HTTP Method <c>DELETE</c>.
            </summary>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Get">
            <summary>
            HTTP Method <c>GET</c>.
            </summary>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Head">
            <summary>
            HTTP Method <c>HEAD</c>.
            </summary>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Options">
            <summary>
            HTTP Method <c>OPTIONS</c>.
            </summary>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Post">
            <summary>
            HTTP Method <c>POST</c>.
            </summary>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Put">
            <summary>
            HTTP Method <c>PUT</c>.
            </summary>
        </member>
        <member name="F:Songhay.Models.HttpMethods.Trace">
            <summary>
            HTTP Method <c>TRACE</c>.
            </summary>
        </member>
        <member name="T:Songhay.Models.LazyDisplayItem`1">
            <summary>
            Wraps a lazy-initialized object
            with meta-data for display.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Songhay.Models.LazyDisplayItem`1.DisplayName">
            <summary>
            Gets or sets the targetValues name.
            </summary>
        </member>
        <member name="P:Songhay.Models.LazyDisplayItem`1.LazyItem">
            <summary>
            Gets or sets the lazy item.
            </summary>
        </member>
        <member name="P:Songhay.Models.LazyDisplayItem`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:Songhay.Models.MenuDisplayItemModel">
            <summary>
            Defines a colorable, selectable menu item
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.ChildItems">
            <summary>
            Gets or sets the child items.
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.GroupDisplayText">
            <summary>
            Display text of the Group.
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.GroupId">
            <summary>
            Identifier of the Group.
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.IsCollapsed">
            <summary>
            Returns `true` when group is visually collapsed.
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.IsDefaultSelection">
            <summary>
            Gets or sets whether this is default selection.
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.IsEnabled">
            <summary>
            Gets or sets whether this is enabled.
            </summary>
        </member>
        <member name="P:Songhay.Models.MenuDisplayItemModel.IsSelected">
            <summary>
            Gets or sets whether this is selected.
            </summary>
        </member>
        <member name="T:Songhay.Models.MimeTypes">
            <summary>
            Selected MIME types for this Studio
            </summary>
            <remarks>
            Multipurpose Internet Mail Extensions: https://tools.ietf.org/html/rfc6838
            See: https://www.iana.org/assignments/media-types/media-types.xhtml
            </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationAtomXml">
            <summary>
            MIME media type name: application
            MIME subtype name: atom+xml
            [ https://www.iana.org/assignments/media-types/application/atom+xml ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationFormUrlEncoded">
            <summary>
            MIME media type name: application
            Media subtype name: x-www-form-urlencoded
            [ https://www.iana.org/assignments/media-types/application/x-www-form-urlencoded ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationJson">
            <summary>
            MIME media type name: application
            Subtype name: json
            [ https://www.iana.org/assignments/media-types/application/json ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationOctetStream">
            <summary>
            MIME media type name: application
            The <c>octet-stream</c> subtype is used to indicate that a body contains arbitrary binary data.
            [ https://www.iana.org/assignments/media-types/application/octet-stream ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationRssXml">
            <summary>
            MIME media type name: application
            </summary>
            <remarks>
            This MIME type is not documented by www.iana.org.
            What did Dave Winer do to those people?
            </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationVndMsFontObject">
            <summary>
            MIME media type name: application
            MIME subtype name: vnd.ms-fontobject
            [ https://www.iana.org/assignments/media-types/application/vnd.ms-fontobject ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationXFontOtf">
            <summary>
            MIME media type name: application
            </summary>
            <remarks>
            This MIME type is not documented by www.iana.org.
            [ https://www.iana.org/assignments/media-types/font/otf ]
            </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationXFontTtf">
            <summary>
            MIME media type name: application
            </summary>
            <remarks>
            This MIME type is not documented by www.iana.org.
            [ https://www.iana.org/assignments/media-types/font/ttf ]
            </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationXFontWoff">
            <summary>
            MIME media type name: application
            </summary>
            <remarks>
            This MIME type is not documented by www.iana.org.
            [ https://www.iana.org/assignments/media-types/font/woff ]
            </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ApplicationXml">
            <summary>
            MIME media type name: application
            Subtype name:  xml
            [ https://www.iana.org/assignments/media-types/application/xml ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ImageGif">
             <summary>
             The image GIF format.
             </summary>
             <remarks>
             This MIME type is not documented by www.iana.org.
            
             [ https://www.iana.org/go/rfc2046 ]
             [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#gif_graphics_interchange_format ]
             </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ImageJpeg">
             <summary>
             The image JPEG format.
             </summary>
             <remarks>
             This MIME type is not documented by www.iana.org.
            
             [ https://www.iana.org/go/rfc2046 ]
             [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#jpeg_joint_photographic_experts_group_image ]
             </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ImagePng">
            <summary>
            Media type name: image
            Media subtype name: png
            [ https://www.iana.org/assignments/media-types/image/png ]
            [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#png_portable_network_graphics ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ImageSvgXml">
            <summary>
            Media type name: image
            Subtype name: svg+xml
            [ https://www.iana.org/assignments/media-types/image/svg+xml ]
            [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#svg_scalable_vector_graphics ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ImageWebP">
             <summary>
             The Web Picture format.
             </summary>
             <remarks>
             This MIME type is not documented by www.iana.org.
            
             [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#webp_image ]
             </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.ImageXIcon">
             <summary>
             Microsoft Icon.
             </summary>
             <remarks>
             This MIME type is not documented by www.iana.org.
            
             [ https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types#ico_microsoft_windows_icon ]
             </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.TextCss">
            <summary>
            Type name: text
            Subtype name: css
            [ https://www.iana.org/assignments/media-types/text/css ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.TextHtml">
            <summary>
            Type name: text
            Subtype name: Standards Tree - html
            [ https://www.iana.org/assignments/media-types/text/html ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.TextJavascript">
            <summary>
            Type name: text
            Subtype name: javascript
            [ https://www.iana.org/assignments/media-types/text/javascript ]
            </summary>
        </member>
        <member name="F:Songhay.Models.MimeTypes.TextPlain">
             <summary>
             Text, (generally ASCII or ISO 8859-n).
             </summary>
             <remarks>
             This MIME type is not documented by www.iana.org.
            
             [ https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types ]
             </remarks>
        </member>
        <member name="F:Songhay.Models.MimeTypes.TextXml">
            <summary>
            Type name: text
            Subtype name: xml
            [ https://www.iana.org/assignments/media-types/text/xml ]
            </summary>
        </member>
        <member name="T:Songhay.Models.OpenAuthorizationData">
            <summary>
            Defines Authorization Information for OAuth 1.0.
            </summary>
        </member>
        <member name="M:Songhay.Models.OpenAuthorizationData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Models.OpenAuthorizationData"/> class.
            </summary>
        </member>
        <member name="M:Songhay.Models.OpenAuthorizationData.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Models.OpenAuthorizationData"/> class.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Songhay.Models.OpenAuthorizationData.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Models.OpenAuthorizationData" /> class.
            </summary>
            <param name="nonce">The nonce.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Songhay.Models.OpenAuthorizationData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Models.OpenAuthorizationData" /> class.
            </summary>
            <param name="nonce">The nonce.</param>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.ConsumerKey">
            <summary>
            Gets or sets the consumer key.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.ConsumerSecret">
            <summary>
            Gets or sets the consumer secret.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.Nonce">
            <summary>
            Gets the nonce.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.Token">
            <summary>
            Gets or sets the token.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.TokenSecret">
            <summary>
            Gets or sets the token secret.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.SignatureMethod">
            <summary>
            Gets the signature method.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpenAuthorizationData.Version">
            <summary>
            Gets or sets the version.
            </summary>
        </member>
        <member name="T:Songhay.Models.OpmlBody">
            <summary>
            Defines a managed representation of the OPML body element.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlBody.Outlines">
            <summary>
            Gets or sets the outlines.
            </summary>
        </member>
        <member name="T:Songhay.Models.OpmlDocument">
            <summary>
            Dave Winer, his Outline Processor Markup Language document format
            </summary>
            <remarks>
            “OPML an XML-based format that allows exchange of outline-structured information
            between applications running on different operating systems and environments.”
            http://www.opml.org/about
            </remarks>
        </member>
        <member name="F:Songhay.Models.OpmlDocument.RxOpmlSchema">
            <summary>
            The rx opml schema URI
            </summary>
        </member>
        <member name="M:Songhay.Models.OpmlDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Models.OpmlDocument"/> class.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlDocument.XsiSchemaLocation">
            <summary>
            Gets or sets the schema location.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlDocument.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlDocument.OpmlHead">
            <summary>
            Gets the OPML head element.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlDocument.OpmlBody">
            <summary>
            Gets the OPML body element.
            </summary>
        </member>
        <member name="T:Songhay.Models.OpmlHead">
            <summary>
            Defines a managed representation of the OPML head element.
            </summary>
        </member>
        <member name="M:Songhay.Models.OpmlHead.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Models.OpmlHead"/> class.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.DateCreated">
            <summary>
            Gets or sets the date created.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.DateCreatedString">
            <summary>
            Gets the date created string.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.DateModified">
            <summary>
            Gets or sets the date modified.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.DateModifiedString">
            <summary>
            Gets the date created string.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.OwnerName">
            <summary>
            Gets or sets the name of the owner.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlHead.OwnerEmail">
            <summary>
            Gets or sets the owner email.
            </summary>
        </member>
        <member name="T:Songhay.Models.OpmlOutline">
            <summary>
            Defines a managed representation of the OPML outline element.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.Category">
            <summary>
            Gets or sets the Category.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.Id">
            <summary>
            Gets or sets the ID.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.Outlines">
            <summary>
            Gets or sets the outlines.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.OutlineType">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.Url">
            <summary>
            Gets or sets the URL.
            </summary>
        </member>
        <member name="P:Songhay.Models.OpmlOutline.XmlUrl">
            <summary>
            Gets or sets the XML URL.
            </summary>
        </member>
        <member name="T:Songhay.Models.PackedResource">
            <summary>
            Defines the meta-data of an Application resource.
            </summary>
        </member>
        <member name="P:Songhay.Models.PackedResource.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="P:Songhay.Models.PackedResource.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Songhay.Models.PackedResource.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:Songhay.Models.PackedResource`1">
            <summary>
            Defines the meta-data of an Application resource.
            </summary>
            <typeparam name="TResource">The type of the resource.</typeparam>
        </member>
        <member name="P:Songhay.Models.PackedResource`1.XamlString">
            <summary>
            Gets or sets the XAML string.
            </summary>
        </member>
        <member name="P:Songhay.Models.PackedResource`1.XamlObject">
            <summary>
            Gets or sets the XAML object.
            </summary>
        </member>
        <member name="T:Songhay.Models.PagedResult">
            <summary>
            Defines a paged set of data.
            </summary>
        </member>
        <member name="P:Songhay.Models.PagedResult.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:Songhay.Models.PagedResult.PagedResultSet">
            <summary>
            Gets or sets the paged result set.
            </summary>
        </member>
        <member name="T:Songhay.Models.PagedResultMeta">
            <summary>
            Defines the metadata for a paged set of data.
            </summary>
        </member>
        <member name="P:Songhay.Models.PagedResultMeta.PageIndex">
            <summary>
            Gets or sets the index of the page.
            </summary>
        </member>
        <member name="P:Songhay.Models.PagedResultMeta.PageCount">
            <summary>
            Gets the page count.
            </summary>
        </member>
        <member name="P:Songhay.Models.PagedResultMeta.PageSize">
            <summary>
            Gets or sets the size of the page.
            </summary>
        </member>
        <member name="P:Songhay.Models.PagedResultMeta.TotalCount">
            <summary>
            Gets or sets the total count.
            </summary>
        </member>
        <member name="T:Songhay.Models.ProgramAssemblyInfo">
            <summary>
            Defines Assembly information.
            </summary>
            <remarks>
            This definition was developed
            for About… dialogs in Windows Forms.
            </remarks>
        </member>
        <member name="M:Songhay.Models.ProgramAssemblyInfo.#ctor(System.Reflection.Assembly)">
            <summary>
            Constructor of this class.
            </summary>
            <param name="targetAssembly">The target <see cref="T:System.Reflection.Assembly"/></param>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyTitle">
            <summary>
            Gets title of assembly.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyVersion">
            <summary>
            Gets Assembly version information.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyVersionDetail">
            <summary>
            Gets detailed Assembly version information.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyDescription">
            <summary>
            Gets Assembly description information.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyProduct">
            <summary>
            Gets Assembly product information.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyCopyright">
            <summary>
            Gets Assembly copyright information.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramAssemblyInfo.AssemblyCompany">
            <summary>
            Gets Assembly company information.
            </summary>
        </member>
        <member name="M:Songhay.Models.ProgramAssemblyInfo.ToString">
            <summary>
            Returns format: <c>[AssemblyCompany], [AssemblyTitle] Version: [AssemblyVersion], [AssemblyVersionDetail]</c>.
            </summary>
        </member>
        <member name="T:Songhay.Models.ProgramGlyph">
            <summary>
            Defines a Unicode glyphic character
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.UnicodePoint">
            <summary>
            Gets or sets the unicode point.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.UnicodeInteger">
            <summary>
            Gets or sets the unicode integer.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.UnicodeGroup">
            <summary>
            Gets or sets the unicode group.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.UnicodeName">
            <summary>
            Gets or sets the name of the unicode.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.Character">
            <summary>
            Gets or sets the character, usually the Unicode Point.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.Windows1252UrlEncoding">
            <summary>
            Gets or sets the windows1252 URL encoding.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.Utf8UrlEncoding">
            <summary>
            Gets or sets the UTF8 URL encoding.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.HtmlEntityName">
            <summary>
            Gets or sets the name of the HTML entity.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramGlyph.XmlEntityNumber">
            <summary>
            Gets or sets the XML entity number.
            </summary>
        </member>
        <member name="T:Songhay.Models.ProgramMetadata">
            <summary>
            Defines the conventional Program metadata.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramMetadata.CloudStorageSet">
            <summary>
            Gets or sets the cloud storage set.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramMetadata.DbmsSet">
            <summary>
            Gets or sets the DBMS set.
            </summary>
        </member>
        <member name="P:Songhay.Models.ProgramMetadata.RestApiMetadataSet">
            <summary>
            Gets or sets the REST API metadata set.
            </summary>
        </member>
        <member name="M:Songhay.Models.ProgramMetadata.ToString">
            <summary>
            Represents this instance as a <c>string</c>.
            </summary>
        </member>
        <member name="T:Songhay.Models.RestApiMetadata">
            <summary>
            REST API Metadata
            </summary>
        </member>
        <member name="F:Songhay.Models.RestApiMetadata.ClaimsSetHeaderApiAuthorization">
            <summary>
            A convential name representing an API key
            to sent in the HTTP headers for authentication.
            </summary>
            <remarks>
            Usually <c>"headerAuthorization": "Authorization"</c>.
            
            See https://docs.microsoft.com/en-us/rest/api/azure/#request-header
            </remarks>
        </member>
        <member name="F:Songhay.Models.RestApiMetadata.ClaimsSetHeaderApiContentType">
            <summary>
            A convential name representing an API key
            to sent in the HTTP headers for authentication.
            </summary>
            <remarks>
            Usually <c>"headerContentType": "Content-Type"</c>.
            
            See https://docs.microsoft.com/en-us/rest/api/azure/#request-header
            </remarks>
        </member>
        <member name="F:Songhay.Models.RestApiMetadata.ClaimsSetHeaderApiKey">
            <summary>
            A convential name representing an API key
            to sent in the HTTP headers for authentication.
            </summary>
            <remarks>
            Usually <c>"headerKey": "X-ApiKey"</c>.
            </remarks>
        </member>
        <member name="P:Songhay.Models.RestApiMetadata.ApiBase">
            <summary>
            Gets or sets the API base.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestApiMetadata.ApiKey">
            <summary>
            Gets or sets the API key.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestApiMetadata.ClaimsSet">
            <summary>
            Gets or sets the claims set.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestApiMetadata.UriTemplates">
            <summary>
            Gets or sets the URI templates.
            </summary>
        </member>
        <member name="M:Songhay.Models.RestApiMetadata.ToString">
            <summary>
            Converts this instance into a <see cref="T:System.String"/> representation.
            </summary>
        </member>
        <member name="T:Songhay.Models.RestPagingMetadata">
            <summary>
            REST Paging Metadata
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.ResultSetSize">
            <summary>
            Gets or sets the size of the result set.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.TotalSetSize">
            <summary>
            Gets or sets the total size of the set.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.StartPosition">
            <summary>
            Gets or sets the start position.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.EndPosition">
            <summary>
            Gets or sets the end position.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.FromDate">
            <summary>
            Gets or sets from date.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.ToDate">
            <summary>
            Gets or sets to date.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.NextUri">
            <summary>
            Gets or sets the next URI.
            </summary>
        </member>
        <member name="P:Songhay.Models.RestPagingMetadata.PreviousUri">
            <summary>
            Gets or sets the previous URI.
            </summary>
        </member>
        <member name="M:Songhay.Models.RestPagingMetadata.ToShallowCopy">
            <summary>
            Returns the shallow copy from <see cref="M:System.Object.MemberwiseClone"/>.
            </summary>
        </member>
        <member name="M:Songhay.Models.RestPagingMetadata.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Songhay.Models.SystemErrorCodes">
            <summary>
            Defines the error codes of Windows
            </summary>
            <remarks>
            See MSDN: https://msdn.microsoft.com/en-us/library/ms681382.aspx
            </remarks>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ACCESS_DENIED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ADAP_HDW_ERR">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ALREADY_ASSIGNED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ALREADY_EXISTS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ARENA_TRASHED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ATOMIC_LOCKS_NOT_SUPPORTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_AUTODATASEG_EXCEEDS_64k">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_ARGUMENTS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_COMMAND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_DEV_TYPE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_DRIVER_LEVEL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_ENVIRONMENT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_EXE_FORMAT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_FILE_TYPE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_FORMAT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_LENGTH">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_NET_NAME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_NET_RESP">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_NETPATH">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_PATHNAME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_PIPE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_REM_ADAP">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_THREADID_ADDR">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BAD_UNIT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BROKEN_PIPE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BUFFER_OVERFLOW">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BUSY_DRIVE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_BUSY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CALL_NOT_IMPLEMENTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CANCEL_VIOLATION">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CANNOT_COPY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CANNOT_MAKE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CHECKOUT_REQUIRED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CHILD_NOT_COMPLETE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CRC">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_CURRENT_DIRECTORY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DELETE_PENDING">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DEV_NOT_EXIST">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DIR_NOT_EMPTY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DIR_NOT_ROOT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DIRECT_ACCESS_HANDLE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DIRECTORY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DISCARDED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DISK_CHANGE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DISK_FULL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DISK_TOO_FRAGMENTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DRIVE_LOCKED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DUP_NAME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_DYNLINK_FROM_INVALID_RING">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EA_FILE_CORRUPT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EA_LIST_INCONSISTENT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EA_TABLE_FULL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EAS_DIDNT_FIT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EAS_NOT_SUPPORTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ENVVAR_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EXCL_SEM_ALREADY_OWNED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EXE_MACHINE_TYPE_MISMATCH">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_EXE_MARKED_INVALID">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FAIL_I24">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FAIL_NOACTION_REBOOT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FAIL_RESTART">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FAIL_SHUTDOWN">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FILE_CHECKED_OUT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FILE_EXISTS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FILE_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FILE_TOO_LARGE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FILENAME_EXCED_RANGE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_FORMS_AUTH_REQUIRED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_GEN_FAILURE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_HANDLE_DISK_FULL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_HANDLE_EOF">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INFLOOP_IN_RELOC_CHAIN">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INSUFFICIENT_BUFFER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_ACCESS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_ADDRESS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_AT_INTERRUPT_TIME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_BLOCK">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_CATEGORY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_DATA">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_DRIVE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_EA_HANDLE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_EA_NAME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_EVENT_COUNT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_EXE_SIGNATURE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_FLAG_NUMBER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_FUNCTION">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_HANDLE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_LEVEL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_LIST_FORMAT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_LOCK_RANGE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_MINALLOCSIZE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_MODULETYPE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_NAME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_OPLOCK_PROTOCOL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_ORDINAL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_PARAMETER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_PASSWORD">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_SEGDPL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_SEGMENT_NUMBER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_SIGNAL_NUMBER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_STACKSEG">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_STARTING_CODESEG">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_TARGET_HANDLE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_INVALID_VERIFY_SWITCH">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IOPL_NOT_ENABLED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IS_JOIN_PATH">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IS_JOIN_TARGET">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IS_JOINED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IS_SUBST_PATH">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IS_SUBST_TARGET">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_IS_SUBSTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_ITERATED_DATA_EXCEEDS_64k">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_JOIN_TO_JOIN">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_JOIN_TO_SUBST">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_LABEL_TOO_LONG">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_LOCK_FAILED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_LOCK_VIOLATION">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_LOCKED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_MAX_SESSIONS_REACHED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_MAX_THRDS_REACHED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_META_EXPANSION_TOO_LONG">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_MOD_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_MORE_DATA">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_MR_MID_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NEGATIVE_SEEK">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NESTING_NOT_ALLOWED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NET_WRITE_FAULT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NETNAME_DELETED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NETWORK_ACCESS_DENIED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NETWORK_BUSY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_DATA">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_MORE_FILES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_MORE_ITEMS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_MORE_SEARCH_HANDLES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_PROC_SLOTS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_SIGNAL_SENT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_SPOOL_SPACE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NO_VOLUME_LABEL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_DOS_DISK">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_ENOUGH_MEMORY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_JOINED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_LOCKED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_OWNER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_READY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_SAME_DEVICE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_SUBSTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOT_SUPPORTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_NOTIFICATION_GUID_ALREADY_DEFINED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_OPEN_FAILED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_OPLOCK_NOT_GRANTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_OUT_OF_PAPER">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_OUT_OF_STRUCTURES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_OUTOFMEMORY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PARTIAL_COPY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PATH_BUSY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PATH_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PIPE_BUSY">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PIPE_LOCAL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PIPE_NOT_CONNECTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PRINT_CANCELLED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PRINTQ_FULL">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PROC_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PROCESS_MODE_ALREADY_BACKGROUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_PROCESS_MODE_NOT_BACKGROUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_READ_FAULT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_REDIR_PAUSED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_RELOC_CHAIN_XEEDS_SEGLIM">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_REM_NOT_LIST">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_REQ_NOT_ACCEP">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_RING2_STACK_IN_USE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_RING2SEG_MUST_BE_MOVABLE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SAME_DRIVE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SCOPE_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SECTOR_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SECURITY_STREAM_IS_INCONSISTENT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEEK_ON_DEVICE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEEK">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEM_IS_SET">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEM_NOT_FOUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEM_OWNER_DIED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEM_TIMEOUT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SEM_USER_LIMIT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SHARING_BUFFER_EXCEEDED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SHARING_PAUSED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SHARING_VIOLATION">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SIGNAL_PENDING">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SIGNAL_REFUSED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SUBST_TO_JOIN">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SUBST_TO_SUBST">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SUCCESS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_SYSTEM_TRACE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_THREAD_1_INACTIVE">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_THREAD_MODE_ALREADY_BACKGROUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_THREAD_MODE_NOT_BACKGROUND">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_CMDS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_MODULES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_MUXWAITERS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_NAMES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_OPEN_FILES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_POSTS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_SEM_REQUESTS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_SEMAPHORES">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_SESS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_TOO_MANY_TCBS">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_UNEXP_NET_ERR">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_VC_DISCONNECTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_VIRUS_DELETED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_VIRUS_INFECTED">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_WAIT_NO_CHILDREN">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_WRITE_FAULT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_WRITE_PROTECT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.ERROR_WRONG_DISK">
            <summary>
            System error code
            </summary>
        </member>
        <member name="F:Songhay.Models.SystemErrorCodes.WAIT_TIMEOUT">
            <summary>
            System error code
            </summary>
        </member>
        <member name="M:Songhay.Models.SystemErrorCodes.GetErrorMessage(System.Int32)">
            <summary>
            Gets the error message.
            </summary>
            <param name="ERR">The error.</param>
        </member>
        <member name="T:Songhay.Models.SystemVariable">
            <summary>
            Defines the Data for displaying meta-data about variables.
            </summary>
        </member>
        <member name="P:Songhay.Models.SystemVariable.VariableName">
            <summary>
            Gets or sets the name of the variable.
            </summary>
        </member>
        <member name="P:Songhay.Models.SystemVariable.VariableDescription">
            <summary>
            Gets or sets the variable description.
            </summary>
        </member>
        <member name="P:Songhay.Models.SystemVariable.VariableValue">
            <summary>
            Gets or sets the variable value.
            </summary>
        </member>
        <member name="T:Songhay.Models.SystemVariable`1">
            <summary>
            Defines the Data for displaying meta-data about variables.
            </summary>
        </member>
        <member name="P:Songhay.Models.SystemVariable`1.VariableName">
            <summary>
            Gets or sets the name of the variable.
            </summary>
        </member>
        <member name="P:Songhay.Models.SystemVariable`1.VariableDescription">
            <summary>
            Gets or sets the variable description.
            </summary>
        </member>
        <member name="P:Songhay.Models.SystemVariable`1.VariableValue">
            <summary>
            Gets or sets the variable value.
            </summary>
        </member>
        <member name="T:Songhay.Models.XEncoding">
            <summary>
            Defines selected text file encodings.
            </summary>
        </member>
        <member name="F:Songhay.Models.XEncoding.Windows1252">
            <summary>
            Text encoding.
            </summary>
        </member>
        <member name="F:Songhay.Models.XEncoding.Iso88591">
            <summary>
            Text encoding.
            </summary>
        </member>
        <member name="F:Songhay.Models.XEncoding.Utf08">
            <summary>
            Text encoding.
            </summary>
        </member>
        <member name="F:Songhay.Models.XEncoding.Utf16">
            <summary>
            Text encoding.
            </summary>
        </member>
        <member name="T:Songhay.Models.XhtmlDocument">
            <summary>
            Defines the conventional XHTML Document.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlDocument.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlDocument.Header">
            <summary>
            Gets or sets the header.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlDocument.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="T:Songhay.Models.XhtmlDocuments">
            <summary>
            Collects <see cref="T:Songhay.Models.XhtmlDocument"/>.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlDocuments.Documents">
            <summary>
            Gets or sets the documents.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlDocuments.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="T:Songhay.Models.XhtmlImage">
            <summary>
            Defines an image used by XHTML(5) clients
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlImage.Location">
            <summary>
            Gets or sets the location.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlImage.Height">
            <summary>
            Gets or sets the height.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlImage.HeightInPixels">
            <summary>
            Gets or sets the height in pixels.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlImage.Width">
            <summary>
            Gets or sets the width.
            </summary>
        </member>
        <member name="P:Songhay.Models.XhtmlImage.WidthInPixels">
            <summary>
            Gets or sets the width in pixels.
            </summary>
        </member>
        <member name="T:Songhay.Models.XObjectMetadata">
            <summary>
            The conventional <see cref="T:System.Xml.Linq.XObject"/> metadata.
            </summary>
        </member>
        <member name="F:Songhay.Models.XObjectMetadata.SiteMapNamespace">
            <summary>
            The sitemaps.org namespace.
            </summary>
        </member>
        <member name="P:Songhay.Models.XObjectMetadata.XhtmlDocTypeTransitional">
            <summary>
            DOCTYPE XHTML Transitional declaration.
            </summary>
        </member>
        <member name="T:Songhay.Net.SmtpUtility">
            <summary>
            SMTP Utility
            </summary>
        </member>
        <member name="M:Songhay.Net.SmtpUtility.GetAttachment(System.String)">
            <summary>
            Gets the attachment.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Net.SmtpUtility.GetAttachment(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the attachment.
            </summary>
            <param name="paths">The paths.</param>
        </member>
        <member name="M:Songhay.Net.SmtpUtility.GetMailMessage(System.String,System.String,System.String,System.String)">
            <summary>
            Returns <see cref="T:System.Net.Mail.MailMessage" />
            for an instance of <see cref="T:System.Net.Mail.SmtpClient" />
            </summary>
            <param name="from">the from email address</param>
            <param name="to">the to email address</param>
            <param name="subject">the email message subject</param>
            <param name="message">the email message</param>
        </member>
        <member name="M:Songhay.Net.SmtpUtility.GetMailMessage(System.String,System.String,System.String,System.String,System.Collections.Generic.ICollection{System.Net.Mail.Attachment})">
            <summary>
            Returns <see cref="T:System.Net.Mail.MailMessage" />
            for an instance of <see cref="T:System.Net.Mail.SmtpClient" />
            </summary>
            <param name="from">the from email address</param>
            <param name="to">the to email address</param>
            <param name="subject">the email message subject</param>
            <param name="message">the email message</param>
            <param name="attachments">a collection of <see cref="T:System.Net.Mail.Attachment" /></param>
        </member>
        <member name="M:Songhay.Net.SmtpUtility.GetMailMessage(System.String,System.String,System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Returns <see cref="T:System.Net.Mail.MailMessage" />
            for an instance of <see cref="T:System.Net.Mail.SmtpClient" />
            </summary>
            <param name="from">the from email address</param>
            <param name="subject">the email message subject</param>
            <param name="message">the email message</param>
            <param name="recipients">a collection of recipients</param>
        </member>
        <member name="M:Songhay.Net.SmtpUtility.GetMailMessage(System.String,System.String,System.String,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.ICollection{System.Net.Mail.Attachment})">
            <summary>
            Returns <see cref="T:System.Net.Mail.MailMessage" />
            for an instance of <see cref="T:System.Net.Mail.SmtpClient" />
            </summary>
            <param name="from">the from email address</param>
            <param name="subject">the email message subject</param>
            <param name="message">the email message</param>
            <param name="recipients">a collection of recipients</param>
            <param name="attachments">a collection of <see cref="T:System.Net.Mail.Attachment" /></param>
        </member>
        <member name="T:Songhay.Net.TimeoutHandler">
            <summary>
            Defines timeout and cancellation support
            for <see cref="T:System.Net.Http.HttpClient"/>.
            </summary>
            <seealso cref="T:System.Net.Http.DelegatingHandler" />
            <remarks>
            📖 see “Better timeout handling with HttpClient”
            by @thomaslevesque [ https://github.com/thomaslevesque ]
            [ https://thomaslevesque.com/2018/02/25/better-timeout-handling-with-httpclient/ ]
            
            </remarks>
        </member>
        <member name="P:Songhay.Net.TimeoutHandler.DefaultTimeout">
            <summary>
            Gets or sets the default timeout.
            </summary>
        </member>
        <member name="P:Songhay.Net.TimeoutHandler.RequestTimeout">
            <summary>
            Gets or sets the request timeout.
            </summary>
        </member>
        <member name="M:Songhay.Net.TimeoutHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request to the inner handler to send to the server as an asynchronous operation.
            </summary>
            <param name="request">The HTTP request message to send to the server.</param>
            <param name="cancellationToken">A cancellation token to cancel operation.</param>
            <returns>
            The task object representing the asynchronous operation.
            </returns>
        </member>
        <member name="T:Songhay.ProgramAssemblyUtility">
            <summary>
            Static members related to <see cref="N:System.Reflection"/>.
            </summary>
        </member>
        <member name="M:Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly)">
            <summary>
            Returns a <see cref="T:System.String"/>
            about the executing assembly.
            </summary>
            <param name="targetAssembly">
            The executing <see cref="T:System.Reflection.Assembly"/>.
            </param>
            <returns>Returns <see cref="T:System.String"/></returns>
        </member>
        <member name="M:Songhay.ProgramAssemblyUtility.GetAssemblyInfo(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.String"/>
            about the executing assembly.
            </summary>
            <param name="targetAssembly">
            The executing <see cref="T:System.Reflection.Assembly"/>.
            </param>
            <param name="useConsoleChars">
            When <c>true</c> selected “special” characters are formatted for the Windows Console.
            </param>
            <returns>Returns <see cref="T:System.String"/></returns>
        </member>
        <member name="M:Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly)">
            <summary>
            Gets the directory name from assembly.
            </summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:Songhay.ProgramAssemblyUtility.GetPathFromAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the path from assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="fileSegment">The file segment.</param>
        </member>
        <member name="T:Songhay.ProgramFileUtility">
            <summary>
            A few static helper members for <see cref="N:System.IO"/>.
            </summary>
        </member>
        <member name="M:Songhay.ProgramFileUtility.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String})">
            <summary>
            Read zip archive entries.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="fileAction">The action to take per text file.</param>
            <remarks>
            Use <c>entriesProjector</c> for any filtering or sorting.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.ReadZipArchiveEntries(System.IO.FileInfo,System.Action{System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Read zip archive entries.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="fileAction">The action to take per text file.</param>
            <param name="entriesProjector">The entries projector for LINQ filtering/sorting.</param>
            <remarks>
            Use <c>entriesProjector</c> for any filtering or sorting.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String})">
            <summary>
            Read zip archive entries as strings, line by line.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="lineAction">The action to take per text file line.</param>
            <remarks>
            This member is designed for compressed text documents that are too large to load into memory.
            The <c>fileAction</c> includes the line number and the current line.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.ReadZipArchiveEntriesByLine(System.IO.FileInfo,System.Action{System.Int32,System.String},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Read zip archive entries as strings, line by line.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="lineAction">The action to take per text file line.</param>
            <param name="entriesProjector">The entries projector for LINQ filtering/sorting.</param>
            <remarks>
            This member is designed for compressed text documents that are too large to load into memory.
            The <c>fileAction</c> includes the line number and the current line.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive})">
            <summary>
            Centralizes the use of <see cref="T:System.IO.Compression.ZipArchive"/>
            in <see cref="F:System.IO.Compression.ZipArchiveMode.Read"/>.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="archiveAction">The action to take for the ZIP archive in use.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.UseZipArchive(System.IO.FileInfo,System.Action{System.IO.Compression.ZipArchive},System.IO.Compression.ZipArchiveMode)">
            <summary>
            Centralizes the use of <see cref="T:System.IO.Compression.ZipArchive"/>
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="archiveAction">The action to take for the ZIP archive in use.</param>
            <param name="zipArchiveMode">The <see cref="T:System.IO.Compression.ZipArchiveMode"/>.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Centralizes the use of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="entriesAction">The action to take for ZIP archive entries.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.UseZipArchiveEntries(System.IO.FileInfo,System.Action{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}},System.Func{System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry},System.Collections.Generic.IEnumerable{System.IO.Compression.ZipArchiveEntry}})">
            <summary>
            Centralizes the use of <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/>.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="entriesAction">The action to take for ZIP archive entries.</param>
            <param name="entriesProjector">The entries projector for LINQ filtering/sorting.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo)">
            <summary>
            Write zip archive entry with <see cref="F:System.IO.Compression.CompressionLevel.Optimal"/>.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="fileInfo">The file information for writing the entry.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.WriteZipArchiveEntry(System.IO.FileInfo,System.IO.FileInfo,System.IO.Compression.CompressionLevel)">
            <summary>
            Write zip archive entry.
            </summary>
            <param name="archiveInfo">The ZIP archive <see cref="T:System.IO.FileInfo"/>.</param>
            <param name="fileInfo">The file information for writing the entry.</param>
            <param name="compressionLevel">The <see cref="T:System.IO.Compression.CompressionLevel"/>.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetEncodedString(System.String)">
            <summary>
            Gets the UTF-8 encoded string from.
            </summary>
            <param name="utf16Value">The raw value.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetEncodedString(System.String,System.Text.Encoding)">
            <summary>
            Gets the encoded <see cref="T:System.String"/>
            from its default <see cref="P:System.Text.Encoding.Unicode"/> encoding.
            </summary>
            <param name="utf16Value">The raw value.</param>
            <param name="outputEncoding">The output encoding.</param>
            <remarks>
            <see cref="P:System.Text.Encoding.Unicode"/> encoding is the UTF-16
            encoding of strings in .NET.
            See: https://docs.microsoft.com/en-us/dotnet/api/system.text.unicodeencoding
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.CountParentDirectoryChars(System.String)">
            <summary>
            Counts the parent directory chars.
            </summary>
            <param name="path">The path.</param>
            <remarks>
            This method is useful when running <see cref="M:Songhay.ProgramFileUtility.GetParentDirectory(System.String,System.Int32)"/>.
            
            WARNING: call <see cref="M:Songhay.ProgramFileUtility.NormalizePath(System.String)"/> to prevent incorrectly returning <c>0</c>
            in cross-platform scenarios.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.FindParentDirectory(System.String,System.String,System.Int32)">
            <summary>
            Finds the parent directory.
            </summary>
            <param name="path">The path.</param>
            <param name="parentName">Name of the parent.</param>
            <param name="levels">The levels.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.FindParentDirectoryInfo(System.String,System.String,System.Int32)">
            <summary>
            Finds the parent <see cref="T:System.IO.DirectoryInfo"/>.
            </summary>
            <param name="path">The path.</param>
            <param name="parentName">Name of the parent.</param>
            <param name="levels">The levels.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetCombinedPath(System.String,System.String)">
            <summary>Combines path and root based
            on the ambient value of <see cref="F:System.IO.Path.DirectorySeparatorChar"/>
            of the current OS.</summary>
            <param name="root">The root.</param>
            <param name="path">The path.</param>
            <remarks>
            For detail, see:
            📚 https://github.com/BryanWilhite/SonghayCore/issues/14
            📚 https://github.com/BryanWilhite/SonghayCore/issues/32
            📚 https://github.com/BryanWilhite/SonghayCore/issues/97
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetCombinedPath(System.String,System.String,System.Boolean)">
            <summary>Combines path and root based
            on the ambient value of <see cref="F:System.IO.Path.DirectorySeparatorChar"/>
            of the current OS.</summary>
            <param name="root">The root.</param>
            <param name="path">The path.</param>
            <param name="fileIsExpected">
            when <c>true</c> will throw <see cref="T:System.IO.FileNotFoundException"/>
            when combined path is not of a file; otherwise
            will throw <see cref="T:System.IO.DirectoryNotFoundException"/>
            when combined path is not a directory
            </param>
            <remarks>
            For detail, see:
            📚 https://github.com/BryanWilhite/SonghayCore/issues/14
            📚 https://github.com/BryanWilhite/SonghayCore/issues/32
            📚 https://github.com/BryanWilhite/SonghayCore/issues/97
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetParentDirectory(System.String,System.Int32)">
            <summary>
            Gets the parent directory.
            </summary>
            <param name="path">The path.</param>
            <param name="levels">The levels.</param>
            <remarks>
            A recursive wrapper for <see cref="M:System.IO.Directory.GetParent(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetParentDirectoryInfo(System.String,System.Int32)">
            <summary>
            Gets the parent <see cref="T:System.IO.DirectoryInfo"/>.
            </summary>
            <param name="path">The path.</param>
            <param name="levels">The levels.</param>
            <remarks>
            A recursive wrapper for <see cref="M:System.IO.Directory.GetParent(System.String)"/>.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.GetRelativePath(System.String)">
            <summary>
            Gets the relative path from the specified file segment
            without leading dots (<c>.</c>) or <see cref="F:System.IO.Path.DirectorySeparatorChar" /> chars.
            </summary>
            <param name="fileSegment">The file segment.</param>
            <remarks>
            This method is the equivalent of calling:
             * <see cref="M:Songhay.ProgramFileUtility.TrimLeadingDirectorySeparatorChars(System.String)"/>
             * <see cref="M:Songhay.ProgramFileUtility.NormalizePath(System.String)"/>
             * <see cref="M:Songhay.ProgramFileUtility.RemoveBackslashPrefixes(System.String)"/>
             * <see cref="M:Songhay.ProgramFileUtility.RemoveForwardslashPrefixes(System.String)"/>
            </remarks>
        </member>
        <member name="M:Songhay.ProgramFileUtility.IsForwardSlashSystem">
            <summary>
            Returns <c>true</c> when the current OS
            uses forward-slash (<c>/</c>) paths or not.
            </summary>
        </member>
        <member name="M:Songhay.ProgramFileUtility.NormalizePath(System.String)">
            <summary>
            Normalizes the specified path with respect
            to the ambient value of <see cref="F:System.IO.Path.DirectorySeparatorChar"/>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.RemoveBackslashPrefixes(System.String)">
            <summary>
            Removes conventional Directory prefixes
            for relative paths, e.g. <c>..\</c> or <c>.\</c>
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.RemoveConventionalPrefixes(System.String)">
            <summary>
            Removes conventional Directory prefixes
            for relative paths based on the ambient value\
            of <see cref="F:System.IO.Path.DirectorySeparatorChar"/>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.RemoveForwardslashPrefixes(System.String)">
            <summary>
            Removes conventional Directory prefixes
            for relative paths, e.g. <c>../</c> or <c>./</c>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.ProgramFileUtility.TrimLeadingDirectorySeparatorChars(System.String)">
            <summary>
            Trims the leading directory separator chars.
            </summary>
            <param name="path">The path.</param>
            <remarks>
            Trims leading <see cref="F:System.IO.Path.AltDirectorySeparatorChar"/> and/or <see cref="F:System.IO.Path.DirectorySeparatorChar"/>,
            formatting relative paths for <see cref="M:System.IO.Path.Combine(System.String,System.String)"/>.
            </remarks>
        </member>
        <member name="T:Songhay.ProgramTypeUtility">
            <summary>
            Static members for type handling.
            </summary>
            <remarks>
            Most of the Parse methods were originally meant
            for unboxing values from XML documents.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseBoolean(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"></see> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"></see> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"></see>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseBoolean(System.Object,System.Boolean)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="supportBitStrings">
            When <c>true</c>, support "1" and "0"
            as Boolean strings.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseBoolean(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="supportBitStrings">
            When <c>true</c>, support "1" and "0"
            as Boolean strings.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseByte(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseByte(System.Object,System.Byte)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDateTime(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDateTime(System.Object,System.DateTime)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDateTimeWithFormat(System.Object,System.String)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="formatExpression">
            The string format expression.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDateTimeWithFormat(System.Object,System.String,System.String)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="formatExpression">
            The string format expression.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDecimal(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDecimal(System.Object,System.Decimal)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDouble(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseDouble(System.Object,System.Double)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseEnum``1(System.String,``0)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Enum"/> return type.
            </summary>
            <typeparam name="TEnum">The type of the enum.</typeparam>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <remarks>
            For background, see http://stackoverflow.com/a/15017429/22944
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseInt16(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseInt16(System.Object,System.Int16)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseInt32(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseInt32(System.Object,System.Int32)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseInt64(System.Object)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseInt64(System.Object,System.Int64)">
            <summary>
            Tries to convert the specified value
            to the <see cref="T:System.Nullable"/> return type.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
            <param name="defaultValue">
            The default value to return when <c>Nullable.HasValue == false</c>.
            </param>
            <returns>
            Always returns a <see cref="T:System.Nullable"/>
            as parse failure means <c>HasValue</c>
            is false.
            </returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseRfc3339DateTime(System.String)">
            <summary>
            Parses the RFC3339 date and time.
            </summary>
            <param name="value">The value.</param>
            <remarks>
                This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic).
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseRfc822DateTime(System.String)">
            <summary>
            Parses the RFC822 date and time.
            </summary>
            <param name="value">The value.</param>
            <remarks>
                This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic).
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseString(System.Object)">
            <summary>
            Tries to convert the specified value
            to a <see cref="T:System.String"/>.
            </summary>
            <param name="value">
            The specified <see cref="T:System.Object"/> box.
            </param>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ParseString(System.Object,System.String)">
            <summary>
            Tries to convert the specified value
            to a <see cref="T:System.String"/>.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.TryParseRfc3339DateTime(System.String,System.DateTime@)">
            <summary>
            Tries the parse RFC3339 date and time.
            </summary>
            <param name="value">The value.</param>
            <param name="result">The result.</param>
            <remarks>
                This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic).
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.TryParseRfc822DateTime(System.String,System.DateTime@)">
            <summary>
            Tries the parse RFC822 date and time.
            </summary>
            <param name="value">The value.</param>
            <param name="result">The result.</param>
            <remarks>
                This member is based on patterns in the Argotic Syndication Framework (http://www.codeplex.com/Argotic).
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertDateTimeFromUnixTime(System.Double)">
            <summary>
            Converts Unix time stamps
            to <see cref="T:System.DateTime"/>.
            </summary>
            <param name="time">A <see cref="T:System.Double"/>.</param>
            <returns>A <see cref="T:System.DateTime"/>.</returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertDateTimeToRfc3339DateTime(System.DateTime)">
            <summary>
            Converts the specified <see cref="T:System.DateTime"/> to RFC3339.
            </summary>
            <param name="utcDateTime">The UTC date and time.</param>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertDateTimeToRfc822DateTime(System.DateTime)">
            <summary>
            /// Converts the specified <see cref="T:System.DateTime"/> to RFC822.
            </summary>
            <param name="dateTime">The date and time.</param>
            <remarks>
            “Shortcomings of OPML… The RFC 822 date format is considered obsolete,
            and amongst other things permits the representation of years as two digits.
            (RFC 822 has been superseded by RFC 2822.)
            In general, date and time formats should be represented according to RFC 3339.”
            http://www.answers.com/topic/opml
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertDateTimeToUnixTime">
            <summary>
            Converts the current time
            to a Unix time stamp.
            </summary>
            <returns>A <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertDateTimeToUnixTime(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/>
            to a Unix time stamp.
            </summary>
            <param name="dateValue">The <see cref="T:System.DateTime"/>.</param>
            <returns>A <see cref="T:System.Double"/>.</returns>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertDateTimeToUtc(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/>
            to UTC (ISO 8601).
            </summary>
            <param name="dateValue">The <see cref="T:System.DateTime"/>.</param>
            <remarks>
            For detail, see https://stackoverflow.com/a/1728437/22944.
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertInchesToPoints(System.Single)">
            <summary>
            Converts inches as a <see cref="T:System.Single"/>
            to points.
            </summary>
            <param name="inches">The inches.</param>
            <remarks>
            1 point = 0.013837 inch
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.ConvertPointsToInches(System.Single)">
            <summary>
            Converts points as a <see cref="T:System.Single"/>
            to inches.
            </summary>
            <param name="points">The points.</param>
            <remarks>
            1 point = 0.013837 inch
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.GenerateRandomPassword(System.Int32)">
            <summary>
            Generates the random password.
            </summary>
            <param name="passwordLength">Length of the password.</param>
            <remarks>
            See “Generate random password in C#” by Mads Kristensen
            [http://madskristensen.net/post/Generate-random-password-in-C]
            </remarks>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.IsNullOrEmptyString(System.Object)">
            <summary>
            Returns <c>true</c> when the specified value
            is <c>null</c> or <see cref="F:System.String.Empty"/>.
            </summary>
            <param name="boxedString">The framework value.</param>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.IsNullOrEmptyOrNotArray(System.Object)">
            <summary>
            Returns <c>true</c> when the specified value
            is an empty array, not an array or null.
            </summary>
            <param name="boxedArray">The specified value.</param>
        </member>
        <member name="M:Songhay.ProgramTypeUtility.SqlDatabaseNull">
            <summary>
            Returns the conventional database null
            (<see cref="T:System.DBNull"/>)
            for Microsoft SQL Server systems.
            </summary>
            <returns><see cref="T:System.DBNull"/></returns>
        </member>
        <member name="T:Songhay.ProgramUtility">
            <summary>
            Defines shared routines for Studio programs.
            </summary>
        </member>
        <member name="M:Songhay.ProgramUtility.GetConsoleCharacters(System.String)">
            <summary>
            Gets the console characters.
            </summary>
            <param name="input">The input.</param>
            <returns>Returns formatted input.</returns>
        </member>
        <member name="M:Songhay.ProgramUtility.GetConsoleIndentation(System.Int32,System.Int32)">
            <summary>
            Gets the indentation spaces for test display.
            </summary>
            <param name="numberOfSpaces"></param>
            <param name="indentationLevel"></param>
        </member>
        <member name="M:Songhay.ProgramUtility.StartProcess(System.String)">
            <summary>
            Starts the process.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Songhay.ProgramUtility.StartProcess(System.String,System.String,System.Boolean)">
            <summary>
            Starts the process.
            </summary>
            <param name="argumentOfExe">The argument of executable.</param>
            <param name="pathToExe">The path to executable.</param>
            <param name="useExe">if set to <c>true</c> use path to executable.</param>
        </member>
        <member name="M:Songhay.ProgramUtility.GetCurrentMethodName">
            <summary>
            Gets the name of the current method.
            </summary>
        </member>
        <member name="M:Songhay.ProgramUtility.GetMethodName(System.Int32)">
            <summary>
            Gets the name of the current method.
            </summary>
            <param name="stackFrameIndex">Index of the stack frame.</param>
        </member>
        <member name="M:Songhay.ProgramUtility.InitializeTraceSource(System.Diagnostics.TraceListener)">
            <summary>
            Initializes the trace source.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Songhay.ProgramUtility.LoadConfiguration(System.String)">
            <summary>
            Loads the configuration.
            </summary>
            <param name="basePath">The base path.</param>
        </member>
        <member name="M:Songhay.ProgramUtility.LoadConfiguration(System.String,System.String[])">
            <summary>
            Loads the built configuration.
            </summary>
            <param name="basePath">The base path.</param>
            <param name="requiredJsonConfigurationFiles">specify any additional JSON configuration files before build</param>
            <returns>Returns the built configuration.</returns>
        </member>
        <member name="M:Songhay.ProgramUtility.LoadConfiguration(System.String,System.Func{Microsoft.Extensions.Configuration.IConfigurationBuilder,Microsoft.Extensions.Configuration.IConfigurationBuilder},System.String[])">
            <summary>
            Loads the built configuration.
            </summary>
            <param name="basePath">The base path.</param>
            <param name="builderModifier">Allows modification of <see cref="T:Microsoft.Extensions.Configuration.ConfigurationBuilder"/> before build.</param>
            <param name="requiredJsonConfigurationFiles">specify any additional JSON configuration files before build</param>
            <returns>Returns the built configuration.</returns>
        </member>
        <member name="M:Songhay.ProgramUtility.HandleDebug">
            <summary>
            Pauses the shell Program in <c>DEBUG</c> mode.
            </summary>
        </member>
        <member name="T:Songhay.TaskUtility">
            <summary>
            Members for <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
        </member>
        <member name="M:Songhay.TaskUtility.Delay(System.TimeSpan,System.Action{System.Threading.Tasks.Task})">
            <summary>
            Delays with a <see cref="T:System.Threading.Timer"/> task for the specified <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timeSpan">The specified <see cref="T:System.TimeSpan"/>.</param>
            <param name="actionAfterDelay">The continuation action.</param>
        </member>
        <member name="M:Songhay.TaskUtility.Delay(System.TimeSpan,System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)">
            <summary>
            Delays with a <see cref="T:System.Threading.Timer"/> task for the specified <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="timeSpan">The specified <see cref="T:System.TimeSpan"/>.</param>
            <param name="actionAfterDelay">The continuation action.</param>
            <param name="schedulerAfterDelay">The work-queue scheduler.</param>
        </member>
        <member name="T:Songhay.Text.CsvExporter`1">
            <summary>
            Transforms and exports the specified class to CSV format.
            </summary>
            <typeparam name="T">the class to export</typeparam>
            <remarks>
            Based on http://stackoverflow.com/questions/2422212/simple-c-sharp-csv-excel-export-class
            </remarks>
        </member>
        <member name="M:Songhay.Text.CsvExporter`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Text.CsvExporter`1"/> class.
            </summary>
            <param name="rows">The rows.</param>
        </member>
        <member name="M:Songhay.Text.CsvExporter`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.Text.CsvExporter`1"/> class.
            </summary>
            <param name="rows">The rows.</param>
            <param name="columns">The columns.</param>
        </member>
        <member name="P:Songhay.Text.CsvExporter`1.Columns">
            <summary>
            Gets the columns.
            </summary>
        </member>
        <member name="P:Songhay.Text.CsvExporter`1.Rows">
            <summary>
            Gets the rows.
            </summary>
        </member>
        <member name="M:Songhay.Text.CsvExporter`1.Export">
            <summary>
            Exports this instance.
            </summary>
        </member>
        <member name="M:Songhay.Text.CsvExporter`1.Export(System.Boolean)">
            <summary>
            Exports the specified include header line.
            </summary>
            <param name="includeHeaderLine">if set to <c>true</c> [include header line].</param>
        </member>
        <member name="M:Songhay.Text.CsvExporter`1.ExportToFile(System.String)">
            <summary>
            Exports to file.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Text.CsvExporter`1.ExportToBytes">
            <summary>
            Exports to bytes.
            </summary>
        </member>
        <member name="T:Songhay.Xml.HtmlUtility">
            <summary>
            Static members for HTML text processing.
            </summary>
        </member>
        <member name="M:Songhay.Xml.HtmlUtility.ConvertToHtml(System.String)">
            <summary>
            Returns a string of marked up text compatible
            with browsers that do not support XHTML
            (loosely towards HTML 4.x W3C standard).
            </summary>
            <param name="input">A <see cref="T:System.String"/> of markup.</param>
        </member>
        <member name="M:Songhay.Xml.HtmlUtility.ConvertToXml(System.String)">
            <summary>
            Attempts to convert HTML to well-formed XML.
            </summary>
            <param name="html">An HTML <see cref="T:System.String"/>.</param>
            <remarks>This task is simpler than converting to XHTML.</remarks>
        </member>
        <member name="M:Songhay.Xml.HtmlUtility.FormatXhtmlElements(System.String)">
            <summary>
            Returns an XHTML string derived from a .NET procedure.
            </summary>
            <param name="xmlFragment">
            A well-formed <see cref="T:System.String"/> of XML.
            </param>
            <remarks>
            This member addresses certain quirks
            that well-formed XML cannot have in a contemporary Web browser.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.HtmlUtility.GetInnerXml(System.String,System.String)">
            <summary>
            Returns the …inner… fragment of XML
            from the specified unique element.
            </summary>
            <param name="xmlFragment">
            A well-formed <see cref="T:System.String"/> of XML.
            </param>
            <param name="elementName">
            The local name of the element in the XML string.
            </param>
        </member>
        <member name="M:Songhay.Xml.HtmlUtility.PublicDocType(System.String,System.String,System.String)">
            <summary>
            Emits a public <c>DOCTYPE</c> tag.
            </summary>
            <param name="rootElement">
            The root element of the DTD.
            </param>
            <param name="publicIdentifier">
            The public identifier of the DTD.
            </param>
            <param name="resourceReference">
            The link to reference material of the DTD.
            </param>
            <returns>
            A public <c>DOCTYPE</c> tag.
            </returns>
        </member>
        <member name="T:Songhay.Xml.LatinGlyphsUtility">
            <summary>
            Condenses and expands Latin glyphs.
            </summary>
        </member>
        <member name="M:Songhay.Xml.LatinGlyphsUtility.Condense(System.String,System.Boolean)">
            <summary>
            Condenses selected decimal entities
            into their Latin glyph equivalent.
            </summary>
            <param name="input">
            The input <see cref="T:System.String"/> containing the decimal entities.
            </param>
            <param name="basicLatinOnly">
            When <c>true</c>, process input for <see cref="T:Songhay.Models.ProgramGlyph"/> array
            where <c>UnicodeInteger &lt; 128</c>.
            </param>
            <returns>
            Returns a <see cref="T:System.String"/> with Latin glyphs.
            </returns>
        </member>
        <member name="M:Songhay.Xml.LatinGlyphsUtility.Expand(System.String,System.Boolean)">
            <summary>
            Expands selected Latin glyphs
            into their decimal entity equivalent.
            </summary>
            <param name="input">
            The input <see cref="T:System.String"/> containing the glyphs.
            </param>
            <param name="basicLatinOnly">
            When <c>true</c>, process input for array of <see cref="T:Songhay.Models.ProgramGlyph"/>
            where <c>UnicodeInteger &lt; 128</c>.
            </param>
            <returns>
            Returns a <see cref="T:System.String"/> with decimal entities.
            </returns>
        </member>
        <member name="M:Songhay.Xml.LatinGlyphsUtility.GetGlyphs(System.Boolean)">
            <summary>
            Gets the array of <see cref="T:Songhay.Models.ProgramGlyph"/>.
            </summary>
        </member>
        <member name="M:Songhay.Xml.LatinGlyphsUtility.RemoveUrlEncodings(System.String,System.Boolean)">
            <summary>
            Replaces any <see cref="P:Songhay.Models.ProgramGlyph.Utf8UrlEncoding"/>
            found in the input with <see cref="F:System.String.Empty"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="basicLatinOnly">
            When <c>true</c>, process input for array of <see cref="T:Songhay.Models.ProgramGlyph"/>
            where <c>UnicodeInteger &lt; 128</c>.
            </param>
        </member>
        <member name="M:Songhay.Xml.LatinGlyphsUtility.RemoveUrlEncodings(System.String,System.Boolean,System.Boolean)">
            <summary>
            Replaces any <see cref="P:Songhay.Models.ProgramGlyph.Utf8UrlEncoding"/>
            found in the input with <see cref="F:System.String.Empty"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="includeWindows1252UrlEncoding">
            When <c>true</c>, search for <see cref="P:Songhay.Models.ProgramGlyph.Windows1252UrlEncoding"/> strings
            in the input.
            </param>
            <param name="basicLatinOnly">
            When <c>true</c>, process input for array of <see cref="T:Songhay.Models.ProgramGlyph"/>
            where <c>UnicodeInteger &lt; 128</c>.
            </param>
        </member>
        <member name="T:Songhay.Xml.OpmlUtility">
            <summary>
            Static helpers for OPML.
            </summary>
        </member>
        <member name="P:Songhay.Xml.OpmlUtility.rx">
            <summary>
            Conventional namespace for OPML documents.
            </summary>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetBody(System.Xml.Linq.XContainer,System.Xml.Linq.XNamespace)">
            <summary>
            Gets the <see cref="T:Songhay.Models.OpmlBody"/>.
            </summary>
            <param name="root">The root.</param>
            <param name="ns">The namespace.</param>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetDocument(System.String)">
            <summary>
            Gets the <see cref="T:Songhay.Models.OpmlDocument"/>.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetDocument(System.String,System.Xml.Linq.XNamespace)">
            <summary>
            Gets the <see cref="T:Songhay.Models.OpmlDocument"/>.
            </summary>
            <param name="xml">The XML.</param>
            <param name="ns">The ns.</param>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetDocument(System.Xml.Linq.XContainer,System.Xml.Linq.XNamespace)">
            <summary>
            Gets the <see cref="T:Songhay.Models.OpmlDocument"/>.
            </summary>
            <param name="root">The root.</param>
            <param name="ns">The conventional namespace.</param>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetHead(System.Xml.Linq.XContainer,System.Xml.Linq.XNamespace)">
            <summary>
            Gets the <see cref="T:Songhay.Models.OpmlHead"/>.
            </summary>
            <param name="root">The root.</param>
            <param name="ns">The namespace.</param>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetOutline(System.Xml.Linq.XElement,System.Xml.Linq.XNamespace)">
            <summary>
            Gets the <see cref="T:Songhay.Models.OpmlOutline"/>.
            </summary>
            <param name="root">The root.</param>
            <param name="ns">The namespace.</param>
        </member>
        <member name="M:Songhay.Xml.OpmlUtility.GetOutlines(System.Xml.Linq.XContainer,System.Xml.Linq.XNamespace)">
            <summary>
            Gets the array of <see cref="T:Songhay.Models.OpmlOutline"/>.
            </summary>
            <param name="root">The root.</param>
            <param name="ns">The namespace.</param>
        </member>
        <member name="T:Songhay.Xml.XhtmlDocumentUtility">
            <summary>
            Static members for XHTML Documents.
            </summary>
        </member>
        <member name="P:Songhay.Xml.XhtmlDocumentUtility.Xhtml">
            <summary>
            XHTML Namespace
            </summary>
        </member>
        <member name="M:Songhay.Xml.XhtmlDocumentUtility.GetDocument(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Loads the <see cref="T:Songhay.Models.XhtmlDocument"/>.
            </summary>
            <param name="document">The XML document.</param>
            <param name="webPath">The public web path.</param>
        </member>
        <member name="M:Songhay.Xml.XhtmlDocumentUtility.GetDocument(System.Xml.Linq.XDocument,System.String,System.Boolean)">
            <summary>
            Loads the <see cref="T:Songhay.Models.XhtmlDocument"/>.
            </summary>
            <param name="document">The XML document.</param>
            <param name="webPath">The public web path.</param>
            <param name="useXhtmlNamespace">if set to <c>true</c> use XHTML namespace (<c>true</c> by default).</param>
        </member>
        <member name="M:Songhay.Xml.XhtmlDocumentUtility.LoadDocument(System.String,System.String)">
            <summary>
            Loads the <see cref="T:Songhay.Models.XhtmlDocument"/>.
            </summary>
            <param name="pathToDocument">The path to document.</param>
            <param name="webPath">The public web path.</param>
        </member>
        <member name="M:Songhay.Xml.XhtmlDocumentUtility.WriteDocumentIndex(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Writes the index of XHTML documents.
            </summary>
            <param name="indexFileName">Name of the index file.</param>
            <param name="indexTitle">The index title.</param>
            <param name="publicRoot">The public root.</param>
            <param name="pathToDirectory">The path to the specified directory.</param>
            <param name="pathToOutput">The path to output.</param>
        </member>
        <member name="T:Songhay.Xml.XmlUtility">
            <summary>
            Static helper members for XML-related routines.
            </summary>
            <remarks>
            These definitions are biased toward
            emitting <see cref="T:System.Xml.XPath.XPathDocument"/> documents.
            However, many accept any input implementing the
            <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.CombineNavigableDocuments(System.Xml.XPath.IXPathNavigable,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Combines two <see cref="T:System.Xml.XPath.IXPathNavigable"/> documents.
            </summary>
            <param name="parentDocument">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> “hosting” document.</param>
            <param name="childDocument">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> child document.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.CombineNavigableDocuments(System.Xml.XPath.IXPathNavigable,System.Xml.XPath.IXPathNavigable,System.String)">
            <summary>
            Combines two <see cref="T:System.Xml.XPath.IXPathNavigable"/> documents.
            </summary>
            <param name="parentDocument">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> “hosting” document.</param>
            <param name="childDocument">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> child document.</param>
            <param name="nodeQuery">The XPath query to the child document location in the “hosting” document. </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInstance``1(System.String)">
            <summary>
            Deserializes based on the specified XML file.
            </summary>
            <typeparam name="T">
            The specified type to deserialize.
            </typeparam>
            <param name="xmlPath">The XML file path.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInstanceRaw``1(System.String)">
            <summary>
            Deserializes based on the specified raw XML.
            </summary>
            <typeparam name="T">
            The specified type to deserialize.
            </typeparam>
            <param name="xmlFragment">The raw XML.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String)">
            <summary>
            Returns an XML <see cref="T:System.String"/>
            based on the specified header and lines.
            </summary>
            <param name="messageHeader">Message header.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String[])">
            <summary>
            Returns an XML <see cref="T:System.String"/>
            based on the specified header and lines.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageLines">Message lines.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.String})">
            <summary>
            Returns an XML <see cref="T:System.String"/>
            based on the specified header and lines.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageLines">Message lines.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns an XML <see cref="T:System.String"/>
            based on the specified header and lines.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageCode">Message code for errors, exceptions or faults.</param>
            <param name="messageLines">Message lines.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String[],System.Xml.XmlWriter)">
            <summary>
            Gets the conventional, XML <c>&lt;InternalMessage&gt;</c>.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageLines">Message lines.</param>
            <param name="xmlDataWriter">The <see cref="T:System.Xml.XmlWriter"/>.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String,System.String[],System.Xml.XmlWriter)">
            <summary>
            Gets the conventional, XML <c>&lt;InternalMessage&gt;</c>.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageCode">Message code for errors, exceptions or faults.</param>
            <param name="messageLines">Message lines.</param>
            <param name="xmlDataWriter">The <see cref="T:System.Xml.XmlTextWriter"/>.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String[],System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Gets the conventional, XML <c>&lt;InternalMessage&gt;</c>.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageLines">Message lines.</param>
            <param name="xmlDataWriter">The <see cref="T:System.Xml.XmlWriter"/>.</param>
            <param name="isFragment">When <c>false</c> a new document is started.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String,System.String[],System.Xml.XmlWriter,System.Boolean)">
            <summary>
            Gets the conventional, XML <c>&lt;InternalMessage&gt;</c>.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageCode">Message code for errors, exceptions or faults.</param>
            <param name="messageLines">Message lines.</param>
            <param name="xmlDataWriter">The <see cref="T:System.Xml.XmlWriter"/>.</param>
            <param name="isFragment">When <c>false</c> a new document is started.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessageDocument(System.String,System.String[])">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the specified header and lines.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageLines">Message lines.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetInternalMessageDocument(System.String,System.String,System.String[])">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the specified header and lines.
            </summary>
            <param name="messageHeader">Message header.</param>
            <param name="messageCode">Message code for errors, exceptions or faults</param>
            <param name="messageLines">Message lines.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNamespaceManager(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns a <see cref="T:System.Xml.XmlNamespaceManager"/>
            with respect to the document element of the specified
            <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </summary>
            <param name="navigable">
            The <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableDocument(System.String)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the specified <see cref="T:System.String"/>.
            </summary>
            <param name="xmlFragment">
            A well-formed XML <see cref="T:System.String"/>.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableDocument(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the specified <see cref="T:System.Xml.XmlNode"/>.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <remarks>
            Use this member to convert <see cref="T:System.Xml.XmlDocument"/> documents.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableDocument(System.IO.Stream)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableNode(System.Xml.XPath.IXPathNavigable,System.String)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathNavigator"/>
            based on the nodeQuery Expression toward the source document.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="nodeQuery">
            The value to be compiled
            into an <see cref="T:System.Xml.XPath.XPathExpression"/>.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableNode(System.Xml.XPath.IXPathNavigable,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathNavigator"/>
            based on the nodeQuery Expression toward the source document.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="nodeQuery">
            The value to be compiled
            into an <see cref="T:System.Xml.XPath.XPathExpression"/>.
            </param>
            <param name="nsMan">
            The <see cref="T:System.Xml.XmlNamespaceManager"/>
            to use to resolve prefixes.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableNodes(System.Xml.XPath.IXPathNavigable,System.String)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathNodeIterator"/>
            based on the nodeQuery Expression toward the source document.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="nodeQuery">
            The value to be compiled
            into an <see cref="T:System.Xml.XPath.XPathExpression"/>.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNavigableNodes(System.Xml.XPath.IXPathNavigable,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathNodeIterator"/>
            based on the nodeQuery Expression toward the source document.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="nodeQuery">
            The value to be compiled
            into an <see cref="T:System.Xml.XPath.XPathExpression"/>.
            </param>
            <param name="nsMan">
            The <see cref="T:System.Xml.XmlNamespaceManager"/>
            to use to resolve prefixes.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <c>true</c>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,System.Object)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <c>true</c>, throw an exception for null nodes.</param>
            <param name="defaultValue">Return the specified default value for “zero-length” text nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,System.Object,System.Xml.XmlNamespaceManager)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <c>true</c>, throw an exception for null nodes.</param>
            <param name="defaultValue">Return the specified default value for “zero-length” text nodes.</param>
            <param name="nsMan">
            The <see cref="T:System.Xml.XmlNamespaceManager"/>
            to use to resolve prefixes.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNodeValueAndParse``1(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,``0)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The XPath <see cref="T:System.String"/>.</param>
            <param name="throwException">When <c>true</c>, throw an exception for null nodes and nodes that do not parse into the specified type.</param>
            <param name="defaultValue">Return a boxing <see cref="T:System.Object"/> for “zero-length” text nodes.</param>
            <typeparam name="T">The type to parse from the node value.</typeparam>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetNodeValueAndParse``1(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,``0,System.Xml.XmlNamespaceManager)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The XPath <see cref="T:System.String"/>.</param>
            <param name="throwException">When <c>true</c>, throw an exception for null nodes and nodes that do not parse into the specified type.</param>
            <param name="defaultValue">Return a boxing <see cref="T:System.Object"/> for “zero-length” text nodes.</param>
            <param name="nsMan">
            The <see cref="T:System.Xml.XmlNamespaceManager"/>
            to use to resolve prefixes.
            </param>
            <typeparam name="T">The type to parse from the node value.</typeparam>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetText(System.IO.MemoryStream)">
            <summary>
            “Cleans” XML data returning
            in a <see cref="T:System.IO.MemoryStream"/>.
            </summary>
            <param name="ramStream"><see cref="T:System.IO.MemoryStream"/></param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetXslResult(System.Xml.XPath.IXPathNavigable,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            for the transformation of the XSLT document
            and the XML document.
            </summary>
            <param name="navigableXsl">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XSL document.
            </param>
            <param name="navigableSet">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XML document.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetXslResult(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            for the transformation of the XSLT document
            and the XML document.
            </summary>
            <param name="navigableXsl">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XSL document.
            </param>
            <param name="xslArgs">
            The <see cref="T:System.Xml.Xsl.XsltArgumentList"/>.
            </param>
            <param name="navigableXml">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XML document.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetXslString(System.Xml.XPath.IXPathNavigable,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT document
            and the XML document.
            </summary>
            <param name="navigableXsl">The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XSL document.</param>
            <param name="navigableSet">The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XML document.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetXslString(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT document
            and the XML document.
            </summary>
            <param name="navigableXsl">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XSL document.
            </param>
            <param name="xslArgs">
            The <see cref="T:System.Xml.Xsl.XsltArgumentList"/>.
            </param>
            <param name="navigableXml">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XML document.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetXslString(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriterSettings)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT document
            and the XML document.
            </summary>
            <param name="navigableXsl">The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XSL document.</param>
            <param name="xslArgs">The <see cref="T:System.Xml.Xsl.XsltArgumentList"/>.</param>
            <param name="navigableXml">The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> XML document.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.InputAs``1(``0)">
            <summary>
            Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>,
            converted from the specified input.
            </summary>
            <typeparam name="TIn">The <see cref="T:System.Type"/> of the input.</typeparam>
            <param name="input">The input.</param>
            <returns>Returns an <see cref="T:System.Xml.XPath.XPathDocument"/>.</returns>
            <remarks>
            This member only supports <c>TIn</c> as
            <see cref="T:System.String"/>, <see cref="T:System.Xml.XmlDocument"/> or <see cref="T:System.Xml.XPath.XPathDocument"/>.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,System.String)">
            <summary>
            Returns true when the node has the specified value.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="testValue">The specified value to test with the node value.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,System.String,System.StringComparison)">
            <summary>
            Returns true when the node has the specified value.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="testValue">The specified value to test with the node value.</param>
            <param name="comparisonType">The <see cref="T:System.StringComparison"/> type.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            Returns true when the node has the specified value.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="testValue">The specified value to test with the node value.</param>
            <param name="nsMan">
            The <see cref="T:System.Xml.XmlNamespaceManager"/>
            to use to resolve prefixes.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean,System.String,System.Xml.XmlNamespaceManager,System.StringComparison)">
            <summary>
            Returns true when the node has the specified value.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="testValue">The specified value to test with the node value.</param>
            <param name="nsMan">
            The <see cref="T:System.Xml.XmlNamespaceManager"/>
            to use to resolve prefixes.
            </param>
            <param name="comparisonType">The <see cref="T:System.StringComparison"/> type.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsNoNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean)">
            <summary>
            Returns true when the node has the value “no”.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsYesNodeValue(System.Xml.XPath.IXPathNavigable,System.String,System.Boolean)">
            <summary>
            Returns true when the node has the value “yes”.
            </summary>
            <param name="node">The <see cref="T:System.Xml.XPath.IXPathNavigable"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.IsXml(System.String)">
            <summary>
            Returns <c>true</c> when the fragment is XML-like.
            </summary>
            <param name="fragment">The fragment to test.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXslTransform(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT file
            and the XML file.
            </summary>
            <param name="xslPath">
            Output path to the XSLT file.
            </param>
            <param name="xmlPath">
            Output path to the XML file.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXslTransform(System.String,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT file
            and the XML file.
            </summary>
            <param name="xslPath">
            Output path to the XSLT file.
            </param>
            <param name="commandName">
            The value for the <code>cmd</code>-parameter convention.
            </param>
            <param name="xmlPath">
            Output path to the XML file.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXslTransform(System.String,System.Xml.Xsl.XsltArgumentList,System.String)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT file
            and the XML file.
            </summary>
            <param name="xslPath">
            Output path to the XSLT file.
            </param>
            <param name="xslArgs">
            The <see cref="T:System.Xml.Xsl.XsltArgumentList"/>.
            </param>
            <param name="xmlPath">
            Output path to the XML file.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXslTransformForMemoryInput(System.String,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT file
            and the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> in memory.
            </summary>
            <param name="xslPath">
            Output path to the XSLT file.
            </param>
            <param name="commandName">
            The value for the <code>cmd</code>-parameter convention.
            </param>
            <param name="xmlFragment">
            A well-formed XML <see cref="T:System.String"/>.
            </param>
            <remarks>
            This convention is used in ASP.NET Web applications.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXslTransformForMemoryInput(System.String,System.String,System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT file
            and the specified <see cref="T:System.Xml.XPath.IXPathNavigable"/> in memory.
            </summary>
            <param name="xslPath">
            Output path to the XSLT file.
            </param>
            <param name="commandName">
            The value for the <code>cmd</code>-parameter convention.
            </param>
            <param name="navigableXml">
            The <see cref="T:System.Xml.XPath.IXPathNavigable"/> in memory.
            </param>
            <remarks>
            This convention is used in ASP.NET Web applications.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXslTransformForMemoryInput(System.String,System.Xml.Xsl.XsltArgumentList,System.String)">
            <summary>
            Returns a <see cref="T:System.String"/>
            for the transformation of the XSLT file
            and the XML in-memory fragment.
            </summary>
            <param name="xslPath">
            Output path to the XSLT file.
            </param>
            <param name="xslArgs">
            The <see cref="T:System.Xml.Xsl.XsltArgumentList"/>.
            </param>
            <param name="xmlFragment">
            A well-formed XML <see cref="T:System.String"/>.
            </param>
            <remarks>
            This convention is used in ASP.NET Web applications.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.OutputAs``1(System.String)">
            <summary>
            Returns strongly typed output, converting the XML fragment.
            </summary>
            <typeparam name="TOut">The <see cref="T:System.Type"/> of output to return (constrained to <c>class</c>).</typeparam>
            <param name="xmlFragment">An XML fragment or document as a well-formed <see cref="T:System.String"/>.</param>
            <returns>Returns the specified <see cref="T:System.Type"/>.</returns>
            <remarks>
            This member only supports <c>TIn</c> as
            <see cref="T:System.String"/>, <see cref="T:System.Xml.XmlDocument"/> or <see cref="T:System.Xml.XPath.XPathDocument"/>.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.OutputAs``1(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Returns strongly typed output, converting the Navigable document.
            </summary>
            <typeparam name="TOut">The <see cref="T:System.Type"/> of output to return (constrained to <c>class</c>).</typeparam>
            <param name="navigableDocument">An <see cref="T:System.Xml.XPath.IXPathNavigable"/>.</param>
            <returns>Returns the specified <see cref="T:System.Type"/>.</returns>
            <remarks>
            This member only supports <c>TIn</c> as
            <see cref="T:System.String"/>, <see cref="T:System.Xml.XmlDocument"/> or <see cref="T:System.Xml.XPath.XPathDocument"/>.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.StripNamespaces(System.String)">
            <summary>
            Strip the namespaces from specified <see cref="T:System.String"/>.
            </summary>
            <param name="xml">
            The source <see cref="T:System.String"/>.
            </param>
            <remarks>
            WARNING: Stripping namespaces “flattens” the document
            and can cause local-name collisions.
            
            This routine does not remove namespace prefixes.
            
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.StripNamespaces(System.String,System.Boolean)">
            <summary>
            Strip the namespaces from specified <see cref="T:System.String"/>.
            </summary>
            <param name="xml">
            The source <see cref="T:System.String"/>.
            </param>
            <param name="removeDocType">
            When <c>true</c>, removes any DOCTYPE preambles.
            </param>
            <remarks>
            WARNING: Stripping namespaces “flattens” the document
            and can cause local-name collisions.
            
            This routine does not remove namespace prefixes.
            
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.StripNamespaces(System.Xml.XPath.IXPathNavigable)">
            <summary>
            Strip the namespaces from specified document.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <remarks>
            WARNING: Stripping namespaces “flattens” the document
            and can cause local-name collisions.
            
            This routine does not remove namespace prefixes.
            
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.StripNamespaces(System.Xml.XPath.IXPathNavigable,System.Boolean)">
            <summary>
            Strip the namespaces from specified document.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="removeDocType">
            When <c>true</c>, removes any DOCTYPE preambles.
            </param>
            <remarks>
            WARNING: Stripping namespaces “flattens” the document
            and can cause local-name collisions.
            
            This routine does not remove namespace prefixes.
            
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.GetXmlSchema(System.Xml.XPath.IXPathNavigable,System.Xml.Schema.ValidationEventHandler)">
            <summary>
            Returns an <see cref="T:System.Xml.Schema.XmlSchema"/> based
            on the specified navigable set and validation event handler.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="eventHandler">
            The <see cref="T:System.Xml.Schema.ValidationEventHandler"/>
            with signature MyHandler(object sender, ValidationEventArgs args).
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.LoadXmlSchema(System.String,System.Xml.Schema.ValidationEventHandler)">
            <summary>
            Loads an <see cref="T:System.Xml.Schema.XmlSchema"/> based
            on the specified navigable set and validation event handler.
            </summary>
            <param name="pathToSchema">
            The valid path to an XML Schema file.
            </param>
            <param name="eventHandler">
            The <see cref="T:System.Xml.Schema.ValidationEventHandler"/>
            with signature MyHandler(object sender, ValidationEventArgs args).
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.ValidateNavigableNode(System.Xml.XPath.IXPathNavigable,System.Xml.Schema.XmlSchema,System.Xml.Schema.ValidationEventHandler)">
            <summary>
            Validates the specified navigable set
            with the specified schema and validation event handler.
            </summary>
            <param name="navigable">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="schema">
            The <see cref="T:System.Xml.Schema.XmlSchema"/>.
            </param>
            <param name="eventHandler">
            The <see cref="T:System.Xml.Schema.ValidationEventHandler"/>
            with signature MyHandler(object sender, ValidationEventArgs args).
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.Write``1(``0,System.String)">
            <summary>
            Serializes and writes to the specified path.
            </summary>
            <typeparam name="T">The type of the instance.</typeparam>
            <param name="instance">The instance.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.WriteReader(System.Xml.XmlReader,System.Xml.XmlWriter)">
            <summary>
            Transfers the data in the Source to the Destination.
            </summary>
            <param name="readerSource">The <see cref="T:System.Xml.XmlReader"/>.</param>
            <param name="writerDestination">The <see cref="T:System.Xml.XmlWriter"/>.</param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.WriteXslTransform(System.Xml.XPath.IXPathNavigable,System.Xml.XPath.IXPathNavigable,System.String)">
            <summary>
            Transforms the specified navigable documents
            and writes to disk with the specified path.
            </summary>
            <param name="xmlInput">The specified input.</param>
            <param name="navigableXsl">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="outputPath">
            The file-system, target path.
            </param>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.WriteXslTransform(System.Xml.XmlReader,System.Xml.XPath.IXPathNavigable,System.String)">
            <summary>
            Transforms the specified input and writes to disk.
            </summary>
            <param name="xmlInput">The specified input.</param>
            <param name="navigableXsl">
            The source <see cref="T:System.Xml.XPath.IXPathNavigable"/> document.
            </param>
            <param name="outputPath">
            The file-system, target path.
            </param>
        </member>
        <member name="F:Songhay.Xml.XmlUtility.ConventionalHtmlEntities">
            <summary>
            The conventional HTML entities mapped to their respective glyphs.
            </summary>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.XmlEncode(System.String)">
            <summary>
            Transforms selected XML glyphs
            into their respective HTML entities.
            </summary>
            <param name="value">The value.</param>
            <seealso cref="M:Songhay.Xml.LatinGlyphsUtility.Expand(System.String,System.Boolean)"/>
            <remarks>This member will preserve HTML comments.</remarks>
        </member>
        <member name="M:Songhay.Xml.XmlUtility.XmlDecode(System.String)">
            <summary>
            Transforms selected HTML entities
            into their respective glyphs.
            </summary>
            <param name="value">The value.</param>
            <seealso cref="M:Songhay.Xml.LatinGlyphsUtility.Condense(System.String,System.Boolean)"/>
        </member>
        <member name="T:Songhay.Xml.XObjectUtility">
            <summary>
            Static helper members for XML-related routines.
            </summary>
            <remarks>
            These definitions are biased toward emitting <see cref="T:System.Xml.XPath.XPathDocument"/> documents.
            However, many accept any input implementing the <see cref="T:System.Xml.XPath.IXPathNavigable"/> interface.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetCDataValue(System.Xml.Linq.XElement)">
            <summary>
            Get the CDATA value from the specified <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="element">The <see cref="T:System.Xml.Linq.XElement"/>.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetCDataValue(System.Xml.Linq.XNode)">
            <summary>
            Get the CDATA value from the specified <see cref="T:System.Xml.Linq.XNode"/>.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/>.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetLocalNameXPathQuery(System.String)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XNode" /> into a <c>local-name()</c>, XPath-predicate query.
            </summary>
            <param name="childElementName">Name of the child element.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetLocalNameXPathQuery(System.String,System.String)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XNode" /> into a <c>local-name()</c>, XPath-predicate query.
            </summary>
            <param name="namespacePrefixOrUri">The namespace prefix or URI.</param>
            <param name="childElementName">Name of the child element.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetLocalNameXPathQuery(System.String,System.String,System.String)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XNode" /> into a <c>local-name()</c>, XPath-predicate query.
            </summary>
            <param name="namespacePrefixOrUri">The namespace prefix or URI.</param>
            <param name="childElementName">Name of the child element.</param>
            <param name="childAttributeName">Name of the child attribute.</param>
            <remarks>
            This routine is useful when namespace-resolving is not desirable or available.
            </remarks>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetValue(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets the element or attribute value of the specified element.
            </summary>
            <param name="currentNode">The current element.</param>
            <param name="query">The xpath query.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetValue(System.Xml.Linq.XNode,System.String,System.Boolean)">
            <summary>
            Gets the element or attribute value of the current element.
            </summary>
            <param name="currentNode">The current <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="query">The xpath query.</param>
            <param name="throwException">if set to <c>true</c> throw exception.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXAttributeValue(System.Xml.Linq.XNode,System.String,System.Boolean)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXAttributeValue(System.Xml.Linq.XNode,System.String,System.Boolean,System.String)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="defaultValue">Return the specified default value for “zero-length” text nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXAttributeValue(System.Xml.Linq.XNode,System.String,System.Boolean,System.String,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="defaultValue">Return the specified default value for “zero-length” text nodes.</param>
            <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver"/> to use to resolve prefixes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXAttributeValueAndParse``1(System.Xml.Linq.XNode,System.String,System.Boolean,``0)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="nodeQuery">The XPath <see cref="T:System.String"/>.</param>
            <param name="throwException">
            When <code>true</code>, throw an exception for null nodes
            and nodes that do not parse into the specified type.
            </param>
            <param name="defaultValue">Return a boxing <see cref="T:System.Object"/> for “zero-length” text nodes.</param>
            <typeparam name="T">The type to parse from the node value.</typeparam>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXAttributeValueAndParse``1(System.Xml.Linq.XNode,System.String,System.Boolean,``0,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Returns an object for parsing
            and adding to a list of parameters for data access.
            </summary>
            <typeparam name="T">The type to parse from the node value.</typeparam>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="nodeQuery">The XPath <see cref="T:System.String"/>.</param>
            <param name="throwException">
            When <code>true</code>, throw an exception for null nodes
            and nodes that do not parse into the specified type.
            </param>
            <param name="defaultValue">Return a boxing <see cref="T:System.Object"/> for “zero-length” text nodes.</param>
            <param name="resolver">The <see cref="T:System.Xml.IXmlNamespaceResolver"/> to use to resolve prefixes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXDeclaration">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XDeclaration"/>.
            </summary>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXDeclaration(System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XDeclaration"/>.
            </summary>
            <param name="encoding">The encoding (<see cref="F:Songhay.Models.XEncoding.Utf08"/> by default).</param>
            <param name="isStandAlone">When <c>true</c> document is stand-alone (<c>true</c> by default).</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXElement(System.String,System.Object)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XElement" />.
            </summary>
            <param name="rootElement">The root element name.</param>
            <param name="innerXml">The inner XML.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXElement(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XElement" />.
            </summary>
            <param name="root">The root <see cref="T:System.Xml.Linq.XNode"/>.</param>
            <param name="pathToElement">The XPath to element.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXElements(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <param name="currentElement">The current element.</param>
            <param name="query">The xpath query.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXNode(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XNode"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXNode(System.Xml.Linq.XNode,System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XNode"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXNode(System.Xml.Linq.XNode,System.String,System.Boolean,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XNode"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXNodes(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXNodes(System.Xml.Linq.XNode,System.String,System.Boolean)">
            <summary>
            Gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXNodes(System.Xml.Linq.XNode,System.String,System.Boolean,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXObject(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XObject"/> from the specified XPath query.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXObject(System.Xml.Linq.XNode,System.String,System.Boolean)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XObject"/> from the specified XPath query.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXObject(System.Xml.Linq.XNode,System.String,System.Boolean,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Gets the <see cref="T:System.Xml.Linq.XObject"/>.
            </summary>
            <param name="node">The <see cref="T:System.Xml.Linq.XNode"/> node.</param>
            <param name="nodeQuery">The node query <see cref="T:System.String"/>.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="resolver">
            The <see cref="T:System.Xml.IXmlNamespaceResolver"/>
            to use to resolve prefixes.
            </param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXObjects(System.Xml.Linq.XNode,System.String)">
            <summary>
            Gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXObjects(System.Xml.Linq.XNode,System.String,System.Boolean)">
            <summary>
            Gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.GetXObjects(System.Xml.Linq.XNode,System.String,System.Boolean,System.Xml.IXmlNamespaceResolver)">
            <summary>
            Gets <see cref="T:System.Collections.Generic.IEnumerable`1"/> from the specified XPath query.
            </summary>
            <param name="node">The node.</param>
            <param name="nodeQuery">The node query.</param>
            <param name="throwException">When <code>true</code>, throw an exception for null nodes.</param>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="F:Songhay.Xml.XObjectUtility.GlyphNonBreakingSpace">
            <summary>
            Glyph: Non-Breaking Space
            </summary>
        </member>
        <member name="P:Songhay.Xml.XObjectUtility.XTextNonBreakingSpace">
            <summary>
            <see cref="T:System.Xml.Linq.XText"/>: Non-Breaking Space
            </summary>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.JoinFlattenedXTextNodes(System.Xml.Linq.XElement)">
            <summary>
            Joins the flattened <see cref="T:System.Xml.Linq.XText"/> nodes.
            </summary>
            <param name="rootElement">The root element.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.JoinFlattenedXTextNodes(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            Joins the flattened <see cref="T:System.Xml.Linq.XText"/> nodes.
            </summary>
            <param name="rootElement">The root element.</param>
            <param name="includeRootElement">When <c>true</c> include root element.</param>
        </member>
        <member name="M:Songhay.Xml.XObjectUtility.JoinFlattenedXTextNodes(System.Xml.Linq.XElement,System.Boolean,System.String)">
            <summary>
            Joins the flattened <see cref="T:System.Xml.Linq.XText"/> nodes.
            </summary>
            <param name="rootElement">The root element.</param>
            <param name="includeRootElement">When <c>true</c> include root element.</param>
            <param name="joinDelimiter">The join delimiter.</param>
        </member>
    </members>
</doc>
